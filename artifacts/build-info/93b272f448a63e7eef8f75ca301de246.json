{
  "id": "93b272f448a63e7eef8f75ca301de246",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/FinancialNFTOracle.sol": {
        "content": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.0;\n\n////////////////////////////////////////////////////////////////////////////////////////////\n/// @title FinancialNFTOracle\n/// @author @commonlot\n/// @notice oracle contract for NFT\n////////////////////////////////////////////////////////////////////////////////////////////\n\ncontract FinancialNFTOracle {\n\n}\n"
      },
      "contracts/interfaces/IChainlinkV3Aggregator.sol": {
        "content": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.0;\n\ninterface IChainlinkV3Aggregator {\n    function decimals() external view returns (uint8);\n\n    function latestRoundData()\n        external\n        view\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        );\n}\n"
      },
      "contracts/mock/EtherUSDMockAggregator.sol": {
        "content": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '../interfaces/IChainlinkV3Aggregator.sol';\n\ncontract EtherUSDMockAggregator is IChainlinkV3Aggregator {\n    function decimals() external pure override returns (uint8) {\n        return 8;\n    }\n\n    function latestRoundData()\n        external\n        pure\n        override\n        returns (\n            uint80,\n            int256 answer,\n            uint256,\n            uint256,\n            uint80\n        )\n    {\n        answer = 100000000 * 4000;\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
      },
      "contracts/MetaVerseNFTOracle.sol": {
        "content": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport './interfaces/IChainlinkV3Aggregator.sol';\nimport './interfaces/INFTPriceOracle.sol';\n\n////////////////////////////////////////////////////////////////////////////////////////////\n/// @title MetaVerseNFTOracle\n/// @author @commonlot\n/// @notice oracle contract for NFT\n////////////////////////////////////////////////////////////////////////////////////////////\n\ncontract MetaVerseNFTOracle is Ownable, INFTPriceOracle {\n    /// @dev contract addrss => PriceInfo\n    mapping(address => PriceInfo) public nftPrices;\n\n    /// @dev return true when address can read oracle price data\n    mapping(address => bool) public isWhiteListed;\n\n    /// @notice return true if address can update price\n    mapping(address => bool) public isUpdater;\n\n    /// @dev chainlink Price feed for ETH / USD\n    IChainlinkV3Aggregator public override etherPriceAggregator;\n\n    /// @dev decimal\n    uint8 public constant decimals = 8;\n\n    modifier onlyUpdater() {\n        require(isUpdater[msg.sender] || msg.sender == owner(), 'ONLY_UPDATERS');\n        _;\n    }\n\n    modifier onlyWhitelist() {\n        require(isWhiteListed[msg.sender] || msg.sender == owner(), 'ONLY_WHITELIST');\n        _;\n    }\n\n    event SetUpdaters(address[] _updaters, bool[] _statusList);\n    event SetWhiteList(address[] _whiteList, bool[] _statusList);\n    event SetPrice(address _contract, int256 _usdPrice, int256 _etherPrice, address _updater);\n\n    constructor(address _etherUSDAggregator) {\n        etherPriceAggregator = IChainlinkV3Aggregator(_etherUSDAggregator);\n    }\n\n    /// @dev set new updaters that can write NFT price\n    /// @param _updaters address array of updaters\n    /// @param _statusList status array of updaters\n    function setUpdaters(address[] memory _updaters, bool[] memory _statusList) external onlyOwner {\n        require(\n            _updaters.length > 0 &&\n                _statusList.length > 0 &&\n                _statusList.length == _statusList.length,\n            'setUpdaters:INVALID_DATA'\n        );\n        for (uint256 i = 0; i < _updaters.length; i++) {\n            require(_updaters[i] != address(0), 'setUpdaters:INVALID_UPDATER');\n            isUpdater[_updaters[i]] = _statusList[i];\n        }\n\n        emit SetUpdaters(_updaters, _statusList);\n    }\n\n    /// @dev set new price for the NFT\n    /// @param _contract address of collection contract\n    /// @param _usdPrice usd price of NFT token (decimal is 8)\n    function setPrice(address _contract, int256 _usdPrice) external onlyUpdater {\n        require(_contract != address(0), 'setPrice: INVALID_CONTRACT');\n        require(_usdPrice > 0, 'setPrice: INVALID_USD_PRICE');\n\n        int256 _etherPrice = (_usdPrice * 1e8) / etherUSD();\n\n        nftPrices[_contract] = PriceInfo({\n            usdPrice: _usdPrice,\n            etherPrice: _etherPrice,\n            lastUpdatedBlockNumber: block.number\n        });\n\n        emit SetPrice(_contract, _usdPrice, _etherPrice, msg.sender);\n    }\n\n    /// @dev set whitelisted address that can read oracle price data\n    /// @param _whiteList address array\n    /// @param _statusList status array\n    function setWhiteList(address[] memory _whiteList, bool[] memory _statusList)\n        public\n        override\n        onlyOwner\n    {\n        require(\n            _whiteList.length > 0 &&\n                _statusList.length > 0 &&\n                _whiteList.length == _statusList.length,\n            'setWhiteList:INVALID_DATA'\n        );\n        for (uint256 i = 0; i < _whiteList.length; i++) {\n            require(_whiteList[i] != address(0), 'setWhiteList:INVALID_ADDRESS');\n            isWhiteListed[_whiteList[i]] = _statusList[i];\n        }\n\n        emit SetWhiteList(_whiteList, _statusList);\n    }\n\n    /// @return usd & ether price of NFT token\n    function viewPrice(address _contract)\n        external\n        view\n        override\n        onlyWhitelist\n        returns (int256, int256)\n    {\n        require(_contract != address(0), 'viewPrice: INVALID_CONTRACT');\n        PriceInfo memory nft = nftPrices[_contract];\n        return (nft.usdPrice, nft.etherPrice);\n    }\n\n    /// @return price of ether in USD\n    function etherUSD() public view override onlyWhitelist returns (int256 price) {\n        (, price, , , ) = etherPriceAggregator.latestRoundData();\n    }\n}\n"
      },
      "contracts/interfaces/INFTPriceOracle.sol": {
        "content": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.0;\n\nimport './IChainlinkV3Aggregator.sol';\n\ninterface INFTPriceOracle {\n    /// @dev priceInfo of NFT\n    struct PriceInfo {\n        int256 usdPrice;\n        int256 etherPrice;\n        uint256 lastUpdatedBlockNumber;\n    }\n\n    /// @dev chainlink Price feed for ETH / USD\n    function etherPriceAggregator() external returns (IChainlinkV3Aggregator);\n\n    /// @dev set whitelisted address that can read oracle price data\n    function setWhiteList(address[] memory _whiteList, bool[] memory _statusList) external;\n\n    /// @return usd & ether price of NFT token\n    function viewPrice(address _contract) external returns (int256, int256);\n\n    /// @return price: usd price of Ether\n    function etherUSD() external returns (int256);\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
            "kind": "dev",
            "methods": {
              "constructor": {
                "details": "Initializes the contract setting the deployer as the initial owner."
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 7,
                "contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "devdoc": {
            "details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/FinancialNFTOracle.sol": {
        "FinancialNFTOracle": {
          "abi": [],
          "devdoc": {
            "author": "@commonlot",
            "kind": "dev",
            "methods": {},
            "title": "FinancialNFTOracle",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212204f7c6f9dcd407f68894cac8646369613d772aa24e3241ddade705e6e814abfe364736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH29 0x6F9DCD407F68894CAC8646369613D772AA24E3241DDADE705E6E814ABF 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "338:32:2:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea26469706673582212204f7c6f9dcd407f68894cac8646369613d772aa24e3241ddade705e6e814abfe364736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH29 0x6F9DCD407F68894CAC8646369613D772AA24E3241DDADE705E6E814ABF 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "338:32:2:-:0;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "12600",
                "executionCost": "66",
                "totalCost": "12666"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"@commonlot\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FinancialNFTOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"oracle contract for NFT\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FinancialNFTOracle.sol\":\"FinancialNFTOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FinancialNFTOracle.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\n////////////////////////////////////////////////////////////////////////////////////////////\\n/// @title FinancialNFTOracle\\n/// @author @commonlot\\n/// @notice oracle contract for NFT\\n////////////////////////////////////////////////////////////////////////////////////////////\\n\\ncontract FinancialNFTOracle {\\n\\n}\\n\",\"keccak256\":\"0x9af1848354a0788d00b2daed8ed2ad73f88119f2079b12a09dc108f392b2e587\",\"license\":\"Unlicense\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "notice": "oracle contract for NFT",
            "version": 1
          }
        }
      },
      "contracts/MetaVerseNFTOracle.sol": {
        "MetaVerseNFTOracle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_etherUSDAggregator",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "_usdPrice",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "_etherPrice",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_updater",
                  "type": "address"
                }
              ],
              "name": "SetPrice",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "_updaters",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "bool[]",
                  "name": "_statusList",
                  "type": "bool[]"
                }
              ],
              "name": "SetUpdaters",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "_whiteList",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "bool[]",
                  "name": "_statusList",
                  "type": "bool[]"
                }
              ],
              "name": "SetWhiteList",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "etherPriceAggregator",
              "outputs": [
                {
                  "internalType": "contract IChainlinkV3Aggregator",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "etherUSD",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "price",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isUpdater",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isWhiteListed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "nftPrices",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "usdPrice",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "etherPrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdatedBlockNumber",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "_usdPrice",
                  "type": "int256"
                }
              ],
              "name": "setPrice",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_updaters",
                  "type": "address[]"
                },
                {
                  "internalType": "bool[]",
                  "name": "_statusList",
                  "type": "bool[]"
                }
              ],
              "name": "setUpdaters",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_whiteList",
                  "type": "address[]"
                },
                {
                  "internalType": "bool[]",
                  "name": "_statusList",
                  "type": "bool[]"
                }
              ],
              "name": "setWhiteList",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                }
              ],
              "name": "viewPrice",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "@commonlot",
            "kind": "dev",
            "methods": {
              "etherUSD()": {
                "returns": {
                  "price": "of ether in USD"
                }
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "setPrice(address,int256)": {
                "details": "set new price for the NFT",
                "params": {
                  "_contract": "address of collection contract",
                  "_usdPrice": "usd price of NFT token (decimal is 8)"
                }
              },
              "setUpdaters(address[],bool[])": {
                "details": "set new updaters that can write NFT price",
                "params": {
                  "_statusList": "status array of updaters",
                  "_updaters": "address array of updaters"
                }
              },
              "setWhiteList(address[],bool[])": {
                "details": "set whitelisted address that can read oracle price data",
                "params": {
                  "_statusList": "status array",
                  "_whiteList": "address array"
                }
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              },
              "viewPrice(address)": {
                "returns": {
                  "_0": "usd & ether price of NFT token"
                }
              }
            },
            "stateVariables": {
              "decimals": {
                "details": "decimal"
              },
              "etherPriceAggregator": {
                "details": "chainlink Price feed for ETH / USD"
              },
              "isWhiteListed": {
                "details": "return true when address can read oracle price data"
              },
              "nftPrices": {
                "details": "contract addrss => PriceInfo"
              }
            },
            "title": "MetaVerseNFTOracle",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:805:7",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "70:80:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "80:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "138:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "111:33:7"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "48:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "56:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:7",
                            "type": ""
                          }
                        ],
                        "src": "7:143:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "233:207:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "279:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "288:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "291:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "281:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "281:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "281:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "254:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "263:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "250:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "250:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "275:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "246:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "246:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "243:2:7"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "305:128:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "320:15:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "334:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "324:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "349:74:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "395:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "406:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "391:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "391:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "415:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "359:31:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "359:64:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "349:6:7"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "203:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "214:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "226:6:7",
                            "type": ""
                          }
                        ],
                        "src": "156:284:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "491:51:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "501:35:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "530:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "512:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "512:24:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "501:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "473:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "483:7:7",
                            "type": ""
                          }
                        ],
                        "src": "446:96:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "593:81:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "603:65:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "618:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "625:42:7",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "614:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "614:54:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "603:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "575:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "585:7:7",
                            "type": ""
                          }
                        ],
                        "src": "548:126:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "723:79:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "780:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "789:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "792:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "782:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "782:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "782:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "746:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "771:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "753:17:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "753:24:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "743:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "743:35:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "736:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "736:43:7"
                              },
                              "nodeType": "YulIf",
                              "src": "733:2:7"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "716:5:7",
                            "type": ""
                          }
                        ],
                        "src": "680:122:7"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2211 CODESIZE SUB DUP1 PUSH3 0x2211 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x182 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x9F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x1FC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x17C DUP2 PUSH3 0x1E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1A5 DUP5 DUP3 DUP6 ADD PUSH3 0x16B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BB DUP3 PUSH3 0x1C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1ED DUP2 PUSH3 0x1AE JUMP JUMPDEST DUP2 EQ PUSH3 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2005 DUP1 PUSH3 0x20C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9170F6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8E069115 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8E069115 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xA0868E2B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xCC5FE3AB EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26D JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6F9170F6 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x34DD29B EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x173A0DA2 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x1744276D EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x2F55B50D EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x4FDFB086 EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF8 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP3 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1715 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1715 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0xB24 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x167E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xEE3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x313 JUMPI POP PUSH2 0x2E4 PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x352 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x349 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B9 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SGT PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FC SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x40F PUSH2 0x4E8 JUMP JUMPDEST PUSH4 0x5F5E100 DUP4 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH32 0x22774737BA002BAFCE363C9EFF3C94BAD664E904387DC57D10A83AAFFB83E23E DUP4 DUP4 DUP4 CALLER PUSH1 0x40 MLOAD PUSH2 0x4DB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x574 JUMPI POP PUSH2 0x545 PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AA SWAP1 PUSH2 0x17E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x6F2 JUMPI POP PUSH2 0x6C3 PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x17E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x798 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x829 PUSH2 0xFDB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x847 PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 ISZERO PUSH2 0x8AF JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x8BC JUMPI POP DUP1 MLOAD DUP2 MLOAD EQ JUMPDEST PUSH2 0x8FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F2 SWAP1 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x958 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AE SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x9F0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA35 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xA99 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8FE JUMP JUMPDEST POP PUSH32 0xE50DA557BF43FEC25D895622272EF6347B5A619981D17F86766EF104A1E4B211 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xAD3 SWAP3 SWAP2 SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xB2C PUSH2 0xFDB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB4A PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB97 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAA PUSH1 0x0 PUSH2 0xFE3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xC2D PUSH2 0xFDB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC4B PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC98 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 ISZERO PUSH2 0xCB3 JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0xCC0 JUMPI POP DUP1 MLOAD DUP3 MLOAD EQ JUMPDEST PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF6 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD5C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB2 SWAP1 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xDF4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xE39 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xE9D SWAP1 PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD02 JUMP JUMPDEST POP PUSH32 0x849BC039C6DBCF9934F2E6D667158C8C6BDD9487A4154C25D0662A293BDD91EB DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xED7 SWAP3 SWAP2 SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xEEB PUSH2 0xFDB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF09 PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC6 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD8 DUP2 PUSH2 0xFE3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BA PUSH2 0x10B5 DUP5 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1109 JUMPI DUP2 PUSH2 0x10EF DUP9 DUP3 PUSH2 0x117F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x10DC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1126 PUSH2 0x1121 DUP5 PUSH2 0x1992 JUMP JUMPDEST PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1175 JUMPI DUP2 PUSH2 0x115B DUP9 DUP3 PUSH2 0x11E8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1148 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x118E DUP2 PUSH2 0x1F5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x10A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11DF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1113 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11F7 DUP2 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x120C DUP2 PUSH2 0x1F8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1221 DUP2 PUSH2 0x1F8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1236 DUP2 PUSH2 0x1FA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x124B DUP2 PUSH2 0x1FB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1271 DUP5 DUP3 DUP6 ADD PUSH2 0x117F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x129B DUP6 DUP3 DUP7 ADD PUSH2 0x117F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12AC DUP6 DUP3 DUP7 ADD PUSH2 0x11FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EF DUP6 DUP3 DUP7 ADD PUSH2 0x1194 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1318 DUP6 DUP3 DUP7 ADD PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x133A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1348 DUP9 DUP3 DUP10 ADD PUSH2 0x123C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1359 DUP9 DUP3 DUP10 ADD PUSH2 0x1212 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x136A DUP9 DUP3 DUP10 ADD PUSH2 0x1227 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x137B DUP9 DUP3 DUP10 ADD PUSH2 0x1227 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x138C DUP9 DUP3 DUP10 ADD PUSH2 0x123C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A5 DUP4 DUP4 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BD DUP4 DUP4 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D2 DUP2 PUSH2 0x1BC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x13E1 DUP2 PUSH2 0x1BC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F2 DUP3 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x13FC DUP2 DUP6 PUSH2 0x1A0E JUMP JUMPDEST SWAP4 POP PUSH2 0x1407 DUP4 PUSH2 0x19BE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1438 JUMPI DUP2 MLOAD PUSH2 0x141F DUP9 DUP3 PUSH2 0x1399 JUMP JUMPDEST SWAP8 POP PUSH2 0x142A DUP4 PUSH2 0x19F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x140B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1450 DUP3 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x145A DUP2 DUP6 PUSH2 0x1A1F JUMP JUMPDEST SWAP4 POP PUSH2 0x1465 DUP4 PUSH2 0x19CE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1496 JUMPI DUP2 MLOAD PUSH2 0x147D DUP9 DUP3 PUSH2 0x13B1 JUMP JUMPDEST SWAP8 POP PUSH2 0x1488 DUP4 PUSH2 0x1A01 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1469 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14AC DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14BB DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14CA DUP2 PUSH2 0x1C37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14D9 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14EC PUSH1 0x26 DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F7 DUP3 PUSH2 0x1D73 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150F PUSH1 0xE DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x151A DUP3 PUSH2 0x1DC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1532 PUSH1 0x1B DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x153D DUP3 PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1555 PUSH1 0x1B DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1560 DUP3 PUSH2 0x1E14 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1578 PUSH1 0x18 DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1583 DUP3 PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159B PUSH1 0x1C DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x15A6 DUP3 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BE PUSH1 0x19 DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C9 DUP3 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E1 PUSH1 0x1A DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x15EC DUP3 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1604 PUSH1 0x20 DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x160F DUP3 PUSH2 0x1EE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1627 PUSH1 0x1B DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1632 DUP3 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x164A PUSH1 0xD DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1655 DUP3 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1669 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1678 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1693 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16AE PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x16BB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x16C8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x16D5 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13D8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16F8 DUP2 DUP6 PUSH2 0x13E7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x170C DUP2 DUP5 PUSH2 0x1445 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1745 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1760 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x177B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x1788 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17A4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x17B1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x17BE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1660 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17DF DUP2 PUSH2 0x14DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17FF DUP2 PUSH2 0x1502 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x181F DUP2 PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x183F DUP2 PUSH2 0x1548 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x185F DUP2 PUSH2 0x156B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x187F DUP2 PUSH2 0x158E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x189F DUP2 PUSH2 0x15B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18BF DUP2 PUSH2 0x15D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18DF DUP2 PUSH2 0x15F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18FF DUP2 PUSH2 0x161A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x191F DUP2 PUSH2 0x163D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x193B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x166F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194B PUSH2 0x195C JUMP JUMPDEST SWAP1 POP PUSH2 0x1957 DUP3 DUP3 PUSH2 0x1C5B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1980 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19AD JUMPI PUSH2 0x19AC PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4C DUP3 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A57 DUP4 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A67 JUMPI PUSH2 0x1A66 PUSH2 0x1D04 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x1AA0 JUMPI PUSH2 0x1A9F PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB6 DUP3 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC1 DUP4 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x1B00 JUMPI PUSH2 0x1AFF PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP4 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x1B3D JUMPI PUSH2 0x1B3C PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP3 SLT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1B7A JUMPI PUSH2 0x1B79 PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SDIV DUP3 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1BB7 JUMPI PUSH2 0x1BB6 PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BCD DUP3 PUSH2 0x1BEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C42 DUP3 PUSH2 0x1C49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C54 DUP3 PUSH2 0x1BEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C64 DUP3 PUSH2 0x1D62 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C83 JUMPI PUSH2 0x1C82 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C97 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1CCA JUMPI PUSH2 0x1CC9 PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F4E4C595F57484954454C495354000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73657455706461746572733A494E56414C49445F555044415445520000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7669657750726963653A20494E56414C49445F434F4E54524143540000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73657455706461746572733A494E56414C49445F444154410000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73657457686974654C6973743A494E56414C49445F4144445245535300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73657457686974654C6973743A494E56414C49445F4441544100000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73657450726963653A20494E56414C49445F434F4E5452414354000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73657450726963653A20494E56414C49445F5553445F50524943450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F4E4C595F555044415445525300000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1F65 DUP2 PUSH2 0x1BC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F7C DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F93 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1FAA DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1FC1 DUP2 PUSH2 0x1C21 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F SAR RETURNDATASIZE 0xEE PUSH32 0x52BA0E87487357615144F628AF4CBBAF6169E2640BD1611E60479E64736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "485:3914:3:-:0;;;1530:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1627:19:3;1581:20;;:66;;;;;;;;;;;;;;;;;;1530:124;485:3914;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;7:143:7:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;485:3914:3:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:28344:7",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "126:553:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "136:90:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "218:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "161:56:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "161:64:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "145:15:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "145:81:7"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "136:5:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "235:16:7",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "246:5:7"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "239:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "268:5:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "275:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "261:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "261:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "261:21:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "291:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "302:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "309:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "298:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "291:3:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "324:17:7",
                              "value": {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "335:6:7"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "328:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "390:36:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "411:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "414:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "404:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "404:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "404:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "360:3:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "369:6:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "377:4:7",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "365:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "365:17:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "356:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "356:27:7"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "385:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "353:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "353:36:7"
                              },
                              "nodeType": "YulIf",
                              "src": "350:2:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "495:178:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "510:21:7",
                                    "value": {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "528:3:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementPos",
                                        "nodeType": "YulTypedName",
                                        "src": "514:10:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "552:3:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPos",
                                              "nodeType": "YulIdentifier",
                                              "src": "578:10:7"
                                            },
                                            {
                                              "name": "end",
                                              "nodeType": "YulIdentifier",
                                              "src": "590:3:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_t_address",
                                            "nodeType": "YulIdentifier",
                                            "src": "557:20:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "557:37:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "545:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "545:50:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "545:50:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "608:21:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "619:3:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "624:4:7",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "615:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "615:14:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "608:3:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "642:21:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "653:3:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "658:4:7",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "649:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "649:14:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "642:3:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "457:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "460:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "454:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "454:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "468:18:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "470:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "479:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "482:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "475:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "475:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "470:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "439:14:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "441:10:7",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "450:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "445:1:7",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "435:238:7"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "96:6:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "104:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "112:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "120:5:7",
                            "type": ""
                          }
                        ],
                        "src": "24:655:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "798:547:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "808:87:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "887:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_array$_t_bool_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "833:53:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "833:61:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "817:15:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "817:78:7"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "808:5:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "904:16:7",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "915:5:7"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "908:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "937:5:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "944:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "930:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "930:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "930:21:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "960:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "971:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "978:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "967:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "967:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "960:3:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "993:17:7",
                              "value": {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1004:6:7"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "997:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1059:36:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1080:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1083:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1073:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1073:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1073:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "1029:3:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "1038:6:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1046:4:7",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "1034:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1034:17:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1025:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1025:27:7"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1054:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1022:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1022:36:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1019:2:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1164:175:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1179:21:7",
                                    "value": {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "1197:3:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementPos",
                                        "nodeType": "YulTypedName",
                                        "src": "1183:10:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1221:3:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPos",
                                              "nodeType": "YulIdentifier",
                                              "src": "1244:10:7"
                                            },
                                            {
                                              "name": "end",
                                              "nodeType": "YulIdentifier",
                                              "src": "1256:3:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_t_bool",
                                            "nodeType": "YulIdentifier",
                                            "src": "1226:17:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1226:34:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1214:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1214:47:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1214:47:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1274:21:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1285:3:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1290:4:7",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1281:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1281:14:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "1274:3:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1308:21:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "1319:3:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1324:4:7",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1315:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1315:14:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "1308:3:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1126:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1129:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1123:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1123:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1137:18:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1139:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1148:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1151:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1144:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1144:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1139:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1108:14:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1110:10:7",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1119:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "1114:1:7",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "1104:235:7"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "768:6:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "776:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "784:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "792:5:7",
                            "type": ""
                          }
                        ],
                        "src": "699:646:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1403:87:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1413:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1435:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1422:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1422:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1413:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1478:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1451:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1451:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1451:33:7"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1381:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1389:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1397:5:7",
                            "type": ""
                          }
                        ],
                        "src": "1351:139:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1590:226:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1639:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1648:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1651:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1641:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1641:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1641:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1618:6:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1626:4:7",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1614:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1614:17:7"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1633:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1610:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1610:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1603:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1603:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1600:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1664:34:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1691:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1678:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1678:20:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1668:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1707:103:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1783:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1791:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1779:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1779:17:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1798:6:7"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1806:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1716:62:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1716:94:7"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1707:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1568:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1576:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1584:5:7",
                            "type": ""
                          }
                        ],
                        "src": "1513:303:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1910:223:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1959:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1968:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1971:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1961:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1961:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1961:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1938:6:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1946:4:7",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1934:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1934:17:7"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1953:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1930:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1930:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1923:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1923:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1920:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1984:34:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2011:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1998:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1998:20:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1988:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2027:100:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2100:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2108:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2096:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2096:17:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2115:6:7"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "2123:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2036:59:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2036:91:7"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "2027:5:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_array$_t_bool_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1888:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1896:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1904:5:7",
                            "type": ""
                          }
                        ],
                        "src": "1836:297:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2188:84:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2198:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2220:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2207:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2207:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2198:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2260:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "2236:23:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2236:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2236:30:7"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2166:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2174:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2182:5:7",
                            "type": ""
                          }
                        ],
                        "src": "2139:133:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2329:86:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2339:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2361:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2348:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2348:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2339:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2403:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_int256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2377:25:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2377:32:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2377:32:7"
                            }
                          ]
                        },
                        "name": "abi_decode_t_int256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2307:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2315:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2323:5:7",
                            "type": ""
                          }
                        ],
                        "src": "2278:137:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2483:79:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2493:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2508:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2502:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2502:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2493:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2550:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_int256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2524:25:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2524:32:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2524:32:7"
                            }
                          ]
                        },
                        "name": "abi_decode_t_int256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2461:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2469:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2477:5:7",
                            "type": ""
                          }
                        ],
                        "src": "2421:141:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2631:80:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2641:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2656:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2650:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2650:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2641:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2699:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2672:26:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2672:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2672:33:7"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2609:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2617:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2625:5:7",
                            "type": ""
                          }
                        ],
                        "src": "2568:143:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2779:79:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2789:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2804:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2798:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2798:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2789:5:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2846:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint80",
                                  "nodeType": "YulIdentifier",
                                  "src": "2820:25:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2820:32:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2820:32:7"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint80_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2757:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2765:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2773:5:7",
                            "type": ""
                          }
                        ],
                        "src": "2717:141:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2930:196:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2976:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2985:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2988:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2978:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2978:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2978:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2951:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2960:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2947:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2947:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2972:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2943:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2943:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2940:2:7"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3002:117:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3017:15:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3031:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3021:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3046:63:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3081:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3092:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3077:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3077:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3101:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3056:20:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3056:53:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3046:6:7"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2900:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2911:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2923:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2864:262:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3214:323:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3260:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3269:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3272:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3262:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3262:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3262:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3235:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3244:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3231:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3231:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3256:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3227:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3227:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3224:2:7"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3286:117:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3301:15:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3315:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3305:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3330:63:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3365:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3376:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3361:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3361:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3385:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3340:20:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3340:53:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3330:6:7"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3413:117:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3428:16:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3442:2:7",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3432:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3458:62:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3492:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3503:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3488:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3488:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3512:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_int256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3468:19:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3468:52:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3458:6:7"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_int256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3176:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3187:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3199:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3207:6:7",
                            "type": ""
                          }
                        ],
                        "src": "3132:405:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3673:557:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3719:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3728:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3731:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3721:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3721:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3721:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3694:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3703:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3690:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3690:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3715:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3686:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3686:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3683:2:7"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3745:235:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3760:45:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3791:9:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3802:1:7",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3787:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3787:17:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3774:12:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3774:31:7"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3764:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3852:16:7",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3861:1:7",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3864:1:7",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "3854:6:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3854:12:7"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3854:12:7"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3824:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3832:18:7",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3821:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3821:30:7"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "3818:2:7"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3882:88:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3942:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3953:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3938:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3938:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3962:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "3892:45:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3892:78:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3882:6:7"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3990:233:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4005:46:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4036:9:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4047:2:7",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4032:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4032:18:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4019:12:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4019:32:7"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4009:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4098:16:7",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4107:1:7",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4110:1:7",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "4100:6:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4100:12:7"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4100:12:7"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4070:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4078:18:7",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4067:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4067:30:7"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "4064:2:7"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4128:85:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4185:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4196:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4181:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4181:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4205:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_bool_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4138:42:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4138:75:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4128:6:7"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3635:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3646:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3658:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3666:6:7",
                            "type": ""
                          }
                        ],
                        "src": "3543:687:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4378:762:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4425:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4434:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4437:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4427:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4427:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4427:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4399:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4408:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4395:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4395:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4420:3:7",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4391:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4391:33:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4388:2:7"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4451:127:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4466:15:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4480:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4470:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4495:73:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4540:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4551:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4536:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4536:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4560:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint80_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "4505:30:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4505:63:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4495:6:7"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4588:128:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4603:16:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4617:2:7",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4607:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4633:73:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4678:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4689:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4674:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4674:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4698:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_int256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "4643:30:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4643:63:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4633:6:7"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4726:129:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4741:16:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4755:2:7",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4745:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4771:74:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4817:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4828:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4813:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4813:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4837:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "4781:31:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4781:64:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "4771:6:7"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4865:129:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4880:16:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4894:2:7",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4884:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4910:74:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4956:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4967:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4952:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4952:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4976:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "4920:31:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4920:64:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "4910:6:7"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5004:129:7",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5019:17:7",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5033:3:7",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5023:6:7",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5050:73:7",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5095:9:7"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5106:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5091:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5091:22:7"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5115:7:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint80_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "5060:30:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5060:63:7"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "5050:6:7"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4316:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4327:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4339:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4347:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4355:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4363:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "4371:6:7",
                            "type": ""
                          }
                        ],
                        "src": "4236:904:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5226:99:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5270:6:7"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5278:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5236:33:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5236:46:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5236:46:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5291:28:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5309:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5314:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5305:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5305:14:7"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5291:10:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5199:6:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5207:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "5215:10:7",
                            "type": ""
                          }
                        ],
                        "src": "5146:179:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5405:93:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5443:6:7"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5451:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "5415:27:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5415:40:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5415:40:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5464:28:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5482:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5487:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5478:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5478:14:7"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5464:10:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_bool_to_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5378:6:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5386:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "5394:10:7",
                            "type": ""
                          }
                        ],
                        "src": "5331:167:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5559:53:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5576:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5599:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5581:17:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5581:24:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5569:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5569:37:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5569:37:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5547:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5554:3:7",
                            "type": ""
                          }
                        ],
                        "src": "5504:108:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5683:53:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5700:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5723:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5705:17:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5705:24:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5693:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5693:37:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5693:37:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5671:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5678:3:7",
                            "type": ""
                          }
                        ],
                        "src": "5618:118:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5896:608:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5906:68:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5968:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5920:47:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5920:54:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5910:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5983:93:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6064:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6069:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5990:73:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5990:86:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5983:3:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6085:71:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6150:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6100:49:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6100:56:7"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "6089:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6165:21:7",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "6179:7:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "6169:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6255:224:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6269:34:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "6296:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "6290:5:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6290:13:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "6273:13:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6316:70:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "6367:13:7"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "6382:3:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "6323:43:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6323:63:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6316:3:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6399:70:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "6462:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6409:52:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6409:60:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6399:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "6217:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6220:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6214:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6214:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "6228:18:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6230:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6239:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6242:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6235:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6235:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "6230:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "6199:14:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6201:10:7",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6210:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "6205:1:7",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "6195:284:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6488:10:7",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6495:3:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6488:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5875:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5882:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5891:3:7",
                            "type": ""
                          }
                        ],
                        "src": "5772:732:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6652:590:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6662:65:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6721:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_bool_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6676:44:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6676:51:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "6666:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6736:90:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6814:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6819:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6743:70:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6743:83:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6736:3:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6835:68:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6897:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_bool_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6850:46:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6850:53:7"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "6839:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6912:21:7",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "6926:7:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "6916:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7002:215:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7016:34:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "7043:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "7037:5:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7037:13:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "7020:13:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7063:64:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "7108:13:7"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "7123:3:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_bool_to_t_bool",
                                        "nodeType": "YulIdentifier",
                                        "src": "7070:37:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7070:57:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7063:3:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7140:67:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "7200:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_bool_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7150:49:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7150:57:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7140:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "6964:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6967:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6961:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6961:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "6975:18:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6977:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6986:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6989:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6982:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6982:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "6977:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "6946:14:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6948:10:7",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6957:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "6952:1:7",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "6942:275:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7226:10:7",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7233:3:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7226:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6631:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6638:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6647:3:7",
                            "type": ""
                          }
                        ],
                        "src": "6534:708:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7297:50:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7314:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7334:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "7319:14:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7319:21:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7307:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7307:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7307:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7285:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7292:3:7",
                            "type": ""
                          }
                        ],
                        "src": "7248:99:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7412:50:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7429:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7449:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "7434:14:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7434:21:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7422:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7422:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7422:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7400:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7407:3:7",
                            "type": ""
                          }
                        ],
                        "src": "7353:109:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7563:96:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7580:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7646:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IChainlinkV3Aggregator_$517_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "7585:60:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7585:67:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7573:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7573:80:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7573:80:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IChainlinkV3Aggregator_$517_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7551:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7558:3:7",
                            "type": ""
                          }
                        ],
                        "src": "7468:191:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7728:52:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7745:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7767:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_int256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7750:16:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7750:23:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7738:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7738:36:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7738:36:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_int256_to_t_int256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7716:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7723:3:7",
                            "type": ""
                          }
                        ],
                        "src": "7665:115:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7932:220:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7942:74:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8008:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8013:2:7",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7949:58:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7949:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7942:3:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8114:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                  "nodeType": "YulIdentifier",
                                  "src": "8025:88:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8025:93:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8025:93:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8127:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8138:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8143:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8134:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8134:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8127:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7920:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7928:3:7",
                            "type": ""
                          }
                        ],
                        "src": "7786:366:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8304:220:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8314:74:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8380:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8385:2:7",
                                    "type": "",
                                    "value": "14"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8321:58:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8321:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8314:3:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8486:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_3a85fbe87f8f28c7d6140dde6f16e6252a64bfdd333df69dbceec20a6e47155b",
                                  "nodeType": "YulIdentifier",
                                  "src": "8397:88:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8397:93:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8397:93:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8499:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8510:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8515:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8506:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8506:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8499:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_3a85fbe87f8f28c7d6140dde6f16e6252a64bfdd333df69dbceec20a6e47155b_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8292:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8300:3:7",
                            "type": ""
                          }
                        ],
                        "src": "8158:366:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8676:220:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8686:74:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8752:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8757:2:7",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8693:58:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8693:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8686:3:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8858:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_45c3f9339f55c7e281bc1f62cb3bc42942198cbc7b5cfc7737b07e8590b0183a",
                                  "nodeType": "YulIdentifier",
                                  "src": "8769:88:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8769:93:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8769:93:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8871:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8882:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8887:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8878:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8878:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8871:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_45c3f9339f55c7e281bc1f62cb3bc42942198cbc7b5cfc7737b07e8590b0183a_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8664:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8672:3:7",
                            "type": ""
                          }
                        ],
                        "src": "8530:366:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9048:220:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9058:74:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9124:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9129:2:7",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9065:58:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9065:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9058:3:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9230:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_71b5f081f1d5aa873526f4165749be2ac1e4ec24d86d9efa03964ea85f68d98a",
                                  "nodeType": "YulIdentifier",
                                  "src": "9141:88:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9141:93:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9141:93:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9243:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9254:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9259:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9250:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9250:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9243:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_71b5f081f1d5aa873526f4165749be2ac1e4ec24d86d9efa03964ea85f68d98a_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9036:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9044:3:7",
                            "type": ""
                          }
                        ],
                        "src": "8902:366:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9420:220:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9430:74:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9496:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9501:2:7",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9437:58:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9437:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9430:3:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9602:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_77412538aa891ed0b112a0559c40377b50321f238e291ac7b245a1f3596aff7f",
                                  "nodeType": "YulIdentifier",
                                  "src": "9513:88:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9513:93:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9513:93:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9615:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9626:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9631:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9622:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9622:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9615:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_77412538aa891ed0b112a0559c40377b50321f238e291ac7b245a1f3596aff7f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9408:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9416:3:7",
                            "type": ""
                          }
                        ],
                        "src": "9274:366:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9792:220:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9802:74:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9868:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9873:2:7",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9809:58:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9809:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9802:3:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9974:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_7eaf222e2ae21481cf62db9bbfeb0e78613391071c388c5234177c02f42cad0f",
                                  "nodeType": "YulIdentifier",
                                  "src": "9885:88:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9885:93:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9885:93:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9987:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9998:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10003:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9994:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9994:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9987:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_7eaf222e2ae21481cf62db9bbfeb0e78613391071c388c5234177c02f42cad0f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9780:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9788:3:7",
                            "type": ""
                          }
                        ],
                        "src": "9646:366:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10164:220:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10174:74:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10240:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10245:2:7",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10181:58:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10181:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10174:3:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10346:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_8cfbfcfc030916b14d2ac6f2ec2579ef08d94e604d6cfe56148ba9c6d947f4b0",
                                  "nodeType": "YulIdentifier",
                                  "src": "10257:88:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10257:93:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10257:93:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10359:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10370:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10375:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10366:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10366:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10359:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_8cfbfcfc030916b14d2ac6f2ec2579ef08d94e604d6cfe56148ba9c6d947f4b0_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10152:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10160:3:7",
                            "type": ""
                          }
                        ],
                        "src": "10018:366:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10536:220:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10546:74:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10612:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10617:2:7",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10553:58:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10553:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10546:3:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10718:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_94a39a716fc878c8fd1e7438784fc7b02fd8c248771367a132af47025a67489b",
                                  "nodeType": "YulIdentifier",
                                  "src": "10629:88:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10629:93:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10629:93:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10731:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10742:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10747:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10738:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10738:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10731:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_94a39a716fc878c8fd1e7438784fc7b02fd8c248771367a132af47025a67489b_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10524:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10532:3:7",
                            "type": ""
                          }
                        ],
                        "src": "10390:366:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10908:220:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10918:74:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10984:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10989:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10925:58:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10925:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10918:3:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11090:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                  "nodeType": "YulIdentifier",
                                  "src": "11001:88:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11001:93:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11001:93:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11103:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11114:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11119:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11110:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11110:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11103:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10896:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10904:3:7",
                            "type": ""
                          }
                        ],
                        "src": "10762:366:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11280:220:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11290:74:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11356:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11361:2:7",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11297:58:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11297:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11290:3:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11462:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_a37f3d9b482e0838d7a8e041eb335321bfd1c57da7113e83424c873a6bcbc843",
                                  "nodeType": "YulIdentifier",
                                  "src": "11373:88:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11373:93:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11373:93:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11475:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11486:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11491:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11482:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11482:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11475:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_a37f3d9b482e0838d7a8e041eb335321bfd1c57da7113e83424c873a6bcbc843_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11268:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11276:3:7",
                            "type": ""
                          }
                        ],
                        "src": "11134:366:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11652:220:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11662:74:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11728:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11733:2:7",
                                    "type": "",
                                    "value": "13"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11669:58:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11669:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11662:3:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11834:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_ea853ed90ab400a4fecae279ba34d59533555762873ef7456f7e0560088cd8eb",
                                  "nodeType": "YulIdentifier",
                                  "src": "11745:88:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11745:93:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11745:93:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11847:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11858:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11863:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11854:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11854:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11847:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_ea853ed90ab400a4fecae279ba34d59533555762873ef7456f7e0560088cd8eb_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11640:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11648:3:7",
                            "type": ""
                          }
                        ],
                        "src": "11506:366:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11943:53:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11960:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "11983:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "11965:17:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11965:24:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11953:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11953:37:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11953:37:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11931:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11938:3:7",
                            "type": ""
                          }
                        ],
                        "src": "11878:118:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12063:51:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12080:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12101:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "12085:15:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12085:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12073:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12073:35:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12073:35:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12051:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12058:3:7",
                            "type": ""
                          }
                        ],
                        "src": "12002:112:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12218:124:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12228:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12240:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12251:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12236:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12236:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12228:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12308:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12321:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12332:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12317:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12317:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12264:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12264:71:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12264:71:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12190:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12202:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12213:4:7",
                            "type": ""
                          }
                        ],
                        "src": "12120:222:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12526:367:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12536:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12548:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12559:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12544:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12544:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12536:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12617:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12630:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12641:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12626:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12626:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12573:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12573:71:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12573:71:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12696:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12709:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12720:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12705:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12705:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int256_to_t_int256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12654:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12654:70:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12654:70:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "12776:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12789:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12800:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12785:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12785:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int256_to_t_int256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12734:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12734:70:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12734:70:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "12858:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12871:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12882:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12867:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12867:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12814:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12814:72:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12814:72:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_int256_t_int256_t_address__to_t_address_t_int256_t_int256_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12474:9:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "12486:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "12494:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "12502:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12510:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12521:4:7",
                            "type": ""
                          }
                        ],
                        "src": "12348:545:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13119:402:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13129:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13141:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13152:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13137:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13137:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13129:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13176:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13187:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13172:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13172:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "13195:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13201:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13191:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13191:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13165:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13165:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13165:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13221:116:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13323:6:7"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13332:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13229:93:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13229:108:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13221:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13358:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13369:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13354:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13354:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "13378:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13384:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13374:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13374:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13347:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13347:48:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13347:48:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13404:110:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13500:6:7"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13509:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13412:87:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13412:102:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13404:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13083:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "13095:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13103:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13114:4:7",
                            "type": ""
                          }
                        ],
                        "src": "12899:622:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13619:118:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13629:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13641:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13652:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13637:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13637:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13629:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13703:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13716:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13727:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13712:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13712:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13665:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13665:65:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13665:65:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13591:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13603:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13614:4:7",
                            "type": ""
                          }
                        ],
                        "src": "13527:210:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13871:154:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13881:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13893:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13904:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13889:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13889:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13881:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13991:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14004:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14015:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14000:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14000:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IChainlinkV3Aggregator_$517_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13917:73:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13917:101:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13917:101:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IChainlinkV3Aggregator_$517__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13843:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13855:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13866:4:7",
                            "type": ""
                          }
                        ],
                        "src": "13743:282:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14127:122:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14137:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14149:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14160:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14145:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14145:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14137:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "14215:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14228:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14239:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14224:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14224:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int256_to_t_int256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14173:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14173:69:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14173:69:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14099:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14111:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14122:4:7",
                            "type": ""
                          }
                        ],
                        "src": "14031:218:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14377:202:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14387:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14399:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14410:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14395:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14395:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14387:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "14465:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14478:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14489:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14474:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14474:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int256_to_t_int256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14423:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14423:69:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14423:69:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14544:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14557:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14568:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14553:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14553:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int256_to_t_int256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14502:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14502:70:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14502:70:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14341:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "14353:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14361:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14372:4:7",
                            "type": ""
                          }
                        ],
                        "src": "14255:324:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14735:284:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14745:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14757:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14768:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14753:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14753:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14745:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "14823:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14836:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14847:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14832:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14832:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int256_to_t_int256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14781:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14781:69:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14781:69:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14902:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14915:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14926:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14911:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14911:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int256_to_t_int256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14860:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14860:70:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14860:70:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "14984:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14997:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15008:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14993:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14993:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14940:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14940:72:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14940:72:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_int256_t_int256_t_uint256__to_t_int256_t_int256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14691:9:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "14703:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "14711:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14719:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14730:4:7",
                            "type": ""
                          }
                        ],
                        "src": "14585:434:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15196:248:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15206:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15218:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15229:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15214:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15214:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15206:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15253:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15264:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15249:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15249:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "15272:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15278:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15268:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15268:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15242:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15242:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15242:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15298:139:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "15432:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15306:124:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15306:131:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15298:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15176:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15191:4:7",
                            "type": ""
                          }
                        ],
                        "src": "15025:419:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15621:248:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15631:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15643:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15654:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15639:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15639:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15631:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15678:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15689:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15674:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15674:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "15697:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15703:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15693:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15693:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15667:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15667:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15667:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15723:139:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "15857:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_3a85fbe87f8f28c7d6140dde6f16e6252a64bfdd333df69dbceec20a6e47155b_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15731:124:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15731:131:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15723:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3a85fbe87f8f28c7d6140dde6f16e6252a64bfdd333df69dbceec20a6e47155b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15601:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15616:4:7",
                            "type": ""
                          }
                        ],
                        "src": "15450:419:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16046:248:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16056:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16068:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16079:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16064:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16064:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16056:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16103:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16114:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16099:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16099:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "16122:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16128:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "16118:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16118:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16092:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16092:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16092:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16148:139:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "16282:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_45c3f9339f55c7e281bc1f62cb3bc42942198cbc7b5cfc7737b07e8590b0183a_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16156:124:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16156:131:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16148:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_45c3f9339f55c7e281bc1f62cb3bc42942198cbc7b5cfc7737b07e8590b0183a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16026:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16041:4:7",
                            "type": ""
                          }
                        ],
                        "src": "15875:419:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16471:248:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16481:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16493:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16504:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16489:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16489:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16481:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16528:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16539:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16524:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16524:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "16547:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16553:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "16543:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16543:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16517:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16517:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16517:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16573:139:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "16707:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_71b5f081f1d5aa873526f4165749be2ac1e4ec24d86d9efa03964ea85f68d98a_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16581:124:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16581:131:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16573:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_71b5f081f1d5aa873526f4165749be2ac1e4ec24d86d9efa03964ea85f68d98a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16451:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16466:4:7",
                            "type": ""
                          }
                        ],
                        "src": "16300:419:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16896:248:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16906:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16918:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16929:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16914:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16914:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16906:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16953:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16964:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16949:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16949:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "16972:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16978:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "16968:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16968:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16942:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16942:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16942:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16998:139:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "17132:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_77412538aa891ed0b112a0559c40377b50321f238e291ac7b245a1f3596aff7f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17006:124:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17006:131:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16998:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_77412538aa891ed0b112a0559c40377b50321f238e291ac7b245a1f3596aff7f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16876:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16891:4:7",
                            "type": ""
                          }
                        ],
                        "src": "16725:419:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17321:248:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17331:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17343:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17354:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17339:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17339:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17331:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17378:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17389:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17374:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17374:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "17397:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17403:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "17393:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17393:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17367:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17367:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17367:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17423:139:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "17557:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_7eaf222e2ae21481cf62db9bbfeb0e78613391071c388c5234177c02f42cad0f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17431:124:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17431:131:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17423:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7eaf222e2ae21481cf62db9bbfeb0e78613391071c388c5234177c02f42cad0f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17301:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17316:4:7",
                            "type": ""
                          }
                        ],
                        "src": "17150:419:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17746:248:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17756:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17768:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17779:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17764:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17764:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17756:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17803:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17814:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17799:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17799:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "17822:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17828:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "17818:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17818:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17792:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17792:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17792:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17848:139:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "17982:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_8cfbfcfc030916b14d2ac6f2ec2579ef08d94e604d6cfe56148ba9c6d947f4b0_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17856:124:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17856:131:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17848:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8cfbfcfc030916b14d2ac6f2ec2579ef08d94e604d6cfe56148ba9c6d947f4b0__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17726:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17741:4:7",
                            "type": ""
                          }
                        ],
                        "src": "17575:419:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18171:248:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18181:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18193:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18204:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18189:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18189:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18181:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18228:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18239:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18224:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18224:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "18247:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18253:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "18243:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18243:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18217:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18217:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18217:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18273:139:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "18407:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_94a39a716fc878c8fd1e7438784fc7b02fd8c248771367a132af47025a67489b_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18281:124:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18281:131:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18273:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_94a39a716fc878c8fd1e7438784fc7b02fd8c248771367a132af47025a67489b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18151:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18166:4:7",
                            "type": ""
                          }
                        ],
                        "src": "18000:419:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18596:248:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18606:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18618:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18629:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18614:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18614:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18606:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18653:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18664:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18649:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18649:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "18672:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18678:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "18668:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18668:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18642:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18642:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18642:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18698:139:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "18832:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18706:124:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18706:131:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18698:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18576:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18591:4:7",
                            "type": ""
                          }
                        ],
                        "src": "18425:419:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19021:248:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19031:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19043:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19054:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19039:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19039:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19031:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19078:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19089:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19074:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19074:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "19097:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19103:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "19093:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19093:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19067:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19067:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19067:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19123:139:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "19257:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_a37f3d9b482e0838d7a8e041eb335321bfd1c57da7113e83424c873a6bcbc843_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19131:124:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19131:131:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19123:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a37f3d9b482e0838d7a8e041eb335321bfd1c57da7113e83424c873a6bcbc843__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19001:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19016:4:7",
                            "type": ""
                          }
                        ],
                        "src": "18850:419:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19446:248:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19456:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19468:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19479:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19464:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19464:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19456:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19503:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19514:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19499:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19499:17:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "19522:4:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19528:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "19518:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19518:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19492:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19492:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19492:47:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19548:139:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "19682:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_ea853ed90ab400a4fecae279ba34d59533555762873ef7456f7e0560088cd8eb_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19556:124:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19556:131:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19548:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ea853ed90ab400a4fecae279ba34d59533555762873ef7456f7e0560088cd8eb__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19426:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19441:4:7",
                            "type": ""
                          }
                        ],
                        "src": "19275:419:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19794:120:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19804:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19816:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19827:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19812:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19812:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19804:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19880:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19893:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19904:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19889:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19889:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19840:39:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19840:67:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19840:67:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19766:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19778:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19789:4:7",
                            "type": ""
                          }
                        ],
                        "src": "19700:214:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19961:88:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19971:30:7",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "allocate_unbounded",
                                  "nodeType": "YulIdentifier",
                                  "src": "19981:18:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19981:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "19971:6:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "20030:6:7"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "20038:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "finalize_allocation",
                                  "nodeType": "YulIdentifier",
                                  "src": "20010:19:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20010:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20010:33:7"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "19945:4:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "19954:6:7",
                            "type": ""
                          }
                        ],
                        "src": "19920:129:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20095:35:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20105:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20121:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "20115:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20115:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "20105:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "20088:6:7",
                            "type": ""
                          }
                        ],
                        "src": "20055:75:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20218:229:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20323:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "20325:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20325:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20325:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20295:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20303:18:7",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "20292:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20292:30:7"
                              },
                              "nodeType": "YulIf",
                              "src": "20289:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20355:25:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20367:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20375:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "20363:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20363:17:7"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "20355:4:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20417:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "20429:4:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20435:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20425:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20425:15:7"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "20417:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "20202:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "20213:4:7",
                            "type": ""
                          }
                        ],
                        "src": "20136:311:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20532:229:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20637:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "20639:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20639:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20639:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20609:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20617:18:7",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "20606:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20606:30:7"
                              },
                              "nodeType": "YulIf",
                              "src": "20603:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20669:25:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20681:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20689:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "20677:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20677:17:7"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "20669:4:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20731:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "20743:4:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20749:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20739:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20739:15:7"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "20731:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_array$_t_bool_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "20516:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "20527:4:7",
                            "type": ""
                          }
                        ],
                        "src": "20453:308:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20839:60:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20849:11:7",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "20857:3:7"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "20849:4:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20870:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "20882:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20887:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20878:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20878:14:7"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "20870:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "20826:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "20834:4:7",
                            "type": ""
                          }
                        ],
                        "src": "20767:132:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20974:60:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20984:11:7",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "20992:3:7"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "20984:4:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21005:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "21017:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21022:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21013:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21013:14:7"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "21005:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_bool_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "20961:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "20969:4:7",
                            "type": ""
                          }
                        ],
                        "src": "20905:129:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21114:40:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21125:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21141:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "21135:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21135:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "21125:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21097:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "21107:6:7",
                            "type": ""
                          }
                        ],
                        "src": "21040:114:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21231:40:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21242:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21258:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "21252:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21252:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "21242:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_bool_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21214:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "21224:6:7",
                            "type": ""
                          }
                        ],
                        "src": "21160:111:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21352:38:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21362:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "21374:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21379:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21370:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21370:14:7"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "21362:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "21339:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "21347:4:7",
                            "type": ""
                          }
                        ],
                        "src": "21277:113:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21468:38:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21478:22:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "21490:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21495:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21486:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21486:14:7"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "21478:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_bool_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "21455:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "21463:4:7",
                            "type": ""
                          }
                        ],
                        "src": "21396:110:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21623:73:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21640:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "21645:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21633:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21633:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21633:19:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21661:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21680:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21685:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21676:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21676:14:7"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "21661:11:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "21595:3:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "21600:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "21611:11:7",
                            "type": ""
                          }
                        ],
                        "src": "21512:184:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21810:73:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21827:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "21832:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21820:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21820:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21820:19:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21848:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21867:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21872:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21863:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21863:14:7"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "21848:11:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "21782:3:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "21787:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "21798:11:7",
                            "type": ""
                          }
                        ],
                        "src": "21702:181:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21985:73:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22002:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22007:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21995:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21995:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21995:19:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22023:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22042:3:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22047:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22038:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22038:14:7"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "22023:11:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "21957:3:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "21962:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "21973:11:7",
                            "type": ""
                          }
                        ],
                        "src": "21889:169:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22105:344:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22115:24:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "22137:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_int256",
                                  "nodeType": "YulIdentifier",
                                  "src": "22120:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22120:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "22115:1:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22148:24:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "22170:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_int256",
                                  "nodeType": "YulIdentifier",
                                  "src": "22153:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22153:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "22148:1:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22194:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "22196:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22196:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22196:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "22191:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "22184:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22184:9:7"
                              },
                              "nodeType": "YulIf",
                              "src": "22181:2:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22396:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "22398:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22398:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22398:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "22285:1:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22288:66:7",
                                        "type": "",
                                        "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "22282:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22282:73:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "22372:1:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "22379:1:7",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "22382:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "22375:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22375:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "22369:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22369:16:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "22265:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22265:130:7"
                              },
                              "nodeType": "YulIf",
                              "src": "22262:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22428:15:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "22438:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "22441:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "sdiv",
                                  "nodeType": "YulIdentifier",
                                  "src": "22433:4:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22433:10:7"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "22428:1:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_int256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "22094:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "22097:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "22103:1:7",
                            "type": ""
                          }
                        ],
                        "src": "22064:385:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22502:944:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22512:24:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "22534:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_int256",
                                  "nodeType": "YulIdentifier",
                                  "src": "22517:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22517:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "22512:1:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22545:24:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "22567:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_int256",
                                  "nodeType": "YulIdentifier",
                                  "src": "22550:16:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22550:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "22545:1:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22756:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "22758:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22758:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22758:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "22654:1:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "22657:1:7",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sgt",
                                          "nodeType": "YulIdentifier",
                                          "src": "22650:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22650:9:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nodeType": "YulIdentifier",
                                            "src": "22665:1:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "22668:1:7",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sgt",
                                          "nodeType": "YulIdentifier",
                                          "src": "22661:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22661:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "22646:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22646:25:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "22676:1:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "22683:66:7",
                                            "type": "",
                                            "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "y",
                                            "nodeType": "YulIdentifier",
                                            "src": "22751:1:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "22679:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22679:74:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "22673:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22673:81:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "22642:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22642:113:7"
                              },
                              "nodeType": "YulIf",
                              "src": "22639:2:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22967:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "22969:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22969:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22969:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "22863:1:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "22866:1:7",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sgt",
                                          "nodeType": "YulIdentifier",
                                          "src": "22859:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22859:9:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nodeType": "YulIdentifier",
                                            "src": "22874:1:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "22877:1:7",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "slt",
                                          "nodeType": "YulIdentifier",
                                          "src": "22870:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22870:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "22855:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22855:25:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "22886:1:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "22894:66:7",
                                            "type": "",
                                            "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "22962:1:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sdiv",
                                          "nodeType": "YulIdentifier",
                                          "src": "22889:4:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22889:75:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "22882:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22882:83:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "22851:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22851:115:7"
                              },
                              "nodeType": "YulIf",
                              "src": "22848:2:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "23178:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "23180:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23180:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "23180:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "23074:1:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23077:1:7",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "slt",
                                          "nodeType": "YulIdentifier",
                                          "src": "23070:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23070:9:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nodeType": "YulIdentifier",
                                            "src": "23085:1:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23088:1:7",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sgt",
                                          "nodeType": "YulIdentifier",
                                          "src": "23081:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23081:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "23066:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23066:25:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "23097:1:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23105:66:7",
                                            "type": "",
                                            "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                                          },
                                          {
                                            "name": "y",
                                            "nodeType": "YulIdentifier",
                                            "src": "23173:1:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sdiv",
                                          "nodeType": "YulIdentifier",
                                          "src": "23100:4:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23100:75:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "23093:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23093:83:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "23062:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23062:115:7"
                              },
                              "nodeType": "YulIf",
                              "src": "23059:2:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "23388:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "23390:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23390:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "23390:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "23284:1:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23287:1:7",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "slt",
                                          "nodeType": "YulIdentifier",
                                          "src": "23280:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23280:9:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nodeType": "YulIdentifier",
                                            "src": "23295:1:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23298:1:7",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "slt",
                                          "nodeType": "YulIdentifier",
                                          "src": "23291:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23291:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "23276:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23276:25:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "23307:1:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23315:66:7",
                                            "type": "",
                                            "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "y",
                                            "nodeType": "YulIdentifier",
                                            "src": "23383:1:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sdiv",
                                          "nodeType": "YulIdentifier",
                                          "src": "23310:4:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23310:75:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "23303:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23303:83:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "23272:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23272:115:7"
                              },
                              "nodeType": "YulIf",
                              "src": "23269:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23420:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "23435:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "23438:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "23431:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23431:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "23420:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_int256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "22485:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "22488:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "22494:7:7",
                            "type": ""
                          }
                        ],
                        "src": "22455:991:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23497:51:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23507:35:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "23536:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "23518:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23518:24:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "23507:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "23479:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "23489:7:7",
                            "type": ""
                          }
                        ],
                        "src": "23452:96:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23596:48:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23606:32:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "23631:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "23624:6:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23624:13:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "23617:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23617:21:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "23606:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "23578:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "23588:7:7",
                            "type": ""
                          }
                        ],
                        "src": "23554:90:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23694:32:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23704:16:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "23715:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "23704:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_int256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "23676:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "23686:7:7",
                            "type": ""
                          }
                        ],
                        "src": "23650:76:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23777:81:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23787:65:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "23802:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23809:42:7",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "23798:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23798:54:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "23787:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "23759:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "23769:7:7",
                            "type": ""
                          }
                        ],
                        "src": "23732:126:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23909:32:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23919:16:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "23930:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "23919:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "23891:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "23901:7:7",
                            "type": ""
                          }
                        ],
                        "src": "23864:77:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23990:43:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24000:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "24015:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24022:4:7",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "24011:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24011:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "24000:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "23972:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "23982:7:7",
                            "type": ""
                          }
                        ],
                        "src": "23947:86:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24083:61:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24093:45:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "24108:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24115:22:7",
                                    "type": "",
                                    "value": "0xffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "24104:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24104:34:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "24093:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint80",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "24065:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "24075:7:7",
                            "type": ""
                          }
                        ],
                        "src": "24039:105:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24240:96:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24250:80:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "24324:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IChainlinkV3Aggregator_$517_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "24263:60:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24263:67:7"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "24250:9:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IChainlinkV3Aggregator_$517_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "24220:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "24230:9:7",
                            "type": ""
                          }
                        ],
                        "src": "24150:186:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24432:53:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24442:37:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "24473:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "24455:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24455:24:7"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "24442:9:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IChainlinkV3Aggregator_$517_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "24412:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "24422:9:7",
                            "type": ""
                          }
                        ],
                        "src": "24342:143:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24534:238:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "24544:58:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "24566:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "24596:4:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "24574:21:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24574:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24562:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24562:40:7"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "24548:10:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "24713:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "24715:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "24715:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "24715:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "24656:10:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24668:18:7",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "24653:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24653:34:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "24692:10:7"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "24704:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "24689:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24689:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "24650:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24650:62:7"
                              },
                              "nodeType": "YulIf",
                              "src": "24647:2:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24751:2:7",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "24755:10:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24744:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24744:22:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24744:22:7"
                            }
                          ]
                        },
                        "name": "finalize_allocation",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "24520:6:7",
                            "type": ""
                          },
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "24528:4:7",
                            "type": ""
                          }
                        ],
                        "src": "24491:281:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24821:190:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24831:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "24858:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "24840:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24840:24:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "24831:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "24954:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "24956:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "24956:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "24956:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "24879:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24886:66:7",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "24876:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24876:77:7"
                              },
                              "nodeType": "YulIf",
                              "src": "24873:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24985:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "24996:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25003:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24992:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24992:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "24985:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "24807:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "24817:3:7",
                            "type": ""
                          }
                        ],
                        "src": "24778:233:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25045:152:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25062:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25065:77:7",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25055:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25055:88:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25055:88:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25159:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25162:4:7",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25152:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25152:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25152:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25183:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25186:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "25176:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25176:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25176:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "25017:180:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25231:152:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25248:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25251:77:7",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25241:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25241:88:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25241:88:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25345:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25348:4:7",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25338:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25338:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25338:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25369:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25372:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "25362:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25362:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25362:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "25203:180:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25417:152:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25434:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25437:77:7",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25427:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25427:88:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25427:88:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25531:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25534:4:7",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25524:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25524:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25524:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25555:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25558:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "25548:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25548:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25548:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "25389:180:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25623:54:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25633:38:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "25651:5:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25658:2:7",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25647:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25647:14:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25667:2:7",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "25663:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25663:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "25643:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25643:28:7"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "25633:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "25606:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "25616:6:7",
                            "type": ""
                          }
                        ],
                        "src": "25575:102:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25789:119:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "25811:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25819:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25807:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25807:14:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25823:34:7",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25800:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25800:58:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25800:58:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "25879:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25887:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25875:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25875:15:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25892:8:7",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25868:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25868:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25868:33:7"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "25781:6:7",
                            "type": ""
                          }
                        ],
                        "src": "25683:225:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26020:58:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "26042:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26050:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26038:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26038:14:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26054:16:7",
                                    "type": "",
                                    "value": "ONLY_WHITELIST"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26031:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26031:40:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26031:40:7"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_3a85fbe87f8f28c7d6140dde6f16e6252a64bfdd333df69dbceec20a6e47155b",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "26012:6:7",
                            "type": ""
                          }
                        ],
                        "src": "25914:164:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26190:71:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "26212:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26220:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26208:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26208:14:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26224:29:7",
                                    "type": "",
                                    "value": "setUpdaters:INVALID_UPDATER"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26201:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26201:53:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26201:53:7"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_45c3f9339f55c7e281bc1f62cb3bc42942198cbc7b5cfc7737b07e8590b0183a",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "26182:6:7",
                            "type": ""
                          }
                        ],
                        "src": "26084:177:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26373:71:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "26395:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26403:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26391:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26391:14:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26407:29:7",
                                    "type": "",
                                    "value": "viewPrice: INVALID_CONTRACT"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26384:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26384:53:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26384:53:7"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_71b5f081f1d5aa873526f4165749be2ac1e4ec24d86d9efa03964ea85f68d98a",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "26365:6:7",
                            "type": ""
                          }
                        ],
                        "src": "26267:177:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26556:68:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "26578:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26586:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26574:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26574:14:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26590:26:7",
                                    "type": "",
                                    "value": "setUpdaters:INVALID_DATA"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26567:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26567:50:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26567:50:7"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_77412538aa891ed0b112a0559c40377b50321f238e291ac7b245a1f3596aff7f",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "26548:6:7",
                            "type": ""
                          }
                        ],
                        "src": "26450:174:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26736:72:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "26758:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26766:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26754:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26754:14:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26770:30:7",
                                    "type": "",
                                    "value": "setWhiteList:INVALID_ADDRESS"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26747:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26747:54:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26747:54:7"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_7eaf222e2ae21481cf62db9bbfeb0e78613391071c388c5234177c02f42cad0f",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "26728:6:7",
                            "type": ""
                          }
                        ],
                        "src": "26630:178:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26920:69:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "26942:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26950:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26938:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26938:14:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26954:27:7",
                                    "type": "",
                                    "value": "setWhiteList:INVALID_DATA"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26931:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26931:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26931:51:7"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_8cfbfcfc030916b14d2ac6f2ec2579ef08d94e604d6cfe56148ba9c6d947f4b0",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "26912:6:7",
                            "type": ""
                          }
                        ],
                        "src": "26814:175:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27101:70:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "27123:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27131:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27119:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27119:14:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "27135:28:7",
                                    "type": "",
                                    "value": "setPrice: INVALID_CONTRACT"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27112:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27112:52:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27112:52:7"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_94a39a716fc878c8fd1e7438784fc7b02fd8c248771367a132af47025a67489b",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "27093:6:7",
                            "type": ""
                          }
                        ],
                        "src": "26995:176:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27283:76:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "27305:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27313:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27301:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27301:14:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "27317:34:7",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27294:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27294:58:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27294:58:7"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "27275:6:7",
                            "type": ""
                          }
                        ],
                        "src": "27177:182:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27471:71:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "27493:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27501:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27489:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27489:14:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "27505:29:7",
                                    "type": "",
                                    "value": "setPrice: INVALID_USD_PRICE"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27482:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27482:53:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27482:53:7"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_a37f3d9b482e0838d7a8e041eb335321bfd1c57da7113e83424c873a6bcbc843",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "27463:6:7",
                            "type": ""
                          }
                        ],
                        "src": "27365:177:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27654:57:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "27676:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27684:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27672:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27672:14:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "27688:15:7",
                                    "type": "",
                                    "value": "ONLY_UPDATERS"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27665:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27665:39:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27665:39:7"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_ea853ed90ab400a4fecae279ba34d59533555762873ef7456f7e0560088cd8eb",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "27646:6:7",
                            "type": ""
                          }
                        ],
                        "src": "27548:163:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27760:79:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "27817:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "27826:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "27829:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "27819:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27819:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "27819:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "27783:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "27808:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "27790:17:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27790:24:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "27780:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27780:35:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "27773:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27773:43:7"
                              },
                              "nodeType": "YulIf",
                              "src": "27770:2:7"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "27753:5:7",
                            "type": ""
                          }
                        ],
                        "src": "27717:122:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27885:76:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "27939:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "27948:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "27951:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "27941:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27941:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "27941:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "27908:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "27930:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "27915:14:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27915:21:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "27905:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27905:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "27898:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27898:40:7"
                              },
                              "nodeType": "YulIf",
                              "src": "27895:2:7"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "27878:5:7",
                            "type": ""
                          }
                        ],
                        "src": "27845:116:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28009:78:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "28065:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "28074:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "28077:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "28067:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28067:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "28067:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "28032:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "28056:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_int256",
                                          "nodeType": "YulIdentifier",
                                          "src": "28039:16:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "28039:23:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "28029:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28029:34:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "28022:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28022:42:7"
                              },
                              "nodeType": "YulIf",
                              "src": "28019:2:7"
                            }
                          ]
                        },
                        "name": "validator_revert_t_int256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "28002:5:7",
                            "type": ""
                          }
                        ],
                        "src": "27967:120:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28136:79:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "28193:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "28202:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "28205:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "28195:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28195:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "28195:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "28159:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "28184:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "28166:17:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "28166:24:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "28156:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28156:35:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "28149:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28149:43:7"
                              },
                              "nodeType": "YulIf",
                              "src": "28146:2:7"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "28129:5:7",
                            "type": ""
                          }
                        ],
                        "src": "28093:122:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28263:78:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "28319:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "28328:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "28331:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "28321:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28321:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "28321:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "28286:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "28310:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint80",
                                          "nodeType": "YulIdentifier",
                                          "src": "28293:16:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "28293:23:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "28283:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28283:34:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "28276:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28276:42:7"
                              },
                              "nodeType": "YulIf",
                              "src": "28273:2:7"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint80",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "28256:5:7",
                            "type": ""
                          }
                        ],
                        "src": "28221:120:7"
                      }
                    ]
                  },
                  "contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert(0, 0)\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // bool[]\n    function abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bool_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert(0, 0)\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bool(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // bool[]\n    function abi_decode_t_array$_t_bool_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_int256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_array$_t_bool_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_bool_to_t_bool(value0, pos) -> updatedPos {\n        abi_encode_t_bool_to_t_bool(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // bool[] -> bool[]\n    function abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bool_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bool_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bool_to_t_bool(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bool_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IChainlinkV3Aggregator_$517_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IChainlinkV3Aggregator_$517_to_t_address(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3a85fbe87f8f28c7d6140dde6f16e6252a64bfdd333df69dbceec20a6e47155b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_3a85fbe87f8f28c7d6140dde6f16e6252a64bfdd333df69dbceec20a6e47155b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_45c3f9339f55c7e281bc1f62cb3bc42942198cbc7b5cfc7737b07e8590b0183a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_45c3f9339f55c7e281bc1f62cb3bc42942198cbc7b5cfc7737b07e8590b0183a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_71b5f081f1d5aa873526f4165749be2ac1e4ec24d86d9efa03964ea85f68d98a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_71b5f081f1d5aa873526f4165749be2ac1e4ec24d86d9efa03964ea85f68d98a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_77412538aa891ed0b112a0559c40377b50321f238e291ac7b245a1f3596aff7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_77412538aa891ed0b112a0559c40377b50321f238e291ac7b245a1f3596aff7f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7eaf222e2ae21481cf62db9bbfeb0e78613391071c388c5234177c02f42cad0f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_7eaf222e2ae21481cf62db9bbfeb0e78613391071c388c5234177c02f42cad0f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8cfbfcfc030916b14d2ac6f2ec2579ef08d94e604d6cfe56148ba9c6d947f4b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_8cfbfcfc030916b14d2ac6f2ec2579ef08d94e604d6cfe56148ba9c6d947f4b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_94a39a716fc878c8fd1e7438784fc7b02fd8c248771367a132af47025a67489b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_94a39a716fc878c8fd1e7438784fc7b02fd8c248771367a132af47025a67489b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a37f3d9b482e0838d7a8e041eb335321bfd1c57da7113e83424c873a6bcbc843_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_a37f3d9b482e0838d7a8e041eb335321bfd1c57da7113e83424c873a6bcbc843(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ea853ed90ab400a4fecae279ba34d59533555762873ef7456f7e0560088cd8eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_ea853ed90ab400a4fecae279ba34d59533555762873ef7456f7e0560088cd8eb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_int256_t_int256_t_address__to_t_address_t_int256_t_int256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IChainlinkV3Aggregator_$517__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IChainlinkV3Aggregator_$517_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_int256_t_int256_t_uint256__to_t_int256_t_int256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3a85fbe87f8f28c7d6140dde6f16e6252a64bfdd333df69dbceec20a6e47155b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3a85fbe87f8f28c7d6140dde6f16e6252a64bfdd333df69dbceec20a6e47155b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45c3f9339f55c7e281bc1f62cb3bc42942198cbc7b5cfc7737b07e8590b0183a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45c3f9339f55c7e281bc1f62cb3bc42942198cbc7b5cfc7737b07e8590b0183a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_71b5f081f1d5aa873526f4165749be2ac1e4ec24d86d9efa03964ea85f68d98a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71b5f081f1d5aa873526f4165749be2ac1e4ec24d86d9efa03964ea85f68d98a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_77412538aa891ed0b112a0559c40377b50321f238e291ac7b245a1f3596aff7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77412538aa891ed0b112a0559c40377b50321f238e291ac7b245a1f3596aff7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7eaf222e2ae21481cf62db9bbfeb0e78613391071c388c5234177c02f42cad0f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7eaf222e2ae21481cf62db9bbfeb0e78613391071c388c5234177c02f42cad0f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8cfbfcfc030916b14d2ac6f2ec2579ef08d94e604d6cfe56148ba9c6d947f4b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8cfbfcfc030916b14d2ac6f2ec2579ef08d94e604d6cfe56148ba9c6d947f4b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_94a39a716fc878c8fd1e7438784fc7b02fd8c248771367a132af47025a67489b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94a39a716fc878c8fd1e7438784fc7b02fd8c248771367a132af47025a67489b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a37f3d9b482e0838d7a8e041eb335321bfd1c57da7113e83424c873a6bcbc843__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a37f3d9b482e0838d7a8e041eb335321bfd1c57da7113e83424c873a6bcbc843_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea853ed90ab400a4fecae279ba34d59533555762873ef7456f7e0560088cd8eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea853ed90ab400a4fecae279ba34d59533555762873ef7456f7e0560088cd8eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_bool_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_bool_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_bool_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bool_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x > 0, y > 0 and x > (maxValue / y)\n        if and(and(sgt(x, 0), sgt(y, 0)), gt(x, div(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n        // underflow, if x > 0, y < 0 and y < (minValue / x)\n        if and(and(sgt(x, 0), slt(y, 0)), slt(y, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n        // underflow, if x < 0, y > 0 and x < (minValue / y)\n        if and(and(slt(x, 0), sgt(y, 0)), slt(x, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if x < 0, y < 0 and x < (maxValue / y)\n        if and(and(slt(x, 0), slt(y, 0)), slt(x, sdiv(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_IChainlinkV3Aggregator_$517_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IChainlinkV3Aggregator_$517_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IChainlinkV3Aggregator_$517_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_3a85fbe87f8f28c7d6140dde6f16e6252a64bfdd333df69dbceec20a6e47155b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ONLY_WHITELIST\")\n\n    }\n\n    function store_literal_in_memory_45c3f9339f55c7e281bc1f62cb3bc42942198cbc7b5cfc7737b07e8590b0183a(memPtr) {\n\n        mstore(add(memPtr, 0), \"setUpdaters:INVALID_UPDATER\")\n\n    }\n\n    function store_literal_in_memory_71b5f081f1d5aa873526f4165749be2ac1e4ec24d86d9efa03964ea85f68d98a(memPtr) {\n\n        mstore(add(memPtr, 0), \"viewPrice: INVALID_CONTRACT\")\n\n    }\n\n    function store_literal_in_memory_77412538aa891ed0b112a0559c40377b50321f238e291ac7b245a1f3596aff7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"setUpdaters:INVALID_DATA\")\n\n    }\n\n    function store_literal_in_memory_7eaf222e2ae21481cf62db9bbfeb0e78613391071c388c5234177c02f42cad0f(memPtr) {\n\n        mstore(add(memPtr, 0), \"setWhiteList:INVALID_ADDRESS\")\n\n    }\n\n    function store_literal_in_memory_8cfbfcfc030916b14d2ac6f2ec2579ef08d94e604d6cfe56148ba9c6d947f4b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"setWhiteList:INVALID_DATA\")\n\n    }\n\n    function store_literal_in_memory_94a39a716fc878c8fd1e7438784fc7b02fd8c248771367a132af47025a67489b(memPtr) {\n\n        mstore(add(memPtr, 0), \"setPrice: INVALID_CONTRACT\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a37f3d9b482e0838d7a8e041eb335321bfd1c57da7113e83424c873a6bcbc843(memPtr) {\n\n        mstore(add(memPtr, 0), \"setPrice: INVALID_USD_PRICE\")\n\n    }\n\n    function store_literal_in_memory_ea853ed90ab400a4fecae279ba34d59533555762873ef7456f7e0560088cd8eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ONLY_UPDATERS\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636f9170f61161008c5780638e069115116100665780638e06911514610201578063a0868e2b1461021f578063cc5fe3ab14610251578063f2fde38b1461026d576100cf565b80636f9170f6146101a9578063715018a6146101d95780638da5cb5b146101e3576100cf565b8063034dd29b146100d4578063173a0da2146100f05780631744276d1461010e5780632f55b50d1461013f578063313ce5671461015b5780634fdfb08614610179575b600080fd5b6100ee60048036038101906100e9919061127a565b610289565b005b6100f86104e8565b604051610105919061174b565b60405180910390f35b61012860048036038101906101239190611251565b610665565b604051610136929190611766565b60405180910390f35b610159600480360381019061015491906112b6565b610821565b005b610163610adf565b6040516101709190611926565b60405180910390f35b610193600480360381019061018e9190611251565b610ae4565b6040516101a09190611715565b60405180910390f35b6101c360048036038101906101be9190611251565b610b04565b6040516101d09190611715565b60405180910390f35b6101e1610b24565b005b6101eb610bac565b6040516101f8919061167e565b60405180910390f35b610209610bd5565b6040516102169190611730565b60405180910390f35b61023960048036038101906102349190611251565b610bfb565b6040516102489392919061178f565b60405180910390f35b61026b600480360381019061026691906112b6565b610c25565b005b61028760048036038101906102829190611251565b610ee3565b005b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061031357506102e4610bac565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610352576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034990611906565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b9906118a6565b60405180910390fd5b60008113610405576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fc906118e6565b60405180910390fd5b600061040f6104e8565b6305f5e1008361041f9190611aab565b6104299190611a41565b9050604051806060016040528083815260200182815260200143815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050507f22774737ba002bafce363c9eff3c94bad664e904387dc57d10a83aaffb83e23e838383336040516104db9493929190611699565b60405180910390a1505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16806105745750610545610bac565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105aa906117e6565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561061b57600080fd5b505afa15801561062f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106539190611322565b90919293509091509050508091505090565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16806106f257506106c3610bac565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610731576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610728906117e6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079890611826565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820154815250509050806000015181602001519250925050915091565b610829610fdb565b73ffffffffffffffffffffffffffffffffffffffff16610847610bac565b73ffffffffffffffffffffffffffffffffffffffff161461089d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610894906118c6565b60405180910390fd5b600082511180156108af575060008151115b80156108bc575080518151145b6108fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f290611846565b60405180910390fd5b60005b8251811015610aa157600073ffffffffffffffffffffffffffffffffffffffff16838281518110610958577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156109b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ae90611806565b60405180910390fd5b8181815181106109f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160036000858481518110610a35577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610a9990611c8c565b9150506108fe565b507fe50da557bf43fec25d895622272ef6347b5a619981d17f86766ef104a1e4b2118282604051610ad39291906116de565b60405180910390a15050565b600881565b60036020528060005260406000206000915054906101000a900460ff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b610b2c610fdb565b73ffffffffffffffffffffffffffffffffffffffff16610b4a610bac565b73ffffffffffffffffffffffffffffffffffffffff1614610ba0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b97906118c6565b60405180910390fd5b610baa6000610fe3565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b610c2d610fdb565b73ffffffffffffffffffffffffffffffffffffffff16610c4b610bac565b73ffffffffffffffffffffffffffffffffffffffff1614610ca1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c98906118c6565b60405180910390fd5b60008251118015610cb3575060008151115b8015610cc0575080518251145b610cff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf690611886565b60405180910390fd5b60005b8251811015610ea557600073ffffffffffffffffffffffffffffffffffffffff16838281518110610d5c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415610dbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db290611866565b60405180910390fd5b818181518110610df4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160026000858481518110610e39577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610e9d90611c8c565b915050610d02565b507f849bc039c6dbcf9934f2e6d667158c8c6bdd9487a4154c25d0662a293bdd91eb8282604051610ed79291906116de565b60405180910390a15050565b610eeb610fdb565b73ffffffffffffffffffffffffffffffffffffffff16610f09610bac565b73ffffffffffffffffffffffffffffffffffffffff1614610f5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f56906118c6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc6906117c6565b60405180910390fd5b610fd881610fe3565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006110ba6110b584611966565b611941565b905080838252602082019050828560208602820111156110d957600080fd5b60005b8581101561110957816110ef888261117f565b8452602084019350602083019250506001810190506110dc565b5050509392505050565b600061112661112184611992565b611941565b9050808382526020820190508285602086028201111561114557600080fd5b60005b85811015611175578161115b88826111e8565b845260208401935060208301925050600181019050611148565b5050509392505050565b60008135905061118e81611f5c565b92915050565b600082601f8301126111a557600080fd5b81356111b58482602086016110a7565b91505092915050565b600082601f8301126111cf57600080fd5b81356111df848260208601611113565b91505092915050565b6000813590506111f781611f73565b92915050565b60008135905061120c81611f8a565b92915050565b60008151905061122181611f8a565b92915050565b60008151905061123681611fa1565b92915050565b60008151905061124b81611fb8565b92915050565b60006020828403121561126357600080fd5b60006112718482850161117f565b91505092915050565b6000806040838503121561128d57600080fd5b600061129b8582860161117f565b92505060206112ac858286016111fd565b9150509250929050565b600080604083850312156112c957600080fd5b600083013567ffffffffffffffff8111156112e357600080fd5b6112ef85828601611194565b925050602083013567ffffffffffffffff81111561130c57600080fd5b611318858286016111be565b9150509250929050565b600080600080600060a0868803121561133a57600080fd5b60006113488882890161123c565b955050602061135988828901611212565b945050604061136a88828901611227565b935050606061137b88828901611227565b925050608061138c8882890161123c565b9150509295509295909350565b60006113a583836113c9565b60208301905092915050565b60006113bd83836114a3565b60208301905092915050565b6113d281611bc2565b82525050565b6113e181611bc2565b82525050565b60006113f2826119de565b6113fc8185611a0e565b9350611407836119be565b8060005b8381101561143857815161141f8882611399565b975061142a836119f4565b92505060018101905061140b565b5085935050505092915050565b6000611450826119e9565b61145a8185611a1f565b9350611465836119ce565b8060005b8381101561149657815161147d88826113b1565b975061148883611a01565b925050600181019050611469565b5085935050505092915050565b6114ac81611bd4565b82525050565b6114bb81611bd4565b82525050565b6114ca81611c37565b82525050565b6114d981611be0565b82525050565b60006114ec602683611a30565b91506114f782611d73565b604082019050919050565b600061150f600e83611a30565b915061151a82611dc2565b602082019050919050565b6000611532601b83611a30565b915061153d82611deb565b602082019050919050565b6000611555601b83611a30565b915061156082611e14565b602082019050919050565b6000611578601883611a30565b915061158382611e3d565b602082019050919050565b600061159b601c83611a30565b91506115a682611e66565b602082019050919050565b60006115be601983611a30565b91506115c982611e8f565b602082019050919050565b60006115e1601a83611a30565b91506115ec82611eb8565b602082019050919050565b6000611604602083611a30565b915061160f82611ee1565b602082019050919050565b6000611627601b83611a30565b915061163282611f0a565b602082019050919050565b600061164a600d83611a30565b915061165582611f33565b602082019050919050565b61166981611c0a565b82525050565b61167881611c14565b82525050565b600060208201905061169360008301846113d8565b92915050565b60006080820190506116ae60008301876113d8565b6116bb60208301866114d0565b6116c860408301856114d0565b6116d560608301846113d8565b95945050505050565b600060408201905081810360008301526116f881856113e7565b9050818103602083015261170c8184611445565b90509392505050565b600060208201905061172a60008301846114b2565b92915050565b600060208201905061174560008301846114c1565b92915050565b600060208201905061176060008301846114d0565b92915050565b600060408201905061177b60008301856114d0565b61178860208301846114d0565b9392505050565b60006060820190506117a460008301866114d0565b6117b160208301856114d0565b6117be6040830184611660565b949350505050565b600060208201905081810360008301526117df816114df565b9050919050565b600060208201905081810360008301526117ff81611502565b9050919050565b6000602082019050818103600083015261181f81611525565b9050919050565b6000602082019050818103600083015261183f81611548565b9050919050565b6000602082019050818103600083015261185f8161156b565b9050919050565b6000602082019050818103600083015261187f8161158e565b9050919050565b6000602082019050818103600083015261189f816115b1565b9050919050565b600060208201905081810360008301526118bf816115d4565b9050919050565b600060208201905081810360008301526118df816115f7565b9050919050565b600060208201905081810360008301526118ff8161161a565b9050919050565b6000602082019050818103600083015261191f8161163d565b9050919050565b600060208201905061193b600083018461166f565b92915050565b600061194b61195c565b90506119578282611c5b565b919050565b6000604051905090565b600067ffffffffffffffff82111561198157611980611d33565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156119ad576119ac611d33565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611a4c82611be0565b9150611a5783611be0565b925082611a6757611a66611d04565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615611aa057611a9f611cd5565b5b828205905092915050565b6000611ab682611be0565b9150611ac183611be0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615611b0057611aff611cd5565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615611b3d57611b3c611cd5565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615611b7a57611b79611cd5565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615611bb757611bb6611cd5565b5b828202905092915050565b6000611bcd82611bea565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b6000611c4282611c49565b9050919050565b6000611c5482611bea565b9050919050565b611c6482611d62565b810181811067ffffffffffffffff82111715611c8357611c82611d33565b5b80604052505050565b6000611c9782611c0a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cca57611cc9611cd5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f4e4c595f57484954454c495354000000000000000000000000000000000000600082015250565b7f73657455706461746572733a494e56414c49445f555044415445520000000000600082015250565b7f7669657750726963653a20494e56414c49445f434f4e54524143540000000000600082015250565b7f73657455706461746572733a494e56414c49445f444154410000000000000000600082015250565b7f73657457686974654c6973743a494e56414c49445f4144445245535300000000600082015250565b7f73657457686974654c6973743a494e56414c49445f4441544100000000000000600082015250565b7f73657450726963653a20494e56414c49445f434f4e5452414354000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f73657450726963653a20494e56414c49445f5553445f50524943450000000000600082015250565b7f4f4e4c595f555044415445525300000000000000000000000000000000000000600082015250565b611f6581611bc2565b8114611f7057600080fd5b50565b611f7c81611bd4565b8114611f8757600080fd5b50565b611f9381611be0565b8114611f9e57600080fd5b50565b611faa81611c0a565b8114611fb557600080fd5b50565b611fc181611c21565b8114611fcc57600080fd5b5056fea26469706673582212201f1d3dee7f52ba0e87487357615144f628af4cbbaf6169e2640bd1611e60479e64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9170F6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8E069115 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8E069115 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xA0868E2B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xCC5FE3AB EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26D JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6F9170F6 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x34DD29B EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x173A0DA2 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x1744276D EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x2F55B50D EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x4FDFB086 EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF8 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP3 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1715 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1715 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0xB24 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x167E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xEE3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x313 JUMPI POP PUSH2 0x2E4 PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x352 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x349 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B9 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SGT PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FC SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x40F PUSH2 0x4E8 JUMP JUMPDEST PUSH4 0x5F5E100 DUP4 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x1A41 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH32 0x22774737BA002BAFCE363C9EFF3C94BAD664E904387DC57D10A83AAFFB83E23E DUP4 DUP4 DUP4 CALLER PUSH1 0x40 MLOAD PUSH2 0x4DB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x574 JUMPI POP PUSH2 0x545 PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AA SWAP1 PUSH2 0x17E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x6F2 JUMPI POP PUSH2 0x6C3 PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x17E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x798 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x829 PUSH2 0xFDB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x847 PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 ISZERO PUSH2 0x8AF JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x8BC JUMPI POP DUP1 MLOAD DUP2 MLOAD EQ JUMPDEST PUSH2 0x8FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F2 SWAP1 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x958 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AE SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x9F0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA35 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xA99 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8FE JUMP JUMPDEST POP PUSH32 0xE50DA557BF43FEC25D895622272EF6347B5A619981D17F86766EF104A1E4B211 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xAD3 SWAP3 SWAP2 SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xB2C PUSH2 0xFDB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB4A PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB97 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAA PUSH1 0x0 PUSH2 0xFE3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xC2D PUSH2 0xFDB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC4B PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC98 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 ISZERO PUSH2 0xCB3 JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0xCC0 JUMPI POP DUP1 MLOAD DUP3 MLOAD EQ JUMPDEST PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF6 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD5C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB2 SWAP1 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xDF4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xE39 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xE9D SWAP1 PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD02 JUMP JUMPDEST POP PUSH32 0x849BC039C6DBCF9934F2E6D667158C8C6BDD9487A4154C25D0662A293BDD91EB DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xED7 SWAP3 SWAP2 SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xEEB PUSH2 0xFDB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF09 PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP1 PUSH2 0x18C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC6 SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD8 DUP2 PUSH2 0xFE3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BA PUSH2 0x10B5 DUP5 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1109 JUMPI DUP2 PUSH2 0x10EF DUP9 DUP3 PUSH2 0x117F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x10DC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1126 PUSH2 0x1121 DUP5 PUSH2 0x1992 JUMP JUMPDEST PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1175 JUMPI DUP2 PUSH2 0x115B DUP9 DUP3 PUSH2 0x11E8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1148 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x118E DUP2 PUSH2 0x1F5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x10A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11DF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1113 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11F7 DUP2 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x120C DUP2 PUSH2 0x1F8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1221 DUP2 PUSH2 0x1F8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1236 DUP2 PUSH2 0x1FA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x124B DUP2 PUSH2 0x1FB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1271 DUP5 DUP3 DUP6 ADD PUSH2 0x117F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x129B DUP6 DUP3 DUP7 ADD PUSH2 0x117F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12AC DUP6 DUP3 DUP7 ADD PUSH2 0x11FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EF DUP6 DUP3 DUP7 ADD PUSH2 0x1194 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1318 DUP6 DUP3 DUP7 ADD PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x133A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1348 DUP9 DUP3 DUP10 ADD PUSH2 0x123C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1359 DUP9 DUP3 DUP10 ADD PUSH2 0x1212 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x136A DUP9 DUP3 DUP10 ADD PUSH2 0x1227 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x137B DUP9 DUP3 DUP10 ADD PUSH2 0x1227 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x138C DUP9 DUP3 DUP10 ADD PUSH2 0x123C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A5 DUP4 DUP4 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BD DUP4 DUP4 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D2 DUP2 PUSH2 0x1BC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x13E1 DUP2 PUSH2 0x1BC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F2 DUP3 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x13FC DUP2 DUP6 PUSH2 0x1A0E JUMP JUMPDEST SWAP4 POP PUSH2 0x1407 DUP4 PUSH2 0x19BE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1438 JUMPI DUP2 MLOAD PUSH2 0x141F DUP9 DUP3 PUSH2 0x1399 JUMP JUMPDEST SWAP8 POP PUSH2 0x142A DUP4 PUSH2 0x19F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x140B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1450 DUP3 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x145A DUP2 DUP6 PUSH2 0x1A1F JUMP JUMPDEST SWAP4 POP PUSH2 0x1465 DUP4 PUSH2 0x19CE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1496 JUMPI DUP2 MLOAD PUSH2 0x147D DUP9 DUP3 PUSH2 0x13B1 JUMP JUMPDEST SWAP8 POP PUSH2 0x1488 DUP4 PUSH2 0x1A01 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1469 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14AC DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14BB DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14CA DUP2 PUSH2 0x1C37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14D9 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14EC PUSH1 0x26 DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F7 DUP3 PUSH2 0x1D73 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150F PUSH1 0xE DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x151A DUP3 PUSH2 0x1DC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1532 PUSH1 0x1B DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x153D DUP3 PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1555 PUSH1 0x1B DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1560 DUP3 PUSH2 0x1E14 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1578 PUSH1 0x18 DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1583 DUP3 PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159B PUSH1 0x1C DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x15A6 DUP3 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BE PUSH1 0x19 DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C9 DUP3 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E1 PUSH1 0x1A DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x15EC DUP3 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1604 PUSH1 0x20 DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x160F DUP3 PUSH2 0x1EE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1627 PUSH1 0x1B DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1632 DUP3 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x164A PUSH1 0xD DUP4 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1655 DUP3 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1669 DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1678 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1693 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16AE PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x16BB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x16C8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x16D5 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13D8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16F8 DUP2 DUP6 PUSH2 0x13E7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x170C DUP2 DUP5 PUSH2 0x1445 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1745 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1760 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x177B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x1788 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17A4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x17B1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x17BE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1660 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17DF DUP2 PUSH2 0x14DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17FF DUP2 PUSH2 0x1502 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x181F DUP2 PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x183F DUP2 PUSH2 0x1548 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x185F DUP2 PUSH2 0x156B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x187F DUP2 PUSH2 0x158E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x189F DUP2 PUSH2 0x15B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18BF DUP2 PUSH2 0x15D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18DF DUP2 PUSH2 0x15F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18FF DUP2 PUSH2 0x161A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x191F DUP2 PUSH2 0x163D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x193B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x166F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194B PUSH2 0x195C JUMP JUMPDEST SWAP1 POP PUSH2 0x1957 DUP3 DUP3 PUSH2 0x1C5B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1980 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19AD JUMPI PUSH2 0x19AC PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4C DUP3 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A57 DUP4 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A67 JUMPI PUSH2 0x1A66 PUSH2 0x1D04 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x1AA0 JUMPI PUSH2 0x1A9F PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB6 DUP3 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC1 DUP4 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x1B00 JUMPI PUSH2 0x1AFF PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP4 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x1B3D JUMPI PUSH2 0x1B3C PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP3 SLT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1B7A JUMPI PUSH2 0x1B79 PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SDIV DUP3 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1BB7 JUMPI PUSH2 0x1BB6 PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BCD DUP3 PUSH2 0x1BEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C42 DUP3 PUSH2 0x1C49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C54 DUP3 PUSH2 0x1BEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C64 DUP3 PUSH2 0x1D62 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C83 JUMPI PUSH2 0x1C82 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C97 DUP3 PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1CCA JUMPI PUSH2 0x1CC9 PUSH2 0x1CD5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F4E4C595F57484954454C495354000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73657455706461746572733A494E56414C49445F555044415445520000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7669657750726963653A20494E56414C49445F434F4E54524143540000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73657455706461746572733A494E56414C49445F444154410000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73657457686974654C6973743A494E56414C49445F4144445245535300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73657457686974654C6973743A494E56414C49445F4441544100000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73657450726963653A20494E56414C49445F434F4E5452414354000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73657450726963653A20494E56414C49445F5553445F50524943450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F4E4C595F555044415445525300000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1F65 DUP2 PUSH2 0x1BC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F7C DUP2 PUSH2 0x1BD4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F93 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1FAA DUP2 PUSH2 0x1C0A JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1FC1 DUP2 PUSH2 0x1C21 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F SAR RETURNDATASIZE 0xEE PUSH32 0x52BA0E87487357615144F628AF4CBBAF6169E2640BD1611E60479E64736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "485:3914:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2539:526;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4246:151;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3878:324;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1818:557;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;998:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;815:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;707:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;911:59:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;589:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3220:605;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2539:526:3;1080:9;:21;1090:10;1080:21;;;;;;;;;;;;;;;;;;;;;;;;;:46;;;;1119:7;:5;:7::i;:::-;1105:21;;:10;:21;;;1080:46;1072:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2654:1:::1;2633:23;;:9;:23;;;;2625:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2717:1;2705:9;:13;2697:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2761:18;2802:10;:8;:10::i;:::-;2795:3;2783:9;:15;;;;:::i;:::-;2782:30;;;;:::i;:::-;2761:51;;2846:141;;;;;;;;2880:9;2846:141;;;;2915:11;2846:141;;;;2964:12;2846:141;;::::0;2823:9:::1;:20;2833:9;2823:20;;;;;;;;;;;;;;;:164;;;;;;;;;;;;;;;;;;;;;;;;;;;3003:55;3012:9;3023;3034:11;3047:10;3003:55;;;;;;;;;:::i;:::-;;;;;;;;1154:1;2539:526:::0;;:::o;4246:151::-;4310:12;1211:13;:25;1225:10;1211:25;;;;;;;;;;;;;;;;;;;;;;;;;:50;;;;1254:7;:5;:7::i;:::-;1240:21;;:10;:21;;;1211:50;1203:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4352:20:::1;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4334:56;;;;;;;;;;;;;;;4246:151:::0;:::o;3878:324::-;4002:6;4010;1211:13;:25;1225:10;1211:25;;;;;;;;;;;;;;;;;;;;;;;;;:50;;;;1254:7;:5;:7::i;:::-;1240:21;;:10;:21;;;1211:50;1203:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4061:1:::1;4040:23;;:9;:23;;;;4032:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4105:20;4128:9;:20;4138:9;4128:20;;;;;;;;;;;;;;;4105:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;4166:3;:12;;;4180:3;:14;;;4158:37;;;;;3878:324:::0;;;:::o;1818:557::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1963:1:3::1;1944:9;:16;:20;:62;;;;;2005:1;1984:11;:18;:22;1944:62;:122;;;;;2048:11;:18;2026:11;:18;:40;1944:122;1923:193;;;;;;;;;;;;:::i;:::-;;;;;;;;;2131:9;2126:192;2150:9;:16;2146:1;:20;2126:192;;;2219:1;2195:26;;:9;2205:1;2195:12;;;;;;;;;;;;;;;;;;;;;;:26;;;;2187:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2293:11;2305:1;2293:14;;;;;;;;;;;;;;;;;;;;;;2267:9;:23;2277:9;2287:1;2277:12;;;;;;;;;;;;;;;;;;;;;;2267:23;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;2168:3;;;;;:::i;:::-;;;;2126:192;;;;2333:35;2345:9;2356:11;2333:35;;;;;;;:::i;:::-;;;;;;;;1818:557:::0;;:::o;998:34::-;1031:1;998:34;:::o;815:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;707:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;911:59:3:-;;;;;;;;;;;;;:::o;589:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3220:605::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3403:1:3::1;3383:10;:17;:21;:63;;;;;3445:1;3424:11;:18;:22;3383:63;:122;;;;;3487:11;:18;3466:10;:17;:39;3383:122;3362:194;;;;;;;;;;;;:::i;:::-;;;;;;;;;3571:9;3566:200;3590:10;:17;3586:1;:21;3566:200;;;3661:1;3636:27;;:10;3647:1;3636:13;;;;;;;;;;;;;;;;;;;;;;:27;;;;3628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3741:11;3753:1;3741:14;;;;;;;;;;;;;;;;;;;;;;3710:13;:28;3724:10;3735:1;3724:13;;;;;;;;;;;;;;;;;;;;;;3710:28;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;3609:3;;;;;:::i;:::-;;;;3566:200;;;;3781:37;3794:10;3806:11;3781:37;;;;;;;:::i;:::-;;;;;;;;3220:605:::0;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;24:655:7:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:2;;;414:1;411;404:12;350:2;450:1;435:238;460:6;457:1;454:13;435:238;;;528:3;557:37;590:3;578:10;557:37;:::i;:::-;552:3;545:50;624:4;619:3;615:14;608:21;;658:4;653:3;649:14;642:21;;495:178;482:1;479;475:9;470:14;;435:238;;;439:14;126:553;;;;;;;:::o;699:646::-;792:5;817:78;833:61;887:6;833:61;:::i;:::-;817:78;:::i;:::-;808:87;;915:5;944:6;937:5;930:21;978:4;971:5;967:16;960:23;;1004:6;1054:3;1046:4;1038:6;1034:17;1029:3;1025:27;1022:36;1019:2;;;1083:1;1080;1073:12;1019:2;1119:1;1104:235;1129:6;1126:1;1123:13;1104:235;;;1197:3;1226:34;1256:3;1244:10;1226:34;:::i;:::-;1221:3;1214:47;1290:4;1285:3;1281:14;1274:21;;1324:4;1319:3;1315:14;1308:21;;1164:175;1151:1;1148;1144:9;1139:14;;1104:235;;;1108:14;798:547;;;;;;;:::o;1351:139::-;1397:5;1435:6;1422:20;1413:29;;1451:33;1478:5;1451:33;:::i;:::-;1403:87;;;;:::o;1513:303::-;1584:5;1633:3;1626:4;1618:6;1614:17;1610:27;1600:2;;1651:1;1648;1641:12;1600:2;1691:6;1678:20;1716:94;1806:3;1798:6;1791:4;1783:6;1779:17;1716:94;:::i;:::-;1707:103;;1590:226;;;;;:::o;1836:297::-;1904:5;1953:3;1946:4;1938:6;1934:17;1930:27;1920:2;;1971:1;1968;1961:12;1920:2;2011:6;1998:20;2036:91;2123:3;2115:6;2108:4;2100:6;2096:17;2036:91;:::i;:::-;2027:100;;1910:223;;;;;:::o;2139:133::-;2182:5;2220:6;2207:20;2198:29;;2236:30;2260:5;2236:30;:::i;:::-;2188:84;;;;:::o;2278:137::-;2323:5;2361:6;2348:20;2339:29;;2377:32;2403:5;2377:32;:::i;:::-;2329:86;;;;:::o;2421:141::-;2477:5;2508:6;2502:13;2493:22;;2524:32;2550:5;2524:32;:::i;:::-;2483:79;;;;:::o;2568:143::-;2625:5;2656:6;2650:13;2641:22;;2672:33;2699:5;2672:33;:::i;:::-;2631:80;;;;:::o;2717:141::-;2773:5;2804:6;2798:13;2789:22;;2820:32;2846:5;2820:32;:::i;:::-;2779:79;;;;:::o;2864:262::-;2923:6;2972:2;2960:9;2951:7;2947:23;2943:32;2940:2;;;2988:1;2985;2978:12;2940:2;3031:1;3056:53;3101:7;3092:6;3081:9;3077:22;3056:53;:::i;:::-;3046:63;;3002:117;2930:196;;;;:::o;3132:405::-;3199:6;3207;3256:2;3244:9;3235:7;3231:23;3227:32;3224:2;;;3272:1;3269;3262:12;3224:2;3315:1;3340:53;3385:7;3376:6;3365:9;3361:22;3340:53;:::i;:::-;3330:63;;3286:117;3442:2;3468:52;3512:7;3503:6;3492:9;3488:22;3468:52;:::i;:::-;3458:62;;3413:117;3214:323;;;;;:::o;3543:687::-;3658:6;3666;3715:2;3703:9;3694:7;3690:23;3686:32;3683:2;;;3731:1;3728;3721:12;3683:2;3802:1;3791:9;3787:17;3774:31;3832:18;3824:6;3821:30;3818:2;;;3864:1;3861;3854:12;3818:2;3892:78;3962:7;3953:6;3942:9;3938:22;3892:78;:::i;:::-;3882:88;;3745:235;4047:2;4036:9;4032:18;4019:32;4078:18;4070:6;4067:30;4064:2;;;4110:1;4107;4100:12;4064:2;4138:75;4205:7;4196:6;4185:9;4181:22;4138:75;:::i;:::-;4128:85;;3990:233;3673:557;;;;;:::o;4236:904::-;4339:6;4347;4355;4363;4371;4420:3;4408:9;4399:7;4395:23;4391:33;4388:2;;;4437:1;4434;4427:12;4388:2;4480:1;4505:63;4560:7;4551:6;4540:9;4536:22;4505:63;:::i;:::-;4495:73;;4451:127;4617:2;4643:63;4698:7;4689:6;4678:9;4674:22;4643:63;:::i;:::-;4633:73;;4588:128;4755:2;4781:64;4837:7;4828:6;4817:9;4813:22;4781:64;:::i;:::-;4771:74;;4726:129;4894:2;4920:64;4976:7;4967:6;4956:9;4952:22;4920:64;:::i;:::-;4910:74;;4865:129;5033:3;5060:63;5115:7;5106:6;5095:9;5091:22;5060:63;:::i;:::-;5050:73;;5004:129;4378:762;;;;;;;;:::o;5146:179::-;5215:10;5236:46;5278:3;5270:6;5236:46;:::i;:::-;5314:4;5309:3;5305:14;5291:28;;5226:99;;;;:::o;5331:167::-;5394:10;5415:40;5451:3;5443:6;5415:40;:::i;:::-;5487:4;5482:3;5478:14;5464:28;;5405:93;;;;:::o;5504:108::-;5581:24;5599:5;5581:24;:::i;:::-;5576:3;5569:37;5559:53;;:::o;5618:118::-;5705:24;5723:5;5705:24;:::i;:::-;5700:3;5693:37;5683:53;;:::o;5772:732::-;5891:3;5920:54;5968:5;5920:54;:::i;:::-;5990:86;6069:6;6064:3;5990:86;:::i;:::-;5983:93;;6100:56;6150:5;6100:56;:::i;:::-;6179:7;6210:1;6195:284;6220:6;6217:1;6214:13;6195:284;;;6296:6;6290:13;6323:63;6382:3;6367:13;6323:63;:::i;:::-;6316:70;;6409:60;6462:6;6409:60;:::i;:::-;6399:70;;6255:224;6242:1;6239;6235:9;6230:14;;6195:284;;;6199:14;6495:3;6488:10;;5896:608;;;;;;;:::o;6534:708::-;6647:3;6676:51;6721:5;6676:51;:::i;:::-;6743:83;6819:6;6814:3;6743:83;:::i;:::-;6736:90;;6850:53;6897:5;6850:53;:::i;:::-;6926:7;6957:1;6942:275;6967:6;6964:1;6961:13;6942:275;;;7043:6;7037:13;7070:57;7123:3;7108:13;7070:57;:::i;:::-;7063:64;;7150:57;7200:6;7150:57;:::i;:::-;7140:67;;7002:215;6989:1;6986;6982:9;6977:14;;6942:275;;;6946:14;7233:3;7226:10;;6652:590;;;;;;;:::o;7248:99::-;7319:21;7334:5;7319:21;:::i;:::-;7314:3;7307:34;7297:50;;:::o;7353:109::-;7434:21;7449:5;7434:21;:::i;:::-;7429:3;7422:34;7412:50;;:::o;7468:191::-;7585:67;7646:5;7585:67;:::i;:::-;7580:3;7573:80;7563:96;;:::o;7665:115::-;7750:23;7767:5;7750:23;:::i;:::-;7745:3;7738:36;7728:52;;:::o;7786:366::-;7928:3;7949:67;8013:2;8008:3;7949:67;:::i;:::-;7942:74;;8025:93;8114:3;8025:93;:::i;:::-;8143:2;8138:3;8134:12;8127:19;;7932:220;;;:::o;8158:366::-;8300:3;8321:67;8385:2;8380:3;8321:67;:::i;:::-;8314:74;;8397:93;8486:3;8397:93;:::i;:::-;8515:2;8510:3;8506:12;8499:19;;8304:220;;;:::o;8530:366::-;8672:3;8693:67;8757:2;8752:3;8693:67;:::i;:::-;8686:74;;8769:93;8858:3;8769:93;:::i;:::-;8887:2;8882:3;8878:12;8871:19;;8676:220;;;:::o;8902:366::-;9044:3;9065:67;9129:2;9124:3;9065:67;:::i;:::-;9058:74;;9141:93;9230:3;9141:93;:::i;:::-;9259:2;9254:3;9250:12;9243:19;;9048:220;;;:::o;9274:366::-;9416:3;9437:67;9501:2;9496:3;9437:67;:::i;:::-;9430:74;;9513:93;9602:3;9513:93;:::i;:::-;9631:2;9626:3;9622:12;9615:19;;9420:220;;;:::o;9646:366::-;9788:3;9809:67;9873:2;9868:3;9809:67;:::i;:::-;9802:74;;9885:93;9974:3;9885:93;:::i;:::-;10003:2;9998:3;9994:12;9987:19;;9792:220;;;:::o;10018:366::-;10160:3;10181:67;10245:2;10240:3;10181:67;:::i;:::-;10174:74;;10257:93;10346:3;10257:93;:::i;:::-;10375:2;10370:3;10366:12;10359:19;;10164:220;;;:::o;10390:366::-;10532:3;10553:67;10617:2;10612:3;10553:67;:::i;:::-;10546:74;;10629:93;10718:3;10629:93;:::i;:::-;10747:2;10742:3;10738:12;10731:19;;10536:220;;;:::o;10762:366::-;10904:3;10925:67;10989:2;10984:3;10925:67;:::i;:::-;10918:74;;11001:93;11090:3;11001:93;:::i;:::-;11119:2;11114:3;11110:12;11103:19;;10908:220;;;:::o;11134:366::-;11276:3;11297:67;11361:2;11356:3;11297:67;:::i;:::-;11290:74;;11373:93;11462:3;11373:93;:::i;:::-;11491:2;11486:3;11482:12;11475:19;;11280:220;;;:::o;11506:366::-;11648:3;11669:67;11733:2;11728:3;11669:67;:::i;:::-;11662:74;;11745:93;11834:3;11745:93;:::i;:::-;11863:2;11858:3;11854:12;11847:19;;11652:220;;;:::o;11878:118::-;11965:24;11983:5;11965:24;:::i;:::-;11960:3;11953:37;11943:53;;:::o;12002:112::-;12085:22;12101:5;12085:22;:::i;:::-;12080:3;12073:35;12063:51;;:::o;12120:222::-;12213:4;12251:2;12240:9;12236:18;12228:26;;12264:71;12332:1;12321:9;12317:17;12308:6;12264:71;:::i;:::-;12218:124;;;;:::o;12348:545::-;12521:4;12559:3;12548:9;12544:19;12536:27;;12573:71;12641:1;12630:9;12626:17;12617:6;12573:71;:::i;:::-;12654:70;12720:2;12709:9;12705:18;12696:6;12654:70;:::i;:::-;12734;12800:2;12789:9;12785:18;12776:6;12734:70;:::i;:::-;12814:72;12882:2;12871:9;12867:18;12858:6;12814:72;:::i;:::-;12526:367;;;;;;;:::o;12899:622::-;13114:4;13152:2;13141:9;13137:18;13129:26;;13201:9;13195:4;13191:20;13187:1;13176:9;13172:17;13165:47;13229:108;13332:4;13323:6;13229:108;:::i;:::-;13221:116;;13384:9;13378:4;13374:20;13369:2;13358:9;13354:18;13347:48;13412:102;13509:4;13500:6;13412:102;:::i;:::-;13404:110;;13119:402;;;;;:::o;13527:210::-;13614:4;13652:2;13641:9;13637:18;13629:26;;13665:65;13727:1;13716:9;13712:17;13703:6;13665:65;:::i;:::-;13619:118;;;;:::o;13743:282::-;13866:4;13904:2;13893:9;13889:18;13881:26;;13917:101;14015:1;14004:9;14000:17;13991:6;13917:101;:::i;:::-;13871:154;;;;:::o;14031:218::-;14122:4;14160:2;14149:9;14145:18;14137:26;;14173:69;14239:1;14228:9;14224:17;14215:6;14173:69;:::i;:::-;14127:122;;;;:::o;14255:324::-;14372:4;14410:2;14399:9;14395:18;14387:26;;14423:69;14489:1;14478:9;14474:17;14465:6;14423:69;:::i;:::-;14502:70;14568:2;14557:9;14553:18;14544:6;14502:70;:::i;:::-;14377:202;;;;;:::o;14585:434::-;14730:4;14768:2;14757:9;14753:18;14745:26;;14781:69;14847:1;14836:9;14832:17;14823:6;14781:69;:::i;:::-;14860:70;14926:2;14915:9;14911:18;14902:6;14860:70;:::i;:::-;14940:72;15008:2;14997:9;14993:18;14984:6;14940:72;:::i;:::-;14735:284;;;;;;:::o;15025:419::-;15191:4;15229:2;15218:9;15214:18;15206:26;;15278:9;15272:4;15268:20;15264:1;15253:9;15249:17;15242:47;15306:131;15432:4;15306:131;:::i;:::-;15298:139;;15196:248;;;:::o;15450:419::-;15616:4;15654:2;15643:9;15639:18;15631:26;;15703:9;15697:4;15693:20;15689:1;15678:9;15674:17;15667:47;15731:131;15857:4;15731:131;:::i;:::-;15723:139;;15621:248;;;:::o;15875:419::-;16041:4;16079:2;16068:9;16064:18;16056:26;;16128:9;16122:4;16118:20;16114:1;16103:9;16099:17;16092:47;16156:131;16282:4;16156:131;:::i;:::-;16148:139;;16046:248;;;:::o;16300:419::-;16466:4;16504:2;16493:9;16489:18;16481:26;;16553:9;16547:4;16543:20;16539:1;16528:9;16524:17;16517:47;16581:131;16707:4;16581:131;:::i;:::-;16573:139;;16471:248;;;:::o;16725:419::-;16891:4;16929:2;16918:9;16914:18;16906:26;;16978:9;16972:4;16968:20;16964:1;16953:9;16949:17;16942:47;17006:131;17132:4;17006:131;:::i;:::-;16998:139;;16896:248;;;:::o;17150:419::-;17316:4;17354:2;17343:9;17339:18;17331:26;;17403:9;17397:4;17393:20;17389:1;17378:9;17374:17;17367:47;17431:131;17557:4;17431:131;:::i;:::-;17423:139;;17321:248;;;:::o;17575:419::-;17741:4;17779:2;17768:9;17764:18;17756:26;;17828:9;17822:4;17818:20;17814:1;17803:9;17799:17;17792:47;17856:131;17982:4;17856:131;:::i;:::-;17848:139;;17746:248;;;:::o;18000:419::-;18166:4;18204:2;18193:9;18189:18;18181:26;;18253:9;18247:4;18243:20;18239:1;18228:9;18224:17;18217:47;18281:131;18407:4;18281:131;:::i;:::-;18273:139;;18171:248;;;:::o;18425:419::-;18591:4;18629:2;18618:9;18614:18;18606:26;;18678:9;18672:4;18668:20;18664:1;18653:9;18649:17;18642:47;18706:131;18832:4;18706:131;:::i;:::-;18698:139;;18596:248;;;:::o;18850:419::-;19016:4;19054:2;19043:9;19039:18;19031:26;;19103:9;19097:4;19093:20;19089:1;19078:9;19074:17;19067:47;19131:131;19257:4;19131:131;:::i;:::-;19123:139;;19021:248;;;:::o;19275:419::-;19441:4;19479:2;19468:9;19464:18;19456:26;;19528:9;19522:4;19518:20;19514:1;19503:9;19499:17;19492:47;19556:131;19682:4;19556:131;:::i;:::-;19548:139;;19446:248;;;:::o;19700:214::-;19789:4;19827:2;19816:9;19812:18;19804:26;;19840:67;19904:1;19893:9;19889:17;19880:6;19840:67;:::i;:::-;19794:120;;;;:::o;19920:129::-;19954:6;19981:20;;:::i;:::-;19971:30;;20010:33;20038:4;20030:6;20010:33;:::i;:::-;19961:88;;;:::o;20055:75::-;20088:6;20121:2;20115:9;20105:19;;20095:35;:::o;20136:311::-;20213:4;20303:18;20295:6;20292:30;20289:2;;;20325:18;;:::i;:::-;20289:2;20375:4;20367:6;20363:17;20355:25;;20435:4;20429;20425:15;20417:23;;20218:229;;;:::o;20453:308::-;20527:4;20617:18;20609:6;20606:30;20603:2;;;20639:18;;:::i;:::-;20603:2;20689:4;20681:6;20677:17;20669:25;;20749:4;20743;20739:15;20731:23;;20532:229;;;:::o;20767:132::-;20834:4;20857:3;20849:11;;20887:4;20882:3;20878:14;20870:22;;20839:60;;;:::o;20905:129::-;20969:4;20992:3;20984:11;;21022:4;21017:3;21013:14;21005:22;;20974:60;;;:::o;21040:114::-;21107:6;21141:5;21135:12;21125:22;;21114:40;;;:::o;21160:111::-;21224:6;21258:5;21252:12;21242:22;;21231:40;;;:::o;21277:113::-;21347:4;21379;21374:3;21370:14;21362:22;;21352:38;;;:::o;21396:110::-;21463:4;21495;21490:3;21486:14;21478:22;;21468:38;;;:::o;21512:184::-;21611:11;21645:6;21640:3;21633:19;21685:4;21680:3;21676:14;21661:29;;21623:73;;;;:::o;21702:181::-;21798:11;21832:6;21827:3;21820:19;21872:4;21867:3;21863:14;21848:29;;21810:73;;;;:::o;21889:169::-;21973:11;22007:6;22002:3;21995:19;22047:4;22042:3;22038:14;22023:29;;21985:73;;;;:::o;22064:385::-;22103:1;22120:19;22137:1;22120:19;:::i;:::-;22115:24;;22153:19;22170:1;22153:19;:::i;:::-;22148:24;;22191:1;22181:2;;22196:18;;:::i;:::-;22181:2;22382:1;22379;22375:9;22372:1;22369:16;22288:66;22285:1;22282:73;22265:130;22262:2;;;22398:18;;:::i;:::-;22262:2;22441:1;22438;22433:10;22428:15;;22105:344;;;;:::o;22455:991::-;22494:7;22517:19;22534:1;22517:19;:::i;:::-;22512:24;;22550:19;22567:1;22550:19;:::i;:::-;22545:24;;22751:1;22683:66;22679:74;22676:1;22673:81;22668:1;22665;22661:9;22657:1;22654;22650:9;22646:25;22642:113;22639:2;;;22758:18;;:::i;:::-;22639:2;22962:1;22894:66;22889:75;22886:1;22882:83;22877:1;22874;22870:9;22866:1;22863;22859:9;22855:25;22851:115;22848:2;;;22969:18;;:::i;:::-;22848:2;23173:1;23105:66;23100:75;23097:1;23093:83;23088:1;23085;23081:9;23077:1;23074;23070:9;23066:25;23062:115;23059:2;;;23180:18;;:::i;:::-;23059:2;23383:1;23315:66;23310:75;23307:1;23303:83;23298:1;23295;23291:9;23287:1;23284;23280:9;23276:25;23272:115;23269:2;;;23390:18;;:::i;:::-;23269:2;23438:1;23435;23431:9;23420:20;;22502:944;;;;:::o;23452:96::-;23489:7;23518:24;23536:5;23518:24;:::i;:::-;23507:35;;23497:51;;;:::o;23554:90::-;23588:7;23631:5;23624:13;23617:21;23606:32;;23596:48;;;:::o;23650:76::-;23686:7;23715:5;23704:16;;23694:32;;;:::o;23732:126::-;23769:7;23809:42;23802:5;23798:54;23787:65;;23777:81;;;:::o;23864:77::-;23901:7;23930:5;23919:16;;23909:32;;;:::o;23947:86::-;23982:7;24022:4;24015:5;24011:16;24000:27;;23990:43;;;:::o;24039:105::-;24075:7;24115:22;24108:5;24104:34;24093:45;;24083:61;;;:::o;24150:186::-;24230:9;24263:67;24324:5;24263:67;:::i;:::-;24250:80;;24240:96;;;:::o;24342:143::-;24422:9;24455:24;24473:5;24455:24;:::i;:::-;24442:37;;24432:53;;;:::o;24491:281::-;24574:27;24596:4;24574:27;:::i;:::-;24566:6;24562:40;24704:6;24692:10;24689:22;24668:18;24656:10;24653:34;24650:62;24647:2;;;24715:18;;:::i;:::-;24647:2;24755:10;24751:2;24744:22;24534:238;;;:::o;24778:233::-;24817:3;24840:24;24858:5;24840:24;:::i;:::-;24831:33;;24886:66;24879:5;24876:77;24873:2;;;24956:18;;:::i;:::-;24873:2;25003:1;24996:5;24992:13;24985:20;;24821:190;;;:::o;25017:180::-;25065:77;25062:1;25055:88;25162:4;25159:1;25152:15;25186:4;25183:1;25176:15;25203:180;25251:77;25248:1;25241:88;25348:4;25345:1;25338:15;25372:4;25369:1;25362:15;25389:180;25437:77;25434:1;25427:88;25534:4;25531:1;25524:15;25558:4;25555:1;25548:15;25575:102;25616:6;25667:2;25663:7;25658:2;25651:5;25647:14;25643:28;25633:38;;25623:54;;;:::o;25683:225::-;25823:34;25819:1;25811:6;25807:14;25800:58;25892:8;25887:2;25879:6;25875:15;25868:33;25789:119;:::o;25914:164::-;26054:16;26050:1;26042:6;26038:14;26031:40;26020:58;:::o;26084:177::-;26224:29;26220:1;26212:6;26208:14;26201:53;26190:71;:::o;26267:177::-;26407:29;26403:1;26395:6;26391:14;26384:53;26373:71;:::o;26450:174::-;26590:26;26586:1;26578:6;26574:14;26567:50;26556:68;:::o;26630:178::-;26770:30;26766:1;26758:6;26754:14;26747:54;26736:72;:::o;26814:175::-;26954:27;26950:1;26942:6;26938:14;26931:51;26920:69;:::o;26995:176::-;27135:28;27131:1;27123:6;27119:14;27112:52;27101:70;:::o;27177:182::-;27317:34;27313:1;27305:6;27301:14;27294:58;27283:76;:::o;27365:177::-;27505:29;27501:1;27493:6;27489:14;27482:53;27471:71;:::o;27548:163::-;27688:15;27684:1;27676:6;27672:14;27665:39;27654:57;:::o;27717:122::-;27790:24;27808:5;27790:24;:::i;:::-;27783:5;27780:35;27770:2;;27829:1;27826;27819:12;27770:2;27760:79;:::o;27845:116::-;27915:21;27930:5;27915:21;:::i;:::-;27908:5;27905:32;27895:2;;27951:1;27948;27941:12;27895:2;27885:76;:::o;27967:120::-;28039:23;28056:5;28039:23;:::i;:::-;28032:5;28029:34;28019:2;;28077:1;28074;28067:12;28019:2;28009:78;:::o;28093:122::-;28166:24;28184:5;28166:24;:::i;:::-;28159:5;28156:35;28146:2;;28205:1;28202;28195:12;28146:2;28136:79;:::o;28221:120::-;28293:23;28310:5;28293:23;:::i;:::-;28286:5;28283:34;28273:2;;28331:1;28328;28321:12;28273:2;28263:78;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "1639400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "decimals()": "424",
                "etherPriceAggregator()": "1279",
                "etherUSD()": "infinite",
                "isUpdater(address)": "1656",
                "isWhiteListed(address)": "1568",
                "nftPrices(address)": "infinite",
                "owner()": "1289",
                "renounceOwnership()": "24419",
                "setPrice(address,int256)": "infinite",
                "setUpdaters(address[],bool[])": "infinite",
                "setWhiteList(address[],bool[])": "infinite",
                "transferOwnership(address)": "24811",
                "viewPrice(address)": "infinite"
              }
            },
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "etherPriceAggregator()": "8e069115",
              "etherUSD()": "173a0da2",
              "isUpdater(address)": "4fdfb086",
              "isWhiteListed(address)": "6f9170f6",
              "nftPrices(address)": "a0868e2b",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "setPrice(address,int256)": "034dd29b",
              "setUpdaters(address[],bool[])": "2f55b50d",
              "setWhiteList(address[],bool[])": "cc5fe3ab",
              "transferOwnership(address)": "f2fde38b",
              "viewPrice(address)": "1744276d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_etherUSDAggregator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"_usdPrice\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"_etherPrice\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"}],\"name\":\"SetPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_updaters\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"_statusList\",\"type\":\"bool[]\"}],\"name\":\"SetUpdaters\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_whiteList\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"_statusList\",\"type\":\"bool[]\"}],\"name\":\"SetWhiteList\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"etherPriceAggregator\",\"outputs\":[{\"internalType\":\"contract IChainlinkV3Aggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"etherUSD\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isUpdater\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhiteListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nftPrices\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"usdPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"etherPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdatedBlockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"_usdPrice\",\"type\":\"int256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_updaters\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_statusList\",\"type\":\"bool[]\"}],\"name\":\"setUpdaters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_whiteList\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_statusList\",\"type\":\"bool[]\"}],\"name\":\"setWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@commonlot\",\"kind\":\"dev\",\"methods\":{\"etherUSD()\":{\"returns\":{\"price\":\"of ether in USD\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setPrice(address,int256)\":{\"details\":\"set new price for the NFT\",\"params\":{\"_contract\":\"address of collection contract\",\"_usdPrice\":\"usd price of NFT token (decimal is 8)\"}},\"setUpdaters(address[],bool[])\":{\"details\":\"set new updaters that can write NFT price\",\"params\":{\"_statusList\":\"status array of updaters\",\"_updaters\":\"address array of updaters\"}},\"setWhiteList(address[],bool[])\":{\"details\":\"set whitelisted address that can read oracle price data\",\"params\":{\"_statusList\":\"status array\",\"_whiteList\":\"address array\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"viewPrice(address)\":{\"returns\":{\"_0\":\"usd & ether price of NFT token\"}}},\"stateVariables\":{\"decimals\":{\"details\":\"decimal\"},\"etherPriceAggregator\":{\"details\":\"chainlink Price feed for ETH / USD\"},\"isWhiteListed\":{\"details\":\"return true when address can read oracle price data\"},\"nftPrices\":{\"details\":\"contract addrss => PriceInfo\"}},\"title\":\"MetaVerseNFTOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isUpdater(address)\":{\"notice\":\"return true if address can update price\"}},\"notice\":\"oracle contract for NFT\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MetaVerseNFTOracle.sol\":\"MetaVerseNFTOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\"},\"contracts/MetaVerseNFTOracle.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\nimport './interfaces/IChainlinkV3Aggregator.sol';\\nimport './interfaces/INFTPriceOracle.sol';\\n\\n////////////////////////////////////////////////////////////////////////////////////////////\\n/// @title MetaVerseNFTOracle\\n/// @author @commonlot\\n/// @notice oracle contract for NFT\\n////////////////////////////////////////////////////////////////////////////////////////////\\n\\ncontract MetaVerseNFTOracle is Ownable, INFTPriceOracle {\\n    /// @dev contract addrss => PriceInfo\\n    mapping(address => PriceInfo) public nftPrices;\\n\\n    /// @dev return true when address can read oracle price data\\n    mapping(address => bool) public isWhiteListed;\\n\\n    /// @notice return true if address can update price\\n    mapping(address => bool) public isUpdater;\\n\\n    /// @dev chainlink Price feed for ETH / USD\\n    IChainlinkV3Aggregator public override etherPriceAggregator;\\n\\n    /// @dev decimal\\n    uint8 public constant decimals = 8;\\n\\n    modifier onlyUpdater() {\\n        require(isUpdater[msg.sender] || msg.sender == owner(), 'ONLY_UPDATERS');\\n        _;\\n    }\\n\\n    modifier onlyWhitelist() {\\n        require(isWhiteListed[msg.sender] || msg.sender == owner(), 'ONLY_WHITELIST');\\n        _;\\n    }\\n\\n    event SetUpdaters(address[] _updaters, bool[] _statusList);\\n    event SetWhiteList(address[] _whiteList, bool[] _statusList);\\n    event SetPrice(address _contract, int256 _usdPrice, int256 _etherPrice, address _updater);\\n\\n    constructor(address _etherUSDAggregator) {\\n        etherPriceAggregator = IChainlinkV3Aggregator(_etherUSDAggregator);\\n    }\\n\\n    /// @dev set new updaters that can write NFT price\\n    /// @param _updaters address array of updaters\\n    /// @param _statusList status array of updaters\\n    function setUpdaters(address[] memory _updaters, bool[] memory _statusList) external onlyOwner {\\n        require(\\n            _updaters.length > 0 &&\\n                _statusList.length > 0 &&\\n                _statusList.length == _statusList.length,\\n            'setUpdaters:INVALID_DATA'\\n        );\\n        for (uint256 i = 0; i < _updaters.length; i++) {\\n            require(_updaters[i] != address(0), 'setUpdaters:INVALID_UPDATER');\\n            isUpdater[_updaters[i]] = _statusList[i];\\n        }\\n\\n        emit SetUpdaters(_updaters, _statusList);\\n    }\\n\\n    /// @dev set new price for the NFT\\n    /// @param _contract address of collection contract\\n    /// @param _usdPrice usd price of NFT token (decimal is 8)\\n    function setPrice(address _contract, int256 _usdPrice) external onlyUpdater {\\n        require(_contract != address(0), 'setPrice: INVALID_CONTRACT');\\n        require(_usdPrice > 0, 'setPrice: INVALID_USD_PRICE');\\n\\n        int256 _etherPrice = (_usdPrice * 1e8) / etherUSD();\\n\\n        nftPrices[_contract] = PriceInfo({\\n            usdPrice: _usdPrice,\\n            etherPrice: _etherPrice,\\n            lastUpdatedBlockNumber: block.number\\n        });\\n\\n        emit SetPrice(_contract, _usdPrice, _etherPrice, msg.sender);\\n    }\\n\\n    /// @dev set whitelisted address that can read oracle price data\\n    /// @param _whiteList address array\\n    /// @param _statusList status array\\n    function setWhiteList(address[] memory _whiteList, bool[] memory _statusList)\\n        public\\n        override\\n        onlyOwner\\n    {\\n        require(\\n            _whiteList.length > 0 &&\\n                _statusList.length > 0 &&\\n                _whiteList.length == _statusList.length,\\n            'setWhiteList:INVALID_DATA'\\n        );\\n        for (uint256 i = 0; i < _whiteList.length; i++) {\\n            require(_whiteList[i] != address(0), 'setWhiteList:INVALID_ADDRESS');\\n            isWhiteListed[_whiteList[i]] = _statusList[i];\\n        }\\n\\n        emit SetWhiteList(_whiteList, _statusList);\\n    }\\n\\n    /// @return usd & ether price of NFT token\\n    function viewPrice(address _contract)\\n        external\\n        view\\n        override\\n        onlyWhitelist\\n        returns (int256, int256)\\n    {\\n        require(_contract != address(0), 'viewPrice: INVALID_CONTRACT');\\n        PriceInfo memory nft = nftPrices[_contract];\\n        return (nft.usdPrice, nft.etherPrice);\\n    }\\n\\n    /// @return price of ether in USD\\n    function etherUSD() public view override onlyWhitelist returns (int256 price) {\\n        (, price, , , ) = etherPriceAggregator.latestRoundData();\\n    }\\n}\\n\",\"keccak256\":\"0x68ab033e42750b0b9ae3717c190a0fa39d9f61bef1a94c235b4c8aff92a2f5c6\",\"license\":\"Unlicense\"},\"contracts/interfaces/IChainlinkV3Aggregator.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\ninterface IChainlinkV3Aggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x21822e9fba0ff238d3e19cb89b126c1266a40ec1251918ba037a0eac05f865da\",\"license\":\"Unlicense\"},\"contracts/interfaces/INFTPriceOracle.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport './IChainlinkV3Aggregator.sol';\\n\\ninterface INFTPriceOracle {\\n    /// @dev priceInfo of NFT\\n    struct PriceInfo {\\n        int256 usdPrice;\\n        int256 etherPrice;\\n        uint256 lastUpdatedBlockNumber;\\n    }\\n\\n    /// @dev chainlink Price feed for ETH / USD\\n    function etherPriceAggregator() external returns (IChainlinkV3Aggregator);\\n\\n    /// @dev set whitelisted address that can read oracle price data\\n    function setWhiteList(address[] memory _whiteList, bool[] memory _statusList) external;\\n\\n    /// @return usd & ether price of NFT token\\n    function viewPrice(address _contract) external returns (int256, int256);\\n\\n    /// @return price: usd price of Ether\\n    function etherUSD() external returns (int256);\\n}\\n\",\"keccak256\":\"0x417184f08398670703a5fb7d31286138b304990547e232ca8720ab84399cb11e\",\"license\":\"Unlicense\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 7,
                "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 146,
                "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
                "label": "nftPrices",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_struct(PriceInfo)527_storage)"
              },
              {
                "astId": 151,
                "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
                "label": "isWhiteListed",
                "offset": 0,
                "slot": "2",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 156,
                "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
                "label": "isUpdater",
                "offset": 0,
                "slot": "3",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 161,
                "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
                "label": "etherPriceAggregator",
                "offset": 0,
                "slot": "4",
                "type": "t_contract(IChainlinkV3Aggregator)517"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_contract(IChainlinkV3Aggregator)517": {
                "encoding": "inplace",
                "label": "contract IChainlinkV3Aggregator",
                "numberOfBytes": "20"
              },
              "t_int256": {
                "encoding": "inplace",
                "label": "int256",
                "numberOfBytes": "32"
              },
              "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_mapping(t_address,t_struct(PriceInfo)527_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct INFTPriceOracle.PriceInfo)",
                "numberOfBytes": "32",
                "value": "t_struct(PriceInfo)527_storage"
              },
              "t_struct(PriceInfo)527_storage": {
                "encoding": "inplace",
                "label": "struct INFTPriceOracle.PriceInfo",
                "members": [
                  {
                    "astId": 522,
                    "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
                    "label": "usdPrice",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_int256"
                  },
                  {
                    "astId": 524,
                    "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
                    "label": "etherPrice",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_int256"
                  },
                  {
                    "astId": 526,
                    "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
                    "label": "lastUpdatedBlockNumber",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "96"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "isUpdater(address)": {
                "notice": "return true if address can update price"
              }
            },
            "notice": "oracle contract for NFT",
            "version": 1
          }
        }
      },
      "contracts/interfaces/IChainlinkV3Aggregator.sol": {
        "IChainlinkV3Aggregator": {
          "abi": [
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "latestRoundData()": "feaf968c"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IChainlinkV3Aggregator.sol\":\"IChainlinkV3Aggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IChainlinkV3Aggregator.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\ninterface IChainlinkV3Aggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x21822e9fba0ff238d3e19cb89b126c1266a40ec1251918ba037a0eac05f865da\",\"license\":\"Unlicense\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/interfaces/INFTPriceOracle.sol": {
        "INFTPriceOracle": {
          "abi": [
            {
              "inputs": [],
              "name": "etherPriceAggregator",
              "outputs": [
                {
                  "internalType": "contract IChainlinkV3Aggregator",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "etherUSD",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_whiteList",
                  "type": "address[]"
                },
                {
                  "internalType": "bool[]",
                  "name": "_statusList",
                  "type": "bool[]"
                }
              ],
              "name": "setWhiteList",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                }
              ],
              "name": "viewPrice",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "etherPriceAggregator()": {
                "details": "chainlink Price feed for ETH / USD"
              },
              "etherUSD()": {
                "returns": {
                  "_0": "price: usd price of Ether"
                }
              },
              "setWhiteList(address[],bool[])": {
                "details": "set whitelisted address that can read oracle price data"
              },
              "viewPrice(address)": {
                "returns": {
                  "_0": "usd & ether price of NFT token"
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "etherPriceAggregator()": "8e069115",
              "etherUSD()": "173a0da2",
              "setWhiteList(address[],bool[])": "cc5fe3ab",
              "viewPrice(address)": "1744276d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"etherPriceAggregator\",\"outputs\":[{\"internalType\":\"contract IChainlinkV3Aggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"etherUSD\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_whiteList\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_statusList\",\"type\":\"bool[]\"}],\"name\":\"setWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"etherPriceAggregator()\":{\"details\":\"chainlink Price feed for ETH / USD\"},\"etherUSD()\":{\"returns\":{\"_0\":\"price: usd price of Ether\"}},\"setWhiteList(address[],bool[])\":{\"details\":\"set whitelisted address that can read oracle price data\"},\"viewPrice(address)\":{\"returns\":{\"_0\":\"usd & ether price of NFT token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INFTPriceOracle.sol\":\"INFTPriceOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IChainlinkV3Aggregator.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\ninterface IChainlinkV3Aggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x21822e9fba0ff238d3e19cb89b126c1266a40ec1251918ba037a0eac05f865da\",\"license\":\"Unlicense\"},\"contracts/interfaces/INFTPriceOracle.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport './IChainlinkV3Aggregator.sol';\\n\\ninterface INFTPriceOracle {\\n    /// @dev priceInfo of NFT\\n    struct PriceInfo {\\n        int256 usdPrice;\\n        int256 etherPrice;\\n        uint256 lastUpdatedBlockNumber;\\n    }\\n\\n    /// @dev chainlink Price feed for ETH / USD\\n    function etherPriceAggregator() external returns (IChainlinkV3Aggregator);\\n\\n    /// @dev set whitelisted address that can read oracle price data\\n    function setWhiteList(address[] memory _whiteList, bool[] memory _statusList) external;\\n\\n    /// @return usd & ether price of NFT token\\n    function viewPrice(address _contract) external returns (int256, int256);\\n\\n    /// @return price: usd price of Ether\\n    function etherUSD() external returns (int256);\\n}\\n\",\"keccak256\":\"0x417184f08398670703a5fb7d31286138b304990547e232ca8720ab84399cb11e\",\"license\":\"Unlicense\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/mock/EtherUSDMockAggregator.sol": {
        "EtherUSDMockAggregator": {
          "abi": [
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "",
                  "type": "uint80"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506101b2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063313ce5671461003b578063feaf968c14610059575b600080fd5b61004361007b565b604051610050919061012a565b60405180910390f35b610061610084565b6040516100729594939291906100d7565b60405180910390f35b60006008905090565b6000806000806000645d21dba00093509091929394565b6100a481610145565b82525050565b6100b38161014f565b82525050565b6100c281610166565b82525050565b6100d181610159565b82525050565b600060a0820190506100ec60008301886100b9565b6100f9602083018761009b565b61010660408301866100aa565b61011360608301856100aa565b61012060808301846100b9565b9695505050505050565b600060208201905061013f60008301846100c8565b92915050565b6000819050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff8216905091905056fea264697066735822122069a2f0caba643c84543fcb9a5a5b0abceef950f8b484f696017c41356eb9420d64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH5 0x5D21DBA000 SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH2 0xA4 DUP2 PUSH2 0x145 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x14F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC2 DUP2 PUSH2 0x166 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD1 DUP2 PUSH2 0x159 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xEC PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xB9 JUMP JUMPDEST PUSH2 0xF9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x9B JUMP JUMPDEST PUSH2 0x106 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xAA JUMP JUMPDEST PUSH2 0x113 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xAA JUMP JUMPDEST PUSH2 0x120 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xB9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xA2F0CABA643C84543FCB SWAP11 GAS JUMPDEST EXP 0xBC 0xEE 0xF9 POP 0xF8 0xB4 DUP5 0xF6 SWAP7 ADD PUSH29 0x41356EB9420D64736F6C63430008040033000000000000000000000000 ",
              "sourceMap": "167:412:6:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1734:7",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "70:52:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "87:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "109:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_int256",
                                      "nodeType": "YulIdentifier",
                                      "src": "92:16:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "92:23:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "80:36:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "80:36:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_int256_to_t_int256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "58:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "65:3:7",
                            "type": ""
                          }
                        ],
                        "src": "7:115:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "193:53:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "210:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "233:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "215:17:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "215:24:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "203:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "203:37:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "203:37:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "181:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "188:3:7",
                            "type": ""
                          }
                        ],
                        "src": "128:118:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "315:52:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "332:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "354:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint80",
                                      "nodeType": "YulIdentifier",
                                      "src": "337:16:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "337:23:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "325:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "325:36:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "325:36:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint80_to_t_uint80_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "303:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "310:3:7",
                            "type": ""
                          }
                        ],
                        "src": "252:115:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "434:51:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "451:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "472:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "456:15:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "456:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "444:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "444:35:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "444:35:7"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "422:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "429:3:7",
                            "type": ""
                          }
                        ],
                        "src": "373:112:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "695:448:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "705:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "717:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "728:3:7",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "713:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "713:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "705:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "784:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "797:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "808:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "793:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "793:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint80_to_t_uint80_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "742:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "742:69:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "742:69:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "863:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "876:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "887:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "872:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "872:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int256_to_t_int256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "821:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "821:70:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "821:70:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "945:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "958:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "969:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "954:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "954:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "901:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "901:72:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "901:72:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1027:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1040:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1051:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1036:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1036:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "983:43:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "983:72:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "983:72:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1107:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1120:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1131:3:7",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1116:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1116:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint80_to_t_uint80_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1065:41:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1065:71:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1065:71:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__to_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "635:9:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "647:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "655:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "663:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "671:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "679:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "690:4:7",
                            "type": ""
                          }
                        ],
                        "src": "491:652:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1243:120:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1253:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1265:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1276:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1261:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1261:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1253:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1329:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1342:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1353:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1338:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1338:17:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1289:39:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1289:67:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1289:67:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1215:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1227:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1238:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1149:214:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1413:32:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1423:16:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1434:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1423:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_int256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1395:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1405:7:7",
                            "type": ""
                          }
                        ],
                        "src": "1369:76:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1496:32:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1506:16:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1517:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1506:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1478:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1488:7:7",
                            "type": ""
                          }
                        ],
                        "src": "1451:77:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1577:43:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1587:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1602:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1609:4:7",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1598:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1598:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1587:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1559:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1569:7:7",
                            "type": ""
                          }
                        ],
                        "src": "1534:86:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1670:61:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1680:45:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1695:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1702:22:7",
                                    "type": "",
                                    "value": "0xffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1691:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1691:34:7"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1680:7:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint80",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1652:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1662:7:7",
                            "type": ""
                          }
                        ],
                        "src": "1626:105:7"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint80_to_t_uint80_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint80(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__to_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint80_to_t_uint80_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint80_to_t_uint80_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n}\n",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063313ce5671461003b578063feaf968c14610059575b600080fd5b61004361007b565b604051610050919061012a565b60405180910390f35b610061610084565b6040516100729594939291906100d7565b60405180910390f35b60006008905090565b6000806000806000645d21dba00093509091929394565b6100a481610145565b82525050565b6100b38161014f565b82525050565b6100c281610166565b82525050565b6100d181610159565b82525050565b600060a0820190506100ec60008301886100b9565b6100f9602083018761009b565b61010660408301866100aa565b61011360608301856100aa565b61012060808301846100b9565b9695505050505050565b600060208201905061013f60008301846100c8565b92915050565b6000819050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff8216905091905056fea264697066735822122069a2f0caba643c84543fcb9a5a5b0abceef950f8b484f696017c41356eb9420d64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH5 0x5D21DBA000 SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH2 0xA4 DUP2 PUSH2 0x145 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x14F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC2 DUP2 PUSH2 0x166 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD1 DUP2 PUSH2 0x159 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xEC PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xB9 JUMP JUMPDEST PUSH2 0xF9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x9B JUMP JUMPDEST PUSH2 0x106 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xAA JUMP JUMPDEST PUSH2 0x113 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xAA JUMP JUMPDEST PUSH2 0x120 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xB9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xA2F0CABA643C84543FCB SWAP11 GAS JUMPDEST EXP 0xBC 0xEE 0xF9 POP 0xF8 0xB4 DUP5 0xF6 SWAP7 ADD PUSH29 0x41356EB9420D64736F6C63430008040033000000000000000000000000 ",
              "sourceMap": "167:412:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;231:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;321:256;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;231:84;283:5;307:1;300:8;;231:84;:::o;321:256::-;425:6;445:13;472:7;493;514:6;554:16;545:25;;321:256;;;;;:::o;7:115:7:-;92:23;109:5;92:23;:::i;:::-;87:3;80:36;70:52;;:::o;128:118::-;215:24;233:5;215:24;:::i;:::-;210:3;203:37;193:53;;:::o;252:115::-;337:23;354:5;337:23;:::i;:::-;332:3;325:36;315:52;;:::o;373:112::-;456:22;472:5;456:22;:::i;:::-;451:3;444:35;434:51;;:::o;491:652::-;690:4;728:3;717:9;713:19;705:27;;742:69;808:1;797:9;793:17;784:6;742:69;:::i;:::-;821:70;887:2;876:9;872:18;863:6;821:70;:::i;:::-;901:72;969:2;958:9;954:18;945:6;901:72;:::i;:::-;983;1051:2;1040:9;1036:18;1027:6;983:72;:::i;:::-;1065:71;1131:3;1120:9;1116:19;1107:6;1065:71;:::i;:::-;695:448;;;;;;;;:::o;1149:214::-;1238:4;1276:2;1265:9;1261:18;1253:26;;1289:67;1353:1;1342:9;1338:17;1329:6;1289:67;:::i;:::-;1243:120;;;;:::o;1369:76::-;1405:7;1434:5;1423:16;;1413:32;;;:::o;1451:77::-;1488:7;1517:5;1506:16;;1496:32;;;:::o;1534:86::-;1569:7;1609:4;1602:5;1598:16;1587:27;;1577:43;;;:::o;1626:105::-;1662:7;1702:22;1695:5;1691:34;1680:45;;1670:61;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "86800",
                "executionCost": "135",
                "totalCost": "86935"
              },
              "external": {
                "decimals()": "321",
                "latestRoundData()": "infinite"
              }
            },
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "latestRoundData()": "feaf968c"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/EtherUSDMockAggregator.sol\":\"EtherUSDMockAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\"},\"contracts/interfaces/IChainlinkV3Aggregator.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\ninterface IChainlinkV3Aggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x21822e9fba0ff238d3e19cb89b126c1266a40ec1251918ba037a0eac05f865da\",\"license\":\"Unlicense\"},\"contracts/mock/EtherUSDMockAggregator.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\nimport '../interfaces/IChainlinkV3Aggregator.sol';\\n\\ncontract EtherUSDMockAggregator is IChainlinkV3Aggregator {\\n    function decimals() external pure override returns (uint8) {\\n        return 8;\\n    }\\n\\n    function latestRoundData()\\n        external\\n        pure\\n        override\\n        returns (\\n            uint80,\\n            int256 answer,\\n            uint256,\\n            uint256,\\n            uint80\\n        )\\n    {\\n        answer = 100000000 * 4000;\\n    }\\n}\\n\",\"keccak256\":\"0x29efb2df5221a3a5038e480d26dc4b5eaa6597dfad554393335fa292879093ed\",\"license\":\"Unlicense\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "6321",
        "formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/mock/EtherUSDMockAggregator.sol:17:13:\n   |\n17 |             uint80,\n   |             ^^^^^^\n\n",
        "message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 431,
          "file": "contracts/mock/EtherUSDMockAggregator.sol",
          "start": 425
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "6321",
        "formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/mock/EtherUSDMockAggregator.sol:19:13:\n   |\n19 |             uint256,\n   |             ^^^^^^^\n\n",
        "message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 479,
          "file": "contracts/mock/EtherUSDMockAggregator.sol",
          "start": 472
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "6321",
        "formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/mock/EtherUSDMockAggregator.sol:20:13:\n   |\n20 |             uint256,\n   |             ^^^^^^^\n\n",
        "message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 500,
          "file": "contracts/mock/EtherUSDMockAggregator.sol",
          "start": 493
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "6321",
        "formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/mock/EtherUSDMockAggregator.sol:21:13:\n   |\n21 |             uint80\n   |             ^^^^^^\n\n",
        "message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 520,
          "file": "contracts/mock/EtherUSDMockAggregator.sol",
          "start": 514
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              126
            ],
            "Ownable": [
              104
            ]
          },
          "id": 105,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "87:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 105,
              "sourceUnit": 127,
              "src": "112:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 126,
                    "src": "668:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "668:7:0"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "144:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 104,
              "linearizedBaseContracts": [
                104,
                126
              ],
              "name": "Ownable",
              "nameLocation": "657:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "698:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "682:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nameLocation": "717:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "754:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "738:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "738:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "785:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "769:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "769:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "737:57:0"
                  },
                  "src": "711:84:0"
                },
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "911:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116,
                                "src": "940:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "940:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "921:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "921:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "921:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "801:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 23,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "908:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "911:0:0"
                  },
                  "scope": 104,
                  "src": "897:63:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 31,
                    "nodeType": "Block",
                    "src": "1091:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 29,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1108:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 28,
                        "id": 30,
                        "nodeType": "Return",
                        "src": "1101:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 24,
                    "nodeType": "StructuredDocumentation",
                    "src": "966:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 32,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1045:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1050:2:0"
                  },
                  "returnParameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "1082:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1082:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1081:9:0"
                  },
                  "scope": 104,
                  "src": "1036:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 45,
                    "nodeType": "Block",
                    "src": "1230:96:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 40,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 36,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1248:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 37,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1248:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 38,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 116,
                                  "src": "1259:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 39,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1259:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1248:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1273:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 35,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1240:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1240:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43,
                        "nodeType": "ExpressionStatement",
                        "src": "1240:68:0"
                      },
                      {
                        "id": 44,
                        "nodeType": "PlaceholderStatement",
                        "src": "1318:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 33,
                    "nodeType": "StructuredDocumentation",
                    "src": "1127:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 46,
                  "name": "onlyOwner",
                  "nameLocation": "1218:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1227:2:0"
                  },
                  "src": "1209:117:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "1722:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 55,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1759:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 54,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1751:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1751:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1751:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 52,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "1732:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1732:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "1732:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 47,
                    "nodeType": "StructuredDocumentation",
                    "src": "1332:331:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 60,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 50,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 49,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1712:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1712:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1677:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1694:2:0"
                  },
                  "returnParameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1722:0:0"
                  },
                  "scope": 104,
                  "src": "1668:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "1988:128:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 69,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "2006:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 72,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2026:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 71,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2018:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 70,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2018:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 73,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2018:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2006:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2030:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 68,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1998:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1998:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77,
                        "nodeType": "ExpressionStatement",
                        "src": "1998:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 79,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "2100:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 78,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "2081:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2081:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "2081:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 61,
                    "nodeType": "StructuredDocumentation",
                    "src": "1775:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 83,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 66,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 65,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1978:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1978:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "1927:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1953:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "1945:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1945:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1944:18:0"
                  },
                  "returnParameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1988:0:0"
                  },
                  "scope": 104,
                  "src": "1918:198:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "2333:124:0",
                    "statements": [
                      {
                        "assignments": [
                          90
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 90,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2351:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "2343:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 89,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2343:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 92,
                        "initialValue": {
                          "id": 91,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2362:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2343:25:0"
                      },
                      {
                        "expression": {
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 93,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2378:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 94,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "2387:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2378:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2378:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 98,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "2431:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 99,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "2441:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 97,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2410:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2410:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "EmitStatement",
                        "src": "2405:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 84,
                    "nodeType": "StructuredDocumentation",
                    "src": "2122:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 103,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2279:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2306:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "2298:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2298:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2297:18:0"
                  },
                  "returnParameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2333:0:0"
                  },
                  "scope": 104,
                  "src": "2270:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 105,
              "src": "639:1820:0",
              "usedErrors": []
            }
          ],
          "src": "87:2373:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              126
            ]
          },
          "id": 127,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 106,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "86:23:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 107,
                "nodeType": "StructuredDocumentation",
                "src": "111:496:1",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 126,
              "linearizedBaseContracts": [
                126
              ],
              "name": "Context",
              "nameLocation": "626:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 115,
                    "nodeType": "Block",
                    "src": "702:34:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 112,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "719:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "719:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 111,
                        "id": 114,
                        "nodeType": "Return",
                        "src": "712:17:1"
                      }
                    ]
                  },
                  "id": 116,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "649:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "659:2:1"
                  },
                  "returnParameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "693:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "693:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "692:9:1"
                  },
                  "scope": 126,
                  "src": "640:96:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 124,
                    "nodeType": "Block",
                    "src": "809:32:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 121,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "826:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "826:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 120,
                        "id": 123,
                        "nodeType": "Return",
                        "src": "819:15:1"
                      }
                    ]
                  },
                  "id": 125,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "751:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "759:2:1"
                  },
                  "returnParameters": {
                    "id": 120,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 119,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "793:14:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "793:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "792:16:1"
                  },
                  "scope": 126,
                  "src": "742:99:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 127,
              "src": "608:235:1",
              "usedErrors": []
            }
          ],
          "src": "86:758:1"
        },
        "id": 1
      },
      "contracts/FinancialNFTOracle.sol": {
        "ast": {
          "absolutePath": "contracts/FinancialNFTOracle.sol",
          "exportedSymbols": {
            "FinancialNFTOracle": [
              130
            ]
          },
          "id": 131,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 128,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 129,
                "nodeType": "StructuredDocumentation",
                "src": "155:89:2",
                "text": "@title FinancialNFTOracle\n @author @commonlot\n @notice oracle contract for NFT"
              },
              "fullyImplemented": true,
              "id": 130,
              "linearizedBaseContracts": [
                130
              ],
              "name": "FinancialNFTOracle",
              "nameLocation": "347:18:2",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 131,
              "src": "338:32:2",
              "usedErrors": []
            }
          ],
          "src": "37:334:2"
        },
        "id": 2
      },
      "contracts/MetaVerseNFTOracle.sol": {
        "ast": {
          "absolutePath": "contracts/MetaVerseNFTOracle.sol",
          "exportedSymbols": {
            "Context": [
              126
            ],
            "IChainlinkV3Aggregator": [
              517
            ],
            "INFTPriceOracle": [
              561
            ],
            "MetaVerseNFTOracle": [
              496
            ],
            "Ownable": [
              104
            ]
          },
          "id": 497,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 132,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:23:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 133,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 497,
              "sourceUnit": 105,
              "src": "62:52:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IChainlinkV3Aggregator.sol",
              "file": "./interfaces/IChainlinkV3Aggregator.sol",
              "id": 134,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 497,
              "sourceUnit": 518,
              "src": "115:49:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/INFTPriceOracle.sol",
              "file": "./interfaces/INFTPriceOracle.sol",
              "id": 135,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 497,
              "sourceUnit": 562,
              "src": "165:42:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 137,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 104,
                    "src": "516:7:3"
                  },
                  "id": 138,
                  "nodeType": "InheritanceSpecifier",
                  "src": "516:7:3"
                },
                {
                  "baseName": {
                    "id": 139,
                    "name": "INFTPriceOracle",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 561,
                    "src": "525:15:3"
                  },
                  "id": 140,
                  "nodeType": "InheritanceSpecifier",
                  "src": "525:15:3"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 136,
                "nodeType": "StructuredDocumentation",
                "src": "302:89:3",
                "text": "@title MetaVerseNFTOracle\n @author @commonlot\n @notice oracle contract for NFT"
              },
              "fullyImplemented": true,
              "id": 496,
              "linearizedBaseContracts": [
                496,
                561,
                104,
                126
              ],
              "name": "MetaVerseNFTOracle",
              "nameLocation": "494:18:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 141,
                    "nodeType": "StructuredDocumentation",
                    "src": "547:37:3",
                    "text": "@dev contract addrss => PriceInfo"
                  },
                  "functionSelector": "a0868e2b",
                  "id": 146,
                  "mutability": "mutable",
                  "name": "nftPrices",
                  "nameLocation": "626:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "589:46:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PriceInfo_$527_storage_$",
                    "typeString": "mapping(address => struct INFTPriceOracle.PriceInfo)"
                  },
                  "typeName": {
                    "id": 145,
                    "keyType": {
                      "id": 142,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "597:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "589:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PriceInfo_$527_storage_$",
                      "typeString": "mapping(address => struct INFTPriceOracle.PriceInfo)"
                    },
                    "valueType": {
                      "id": 144,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 143,
                        "name": "PriceInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 527,
                        "src": "608:9:3"
                      },
                      "referencedDeclaration": 527,
                      "src": "608:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PriceInfo_$527_storage_ptr",
                        "typeString": "struct INFTPriceOracle.PriceInfo"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 147,
                    "nodeType": "StructuredDocumentation",
                    "src": "642:60:3",
                    "text": "@dev return true when address can read oracle price data"
                  },
                  "functionSelector": "6f9170f6",
                  "id": 151,
                  "mutability": "mutable",
                  "name": "isWhiteListed",
                  "nameLocation": "739:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "707:45:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 150,
                    "keyType": {
                      "id": 148,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "715:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "707:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 149,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "726:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 152,
                    "nodeType": "StructuredDocumentation",
                    "src": "759:51:3",
                    "text": "@notice return true if address can update price"
                  },
                  "functionSelector": "4fdfb086",
                  "id": 156,
                  "mutability": "mutable",
                  "name": "isUpdater",
                  "nameLocation": "847:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "815:41:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 155,
                    "keyType": {
                      "id": 153,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "823:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "815:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 154,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "834:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    534
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 157,
                    "nodeType": "StructuredDocumentation",
                    "src": "863:43:3",
                    "text": "@dev chainlink Price feed for ETH / USD"
                  },
                  "functionSelector": "8e069115",
                  "id": 161,
                  "mutability": "mutable",
                  "name": "etherPriceAggregator",
                  "nameLocation": "950:20:3",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 160,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "941:8:3"
                  },
                  "scope": 496,
                  "src": "911:59:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IChainlinkV3Aggregator_$517",
                    "typeString": "contract IChainlinkV3Aggregator"
                  },
                  "typeName": {
                    "id": 159,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 158,
                      "name": "IChainlinkV3Aggregator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 517,
                      "src": "911:22:3"
                    },
                    "referencedDeclaration": 517,
                    "src": "911:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IChainlinkV3Aggregator_$517",
                      "typeString": "contract IChainlinkV3Aggregator"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 162,
                    "nodeType": "StructuredDocumentation",
                    "src": "977:16:3",
                    "text": "@dev decimal"
                  },
                  "functionSelector": "313ce567",
                  "id": 165,
                  "mutability": "constant",
                  "name": "decimals",
                  "nameLocation": "1020:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "998:34:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "38",
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1031:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 182,
                    "nodeType": "Block",
                    "src": "1062:100:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 168,
                                  "name": "isUpdater",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 156,
                                  "src": "1080:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 171,
                                "indexExpression": {
                                  "expression": {
                                    "id": 169,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1090:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 170,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1090:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1080:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 172,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1105:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1105:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 174,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32,
                                    "src": "1119:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 175,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1119:7:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1105:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1080:46:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f4e4c595f5550444154455253",
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1128:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ea853ed90ab400a4fecae279ba34d59533555762873ef7456f7e0560088cd8eb",
                                "typeString": "literal_string \"ONLY_UPDATERS\""
                              },
                              "value": "ONLY_UPDATERS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ea853ed90ab400a4fecae279ba34d59533555762873ef7456f7e0560088cd8eb",
                                "typeString": "literal_string \"ONLY_UPDATERS\""
                              }
                            ],
                            "id": 167,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1072:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1072:72:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 180,
                        "nodeType": "ExpressionStatement",
                        "src": "1072:72:3"
                      },
                      {
                        "id": 181,
                        "nodeType": "PlaceholderStatement",
                        "src": "1154:1:3"
                      }
                    ]
                  },
                  "id": 183,
                  "name": "onlyUpdater",
                  "nameLocation": "1048:11:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1059:2:3"
                  },
                  "src": "1039:123:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 200,
                    "nodeType": "Block",
                    "src": "1193:105:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 186,
                                  "name": "isWhiteListed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151,
                                  "src": "1211:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 189,
                                "indexExpression": {
                                  "expression": {
                                    "id": 187,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1225:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1225:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1211:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 190,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1240:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 191,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1240:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 192,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32,
                                    "src": "1254:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1254:7:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1240:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1211:50:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f4e4c595f57484954454c495354",
                              "id": 196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1263:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3a85fbe87f8f28c7d6140dde6f16e6252a64bfdd333df69dbceec20a6e47155b",
                                "typeString": "literal_string \"ONLY_WHITELIST\""
                              },
                              "value": "ONLY_WHITELIST"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3a85fbe87f8f28c7d6140dde6f16e6252a64bfdd333df69dbceec20a6e47155b",
                                "typeString": "literal_string \"ONLY_WHITELIST\""
                              }
                            ],
                            "id": 185,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1203:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1203:77:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 198,
                        "nodeType": "ExpressionStatement",
                        "src": "1203:77:3"
                      },
                      {
                        "id": 199,
                        "nodeType": "PlaceholderStatement",
                        "src": "1290:1:3"
                      }
                    ]
                  },
                  "id": 201,
                  "name": "onlyWhitelist",
                  "nameLocation": "1177:13:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 184,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1190:2:3"
                  },
                  "src": "1168:130:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "id": 209,
                  "name": "SetUpdaters",
                  "nameLocation": "1310:11:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_updaters",
                        "nameLocation": "1332:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "1322:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 202,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1322:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 203,
                          "nodeType": "ArrayTypeName",
                          "src": "1322:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_statusList",
                        "nameLocation": "1350:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "1343:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 205,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1343:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 206,
                          "nodeType": "ArrayTypeName",
                          "src": "1343:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1321:41:3"
                  },
                  "src": "1304:59:3"
                },
                {
                  "anonymous": false,
                  "id": 217,
                  "name": "SetWhiteList",
                  "nameLocation": "1374:12:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 212,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_whiteList",
                        "nameLocation": "1397:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "1387:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 210,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1387:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 211,
                          "nodeType": "ArrayTypeName",
                          "src": "1387:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 215,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_statusList",
                        "nameLocation": "1416:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "1409:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 213,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1409:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 214,
                          "nodeType": "ArrayTypeName",
                          "src": "1409:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1386:42:3"
                  },
                  "src": "1368:61:3"
                },
                {
                  "anonymous": false,
                  "id": 227,
                  "name": "SetPrice",
                  "nameLocation": "1440:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_contract",
                        "nameLocation": "1457:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "1449:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1449:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 221,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_usdPrice",
                        "nameLocation": "1475:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "1468:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1468:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 223,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_etherPrice",
                        "nameLocation": "1493:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "1486:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1486:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 225,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_updater",
                        "nameLocation": "1514:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "1506:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1506:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1448:75:3"
                  },
                  "src": "1434:90:3"
                },
                {
                  "body": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "1571:83:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 232,
                            "name": "etherPriceAggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "1581:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IChainlinkV3Aggregator_$517",
                              "typeString": "contract IChainlinkV3Aggregator"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 234,
                                "name": "_etherUSDAggregator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 229,
                                "src": "1627:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 233,
                              "name": "IChainlinkV3Aggregator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 517,
                              "src": "1604:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IChainlinkV3Aggregator_$517_$",
                                "typeString": "type(contract IChainlinkV3Aggregator)"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1604:43:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IChainlinkV3Aggregator_$517",
                              "typeString": "contract IChainlinkV3Aggregator"
                            }
                          },
                          "src": "1581:66:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IChainlinkV3Aggregator_$517",
                            "typeString": "contract IChainlinkV3Aggregator"
                          }
                        },
                        "id": 237,
                        "nodeType": "ExpressionStatement",
                        "src": "1581:66:3"
                      }
                    ]
                  },
                  "id": 239,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "_etherUSDAggregator",
                        "nameLocation": "1550:19:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 239,
                        "src": "1542:27:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1542:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1541:29:3"
                  },
                  "returnParameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1571:0:3"
                  },
                  "scope": 496,
                  "src": "1530:124:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 310,
                    "nodeType": "Block",
                    "src": "1913:462:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 255,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 252,
                                      "name": "_updaters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 243,
                                      "src": "1944:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 253,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "1944:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 254,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1963:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "1944:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 256,
                                      "name": "_statusList",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 246,
                                      "src": "1984:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                        "typeString": "bool[] memory"
                                      }
                                    },
                                    "id": 257,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "1984:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 258,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2005:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "1984:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "1944:62:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 261,
                                    "name": "_statusList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 246,
                                    "src": "2026:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 262,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2026:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 263,
                                    "name": "_statusList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 246,
                                    "src": "2048:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 264,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2048:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2026:40:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1944:122:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "73657455706461746572733a494e56414c49445f44415441",
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2080:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_77412538aa891ed0b112a0559c40377b50321f238e291ac7b245a1f3596aff7f",
                                "typeString": "literal_string \"setUpdaters:INVALID_DATA\""
                              },
                              "value": "setUpdaters:INVALID_DATA"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_77412538aa891ed0b112a0559c40377b50321f238e291ac7b245a1f3596aff7f",
                                "typeString": "literal_string \"setUpdaters:INVALID_DATA\""
                              }
                            ],
                            "id": 251,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1923:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1923:193:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 269,
                        "nodeType": "ExpressionStatement",
                        "src": "1923:193:3"
                      },
                      {
                        "body": {
                          "id": 303,
                          "nodeType": "Block",
                          "src": "2173:145:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 282,
                                        "name": "_updaters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 243,
                                        "src": "2195:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 284,
                                      "indexExpression": {
                                        "id": 283,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 271,
                                        "src": "2205:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2195:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 287,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2219:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 286,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2211:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 285,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2211:7:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 288,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2211:10:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "2195:26:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "73657455706461746572733a494e56414c49445f55504441544552",
                                    "id": 290,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2223:29:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_45c3f9339f55c7e281bc1f62cb3bc42942198cbc7b5cfc7737b07e8590b0183a",
                                      "typeString": "literal_string \"setUpdaters:INVALID_UPDATER\""
                                    },
                                    "value": "setUpdaters:INVALID_UPDATER"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_45c3f9339f55c7e281bc1f62cb3bc42942198cbc7b5cfc7737b07e8590b0183a",
                                      "typeString": "literal_string \"setUpdaters:INVALID_UPDATER\""
                                    }
                                  ],
                                  "id": 281,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2187:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2187:66:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 292,
                              "nodeType": "ExpressionStatement",
                              "src": "2187:66:3"
                            },
                            {
                              "expression": {
                                "id": 301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 293,
                                    "name": "isUpdater",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 156,
                                    "src": "2267:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 297,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 294,
                                      "name": "_updaters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 243,
                                      "src": "2277:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 296,
                                    "indexExpression": {
                                      "id": 295,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 271,
                                      "src": "2287:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2277:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2267:23:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 298,
                                    "name": "_statusList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 246,
                                    "src": "2293:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 300,
                                  "indexExpression": {
                                    "id": 299,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 271,
                                    "src": "2305:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2293:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2267:40:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 302,
                              "nodeType": "ExpressionStatement",
                              "src": "2267:40:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 274,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "2146:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 275,
                              "name": "_updaters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "2150:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2150:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2146:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 304,
                        "initializationExpression": {
                          "assignments": [
                            271
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 271,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2139:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 304,
                              "src": "2131:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 270,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2131:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 273,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2143:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2131:13:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2168:3:3",
                            "subExpression": {
                              "id": 278,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 271,
                              "src": "2168:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 280,
                          "nodeType": "ExpressionStatement",
                          "src": "2168:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "2126:192:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 306,
                              "name": "_updaters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "2345:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 307,
                              "name": "_statusList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 246,
                              "src": "2356:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            ],
                            "id": 305,
                            "name": "SetUpdaters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 209,
                            "src": "2333:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address[] memory,bool[] memory)"
                            }
                          },
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2333:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 309,
                        "nodeType": "EmitStatement",
                        "src": "2328:40:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 240,
                    "nodeType": "StructuredDocumentation",
                    "src": "1660:153:3",
                    "text": "@dev set new updaters that can write NFT price\n @param _updaters address array of updaters\n @param _statusList status array of updaters"
                  },
                  "functionSelector": "2f55b50d",
                  "id": 311,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 249,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 248,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1903:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1903:9:3"
                    }
                  ],
                  "name": "setUpdaters",
                  "nameLocation": "1827:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "_updaters",
                        "nameLocation": "1856:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 311,
                        "src": "1839:26:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 241,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1839:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 242,
                          "nodeType": "ArrayTypeName",
                          "src": "1839:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 246,
                        "mutability": "mutable",
                        "name": "_statusList",
                        "nameLocation": "1881:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 311,
                        "src": "1867:25:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 244,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1867:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 245,
                          "nodeType": "ArrayTypeName",
                          "src": "1867:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1838:55:3"
                  },
                  "returnParameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1913:0:3"
                  },
                  "scope": 496,
                  "src": "1818:557:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 367,
                    "nodeType": "Block",
                    "src": "2615:450:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 322,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 314,
                                "src": "2633:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2654:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 324,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2646:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 323,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2646:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2646:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2633:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "73657450726963653a20494e56414c49445f434f4e5452414354",
                              "id": 328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2658:28:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94a39a716fc878c8fd1e7438784fc7b02fd8c248771367a132af47025a67489b",
                                "typeString": "literal_string \"setPrice: INVALID_CONTRACT\""
                              },
                              "value": "setPrice: INVALID_CONTRACT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94a39a716fc878c8fd1e7438784fc7b02fd8c248771367a132af47025a67489b",
                                "typeString": "literal_string \"setPrice: INVALID_CONTRACT\""
                              }
                            ],
                            "id": 321,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2625:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2625:62:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "2625:62:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 332,
                                "name": "_usdPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 316,
                                "src": "2705:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2717:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2705:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "73657450726963653a20494e56414c49445f5553445f5052494345",
                              "id": 335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2720:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a37f3d9b482e0838d7a8e041eb335321bfd1c57da7113e83424c873a6bcbc843",
                                "typeString": "literal_string \"setPrice: INVALID_USD_PRICE\""
                              },
                              "value": "setPrice: INVALID_USD_PRICE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a37f3d9b482e0838d7a8e041eb335321bfd1c57da7113e83424c873a6bcbc843",
                                "typeString": "literal_string \"setPrice: INVALID_USD_PRICE\""
                              }
                            ],
                            "id": 331,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2697:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2697:53:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 337,
                        "nodeType": "ExpressionStatement",
                        "src": "2697:53:3"
                      },
                      {
                        "assignments": [
                          339
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 339,
                            "mutability": "mutable",
                            "name": "_etherPrice",
                            "nameLocation": "2768:11:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 367,
                            "src": "2761:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 338,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2761:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 347,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 340,
                                  "name": "_usdPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 316,
                                  "src": "2783:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "316538",
                                  "id": 341,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2795:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100000000_by_1",
                                    "typeString": "int_const 100000000"
                                  },
                                  "value": "1e8"
                                },
                                "src": "2783:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "id": 343,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2782:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 344,
                              "name": "etherUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 495,
                              "src": "2802:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                                "typeString": "function () view returns (int256)"
                              }
                            },
                            "id": 345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2802:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "2782:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2761:51:3"
                      },
                      {
                        "expression": {
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 348,
                              "name": "nftPrices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "2823:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PriceInfo_$527_storage_$",
                                "typeString": "mapping(address => struct INFTPriceOracle.PriceInfo storage ref)"
                              }
                            },
                            "id": 350,
                            "indexExpression": {
                              "id": 349,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "2833:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2823:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PriceInfo_$527_storage",
                              "typeString": "struct INFTPriceOracle.PriceInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 352,
                                "name": "_usdPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 316,
                                "src": "2880:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "id": 353,
                                "name": "_etherPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 339,
                                "src": "2915:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 354,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2964:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "2964:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 351,
                              "name": "PriceInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "2846:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_PriceInfo_$527_storage_ptr_$",
                                "typeString": "type(struct INFTPriceOracle.PriceInfo storage pointer)"
                              }
                            },
                            "id": 356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "usdPrice",
                              "etherPrice",
                              "lastUpdatedBlockNumber"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2846:141:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PriceInfo_$527_memory_ptr",
                              "typeString": "struct INFTPriceOracle.PriceInfo memory"
                            }
                          },
                          "src": "2823:164:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PriceInfo_$527_storage",
                            "typeString": "struct INFTPriceOracle.PriceInfo storage ref"
                          }
                        },
                        "id": 358,
                        "nodeType": "ExpressionStatement",
                        "src": "2823:164:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 360,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3012:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 361,
                              "name": "_usdPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 316,
                              "src": "3023:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "id": 362,
                              "name": "_etherPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "3034:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "expression": {
                                "id": 363,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3047:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3047:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 359,
                            "name": "SetPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "3003:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_int256_$_t_int256_$_t_address_$returns$__$",
                              "typeString": "function (address,int256,int256,address)"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3003:55:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 366,
                        "nodeType": "EmitStatement",
                        "src": "2998:60:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 312,
                    "nodeType": "StructuredDocumentation",
                    "src": "2381:153:3",
                    "text": "@dev set new price for the NFT\n @param _contract address of collection contract\n @param _usdPrice usd price of NFT token (decimal is 8)"
                  },
                  "functionSelector": "034dd29b",
                  "id": 368,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 319,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 318,
                        "name": "onlyUpdater",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 183,
                        "src": "2603:11:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:11:3"
                    }
                  ],
                  "name": "setPrice",
                  "nameLocation": "2548:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 314,
                        "mutability": "mutable",
                        "name": "_contract",
                        "nameLocation": "2565:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 368,
                        "src": "2557:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 313,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2557:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 316,
                        "mutability": "mutable",
                        "name": "_usdPrice",
                        "nameLocation": "2583:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 368,
                        "src": "2576:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2576:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2556:37:3"
                  },
                  "returnParameters": {
                    "id": 320,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2615:0:3"
                  },
                  "scope": 496,
                  "src": "2539:526:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    544
                  ],
                  "body": {
                    "id": 440,
                    "nodeType": "Block",
                    "src": "3352:473:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 385,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 382,
                                      "name": "_whiteList",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 372,
                                      "src": "3383:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 383,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "3383:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 384,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3403:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "3383:21:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 386,
                                      "name": "_statusList",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 375,
                                      "src": "3424:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                        "typeString": "bool[] memory"
                                      }
                                    },
                                    "id": 387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "3424:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 388,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3445:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "3424:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "3383:63:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 391,
                                    "name": "_whiteList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 372,
                                    "src": "3466:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 392,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3466:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 393,
                                    "name": "_statusList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 375,
                                    "src": "3487:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3487:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3466:39:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3383:122:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "73657457686974654c6973743a494e56414c49445f44415441",
                              "id": 397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3519:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8cfbfcfc030916b14d2ac6f2ec2579ef08d94e604d6cfe56148ba9c6d947f4b0",
                                "typeString": "literal_string \"setWhiteList:INVALID_DATA\""
                              },
                              "value": "setWhiteList:INVALID_DATA"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8cfbfcfc030916b14d2ac6f2ec2579ef08d94e604d6cfe56148ba9c6d947f4b0",
                                "typeString": "literal_string \"setWhiteList:INVALID_DATA\""
                              }
                            ],
                            "id": 381,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3362:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3362:194:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 399,
                        "nodeType": "ExpressionStatement",
                        "src": "3362:194:3"
                      },
                      {
                        "body": {
                          "id": 433,
                          "nodeType": "Block",
                          "src": "3614:152:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 412,
                                        "name": "_whiteList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 372,
                                        "src": "3636:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 414,
                                      "indexExpression": {
                                        "id": 413,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 401,
                                        "src": "3647:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3636:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 417,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3661:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 416,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3653:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 415,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3653:7:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 418,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3653:10:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "3636:27:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "73657457686974654c6973743a494e56414c49445f41444452455353",
                                    "id": 420,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3665:30:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7eaf222e2ae21481cf62db9bbfeb0e78613391071c388c5234177c02f42cad0f",
                                      "typeString": "literal_string \"setWhiteList:INVALID_ADDRESS\""
                                    },
                                    "value": "setWhiteList:INVALID_ADDRESS"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_7eaf222e2ae21481cf62db9bbfeb0e78613391071c388c5234177c02f42cad0f",
                                      "typeString": "literal_string \"setWhiteList:INVALID_ADDRESS\""
                                    }
                                  ],
                                  "id": 411,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3628:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3628:68:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 422,
                              "nodeType": "ExpressionStatement",
                              "src": "3628:68:3"
                            },
                            {
                              "expression": {
                                "id": 431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 423,
                                    "name": "isWhiteListed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 151,
                                    "src": "3710:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 427,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 424,
                                      "name": "_whiteList",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 372,
                                      "src": "3724:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 426,
                                    "indexExpression": {
                                      "id": 425,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 401,
                                      "src": "3735:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3724:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3710:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 428,
                                    "name": "_statusList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 375,
                                    "src": "3741:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 430,
                                  "indexExpression": {
                                    "id": 429,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 401,
                                    "src": "3753:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3741:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "3710:45:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 432,
                              "nodeType": "ExpressionStatement",
                              "src": "3710:45:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 404,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "3586:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 405,
                              "name": "_whiteList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "3590:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3590:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3586:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 434,
                        "initializationExpression": {
                          "assignments": [
                            401
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 401,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3579:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 434,
                              "src": "3571:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 400,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3571:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 403,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3583:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3571:13:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3609:3:3",
                            "subExpression": {
                              "id": 408,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 401,
                              "src": "3609:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 410,
                          "nodeType": "ExpressionStatement",
                          "src": "3609:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "3566:200:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 436,
                              "name": "_whiteList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "3794:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 437,
                              "name": "_statusList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "3806:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            ],
                            "id": 435,
                            "name": "SetWhiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 217,
                            "src": "3781:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address[] memory,bool[] memory)"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3781:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 439,
                        "nodeType": "EmitStatement",
                        "src": "3776:42:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 369,
                    "nodeType": "StructuredDocumentation",
                    "src": "3071:144:3",
                    "text": "@dev set whitelisted address that can read oracle price data\n @param _whiteList address array\n @param _statusList status array"
                  },
                  "functionSelector": "cc5fe3ab",
                  "id": 441,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 379,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 378,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "3338:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3338:9:3"
                    }
                  ],
                  "name": "setWhiteList",
                  "nameLocation": "3229:12:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 377,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3321:8:3"
                  },
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "_whiteList",
                        "nameLocation": "3259:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 441,
                        "src": "3242:27:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 370,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3242:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 371,
                          "nodeType": "ArrayTypeName",
                          "src": "3242:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "_statusList",
                        "nameLocation": "3285:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 441,
                        "src": "3271:25:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 373,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "3271:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 374,
                          "nodeType": "ArrayTypeName",
                          "src": "3271:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3241:56:3"
                  },
                  "returnParameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3352:0:3"
                  },
                  "scope": 496,
                  "src": "3220:605:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    554
                  ],
                  "body": {
                    "id": 477,
                    "nodeType": "Block",
                    "src": "4022:180:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 455,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 444,
                                "src": "4040:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4061:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 457,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4053:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 456,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4053:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4053:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4040:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7669657750726963653a20494e56414c49445f434f4e5452414354",
                              "id": 461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4065:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_71b5f081f1d5aa873526f4165749be2ac1e4ec24d86d9efa03964ea85f68d98a",
                                "typeString": "literal_string \"viewPrice: INVALID_CONTRACT\""
                              },
                              "value": "viewPrice: INVALID_CONTRACT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_71b5f081f1d5aa873526f4165749be2ac1e4ec24d86d9efa03964ea85f68d98a",
                                "typeString": "literal_string \"viewPrice: INVALID_CONTRACT\""
                              }
                            ],
                            "id": 454,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4032:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4032:63:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 463,
                        "nodeType": "ExpressionStatement",
                        "src": "4032:63:3"
                      },
                      {
                        "assignments": [
                          466
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 466,
                            "mutability": "mutable",
                            "name": "nft",
                            "nameLocation": "4122:3:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 477,
                            "src": "4105:20:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PriceInfo_$527_memory_ptr",
                              "typeString": "struct INFTPriceOracle.PriceInfo"
                            },
                            "typeName": {
                              "id": 465,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 464,
                                "name": "PriceInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 527,
                                "src": "4105:9:3"
                              },
                              "referencedDeclaration": 527,
                              "src": "4105:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PriceInfo_$527_storage_ptr",
                                "typeString": "struct INFTPriceOracle.PriceInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 470,
                        "initialValue": {
                          "baseExpression": {
                            "id": 467,
                            "name": "nftPrices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "4128:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PriceInfo_$527_storage_$",
                              "typeString": "mapping(address => struct INFTPriceOracle.PriceInfo storage ref)"
                            }
                          },
                          "id": 469,
                          "indexExpression": {
                            "id": 468,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 444,
                            "src": "4138:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4128:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PriceInfo_$527_storage",
                            "typeString": "struct INFTPriceOracle.PriceInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4105:43:3"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 471,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 466,
                                "src": "4166:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PriceInfo_$527_memory_ptr",
                                  "typeString": "struct INFTPriceOracle.PriceInfo memory"
                                }
                              },
                              "id": 472,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "usdPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 522,
                              "src": "4166:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "expression": {
                                "id": 473,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 466,
                                "src": "4180:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PriceInfo_$527_memory_ptr",
                                  "typeString": "struct INFTPriceOracle.PriceInfo memory"
                                }
                              },
                              "id": 474,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "etherPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 524,
                              "src": "4180:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "id": 475,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4165:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                            "typeString": "tuple(int256,int256)"
                          }
                        },
                        "functionReturnParameters": 453,
                        "id": 476,
                        "nodeType": "Return",
                        "src": "4158:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 442,
                    "nodeType": "StructuredDocumentation",
                    "src": "3831:42:3",
                    "text": "@return usd & ether price of NFT token"
                  },
                  "functionSelector": "1744276d",
                  "id": 478,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 448,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 447,
                        "name": "onlyWhitelist",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 201,
                        "src": "3971:13:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3971:13:3"
                    }
                  ],
                  "name": "viewPrice",
                  "nameLocation": "3887:9:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 446,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3954:8:3"
                  },
                  "parameters": {
                    "id": 445,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 444,
                        "mutability": "mutable",
                        "name": "_contract",
                        "nameLocation": "3905:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "3897:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 443,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3897:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3896:19:3"
                  },
                  "returnParameters": {
                    "id": 453,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "4002:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4002:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 452,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "4010:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 451,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4010:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4001:16:3"
                  },
                  "scope": 496,
                  "src": "3878:324:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    560
                  ],
                  "body": {
                    "id": 494,
                    "nodeType": "Block",
                    "src": "4324:73:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              null,
                              {
                                "id": 487,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 485,
                                "src": "4337:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              null,
                              null,
                              null
                            ],
                            "id": 488,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "4334:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$_t_int256_$__$__$__$",
                              "typeString": "tuple(,int256,,,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 489,
                                "name": "etherPriceAggregator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 161,
                                "src": "4352:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IChainlinkV3Aggregator_$517",
                                  "typeString": "contract IChainlinkV3Aggregator"
                                }
                              },
                              "id": 490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "latestRoundData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 516,
                              "src": "4352:36:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                                "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                              }
                            },
                            "id": 491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4352:38:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "src": "4334:56:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 493,
                        "nodeType": "ExpressionStatement",
                        "src": "4334:56:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 479,
                    "nodeType": "StructuredDocumentation",
                    "src": "4208:33:3",
                    "text": "@return price of ether in USD"
                  },
                  "functionSelector": "173a0da2",
                  "id": 495,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 483,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 482,
                        "name": "onlyWhitelist",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 201,
                        "src": "4287:13:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4287:13:3"
                    }
                  ],
                  "name": "etherUSD",
                  "nameLocation": "4255:8:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 481,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4278:8:3"
                  },
                  "parameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4263:2:3"
                  },
                  "returnParameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "4317:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 495,
                        "src": "4310:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4310:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4309:14:3"
                  },
                  "scope": 496,
                  "src": "4246:151:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 497,
              "src": "485:3914:3",
              "usedErrors": []
            }
          ],
          "src": "37:4363:3"
        },
        "id": 3
      },
      "contracts/interfaces/IChainlinkV3Aggregator.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IChainlinkV3Aggregator.sol",
          "exportedSymbols": {
            "IChainlinkV3Aggregator": [
              517
            ]
          },
          "id": 518,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 498,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:23:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 517,
              "linearizedBaseContracts": [
                517
              ],
              "name": "IChainlinkV3Aggregator",
              "nameLocation": "72:22:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "313ce567",
                  "id": 503,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "110:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 499,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "118:2:4"
                  },
                  "returnParameters": {
                    "id": 502,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 503,
                        "src": "144:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "144:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "143:7:4"
                  },
                  "scope": 517,
                  "src": "101:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "feaf968c",
                  "id": 516,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRoundData",
                  "nameLocation": "166:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 504,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "181:2:4"
                  },
                  "returnParameters": {
                    "id": 515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 506,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "251:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "244:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "244:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 508,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "279:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "272:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "272:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "307:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "299:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "299:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "338:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "330:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "330:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 514,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "368:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "361:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 513,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "361:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "230:163:4"
                  },
                  "scope": 517,
                  "src": "157:237:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 518,
              "src": "62:334:4",
              "usedErrors": []
            }
          ],
          "src": "37:360:4"
        },
        "id": 4
      },
      "contracts/interfaces/INFTPriceOracle.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/INFTPriceOracle.sol",
          "exportedSymbols": {
            "IChainlinkV3Aggregator": [
              517
            ],
            "INFTPriceOracle": [
              561
            ]
          },
          "id": 562,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 519,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:23:5"
            },
            {
              "absolutePath": "contracts/interfaces/IChainlinkV3Aggregator.sol",
              "file": "./IChainlinkV3Aggregator.sol",
              "id": 520,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 562,
              "sourceUnit": 518,
              "src": "62:38:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 561,
              "linearizedBaseContracts": [
                561
              ],
              "name": "INFTPriceOracle",
              "nameLocation": "112:15:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "INFTPriceOracle.PriceInfo",
                  "id": 527,
                  "members": [
                    {
                      "constant": false,
                      "id": 522,
                      "mutability": "mutable",
                      "name": "usdPrice",
                      "nameLocation": "198:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 527,
                      "src": "191:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 521,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "191:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 524,
                      "mutability": "mutable",
                      "name": "etherPrice",
                      "nameLocation": "223:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 527,
                      "src": "216:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 523,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "216:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 526,
                      "mutability": "mutable",
                      "name": "lastUpdatedBlockNumber",
                      "nameLocation": "251:22:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 527,
                      "src": "243:30:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 525,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "243:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "PriceInfo",
                  "nameLocation": "171:9:5",
                  "nodeType": "StructDefinition",
                  "scope": 561,
                  "src": "164:116:5",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 528,
                    "nodeType": "StructuredDocumentation",
                    "src": "286:43:5",
                    "text": "@dev chainlink Price feed for ETH / USD"
                  },
                  "functionSelector": "8e069115",
                  "id": 534,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "etherPriceAggregator",
                  "nameLocation": "343:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 529,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "363:2:5"
                  },
                  "returnParameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "384:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IChainlinkV3Aggregator_$517",
                          "typeString": "contract IChainlinkV3Aggregator"
                        },
                        "typeName": {
                          "id": 531,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 530,
                            "name": "IChainlinkV3Aggregator",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 517,
                            "src": "384:22:5"
                          },
                          "referencedDeclaration": 517,
                          "src": "384:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IChainlinkV3Aggregator_$517",
                            "typeString": "contract IChainlinkV3Aggregator"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "383:24:5"
                  },
                  "scope": 561,
                  "src": "334:74:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 535,
                    "nodeType": "StructuredDocumentation",
                    "src": "414:64:5",
                    "text": "@dev set whitelisted address that can read oracle price data"
                  },
                  "functionSelector": "cc5fe3ab",
                  "id": 544,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setWhiteList",
                  "nameLocation": "492:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 538,
                        "mutability": "mutable",
                        "name": "_whiteList",
                        "nameLocation": "522:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 544,
                        "src": "505:27:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 536,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "505:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 537,
                          "nodeType": "ArrayTypeName",
                          "src": "505:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "_statusList",
                        "nameLocation": "548:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 544,
                        "src": "534:25:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 539,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "534:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 540,
                          "nodeType": "ArrayTypeName",
                          "src": "534:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "504:56:5"
                  },
                  "returnParameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "569:0:5"
                  },
                  "scope": 561,
                  "src": "483:87:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 545,
                    "nodeType": "StructuredDocumentation",
                    "src": "576:42:5",
                    "text": "@return usd & ether price of NFT token"
                  },
                  "functionSelector": "1744276d",
                  "id": 554,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "viewPrice",
                  "nameLocation": "632:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 548,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "_contract",
                        "nameLocation": "650:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "642:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "642:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "641:19:5"
                  },
                  "returnParameters": {
                    "id": 553,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 550,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "679:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "679:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 552,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "687:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 551,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "678:16:5"
                  },
                  "scope": 561,
                  "src": "623:72:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 555,
                    "nodeType": "StructuredDocumentation",
                    "src": "701:37:5",
                    "text": "@return price: usd price of Ether"
                  },
                  "functionSelector": "173a0da2",
                  "id": 560,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "etherUSD",
                  "nameLocation": "752:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "760:2:5"
                  },
                  "returnParameters": {
                    "id": 559,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 558,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 560,
                        "src": "781:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 557,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "781:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "780:8:5"
                  },
                  "scope": 561,
                  "src": "743:46:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 562,
              "src": "102:689:5",
              "usedErrors": []
            }
          ],
          "src": "37:755:5"
        },
        "id": 5
      },
      "contracts/mock/EtherUSDMockAggregator.sol": {
        "ast": {
          "absolutePath": "contracts/mock/EtherUSDMockAggregator.sol",
          "exportedSymbols": {
            "Context": [
              126
            ],
            "EtherUSDMockAggregator": [
              598
            ],
            "IChainlinkV3Aggregator": [
              517
            ],
            "Ownable": [
              104
            ]
          },
          "id": 599,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 563,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:23:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 564,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 599,
              "sourceUnit": 105,
              "src": "62:52:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IChainlinkV3Aggregator.sol",
              "file": "../interfaces/IChainlinkV3Aggregator.sol",
              "id": 565,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 599,
              "sourceUnit": 518,
              "src": "115:50:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 566,
                    "name": "IChainlinkV3Aggregator",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 517,
                    "src": "202:22:6"
                  },
                  "id": 567,
                  "nodeType": "InheritanceSpecifier",
                  "src": "202:22:6"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 598,
              "linearizedBaseContracts": [
                598,
                517
              ],
              "name": "EtherUSDMockAggregator",
              "nameLocation": "176:22:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    503
                  ],
                  "body": {
                    "id": 575,
                    "nodeType": "Block",
                    "src": "290:25:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "38",
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "307:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        },
                        "functionReturnParameters": 572,
                        "id": 574,
                        "nodeType": "Return",
                        "src": "300:8:6"
                      }
                    ]
                  },
                  "functionSelector": "313ce567",
                  "id": 576,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "240:8:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 569,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "265:8:6"
                  },
                  "parameters": {
                    "id": 568,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "248:2:6"
                  },
                  "returnParameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "283:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "283:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "282:7:6"
                  },
                  "scope": 598,
                  "src": "231:84:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    516
                  ],
                  "body": {
                    "id": 596,
                    "nodeType": "Block",
                    "src": "535:42:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 590,
                            "name": "answer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "545:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_rational_400000000000_by_1",
                              "typeString": "int_const 400000000000"
                            },
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030303030303030",
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "554:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "value": "100000000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "34303030",
                              "id": 592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "566:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4000_by_1",
                                "typeString": "int_const 4000"
                              },
                              "value": "4000"
                            },
                            "src": "554:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_400000000000_by_1",
                              "typeString": "int_const 400000000000"
                            }
                          },
                          "src": "545:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 595,
                        "nodeType": "ExpressionStatement",
                        "src": "545:25:6"
                      }
                    ]
                  },
                  "functionSelector": "feaf968c",
                  "id": 597,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRoundData",
                  "nameLocation": "330:15:6",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 578,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "386:8:6"
                  },
                  "parameters": {
                    "id": 577,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "345:2:6"
                  },
                  "returnParameters": {
                    "id": 589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "425:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "425:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "452:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "445:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "445:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 584,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "472:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "472:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 586,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "493:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "493:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "514:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "514:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "411:119:6"
                  },
                  "scope": 598,
                  "src": "321:256:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 599,
              "src": "167:412:6",
              "usedErrors": []
            }
          ],
          "src": "37:543:6"
        },
        "id": 6
      }
    }
  }
}
