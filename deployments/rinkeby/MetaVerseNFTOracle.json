{
  "address": "0x69644094A39Be9b86056F5a6E3Aeff8189f99175",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_etherUSDAggregator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "_usdPrice",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "_etherPrice",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        }
      ],
      "name": "SetPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "_updaters",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "bool[]",
          "name": "_statusList",
          "type": "bool[]"
        }
      ],
      "name": "SetUpdaters",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "_whiteList",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "bool[]",
          "name": "_statusList",
          "type": "bool[]"
        }
      ],
      "name": "SetWhiteList",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "etherPriceAggregator",
      "outputs": [
        {
          "internalType": "contract IChainlinkV3Aggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "etherUSD",
      "outputs": [
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isUpdater",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isWhiteListed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nftPrices",
      "outputs": [
        {
          "internalType": "int256",
          "name": "usdPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "etherPrice",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdatedBlockNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "_usdPrice",
          "type": "int256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_updaters",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "_statusList",
          "type": "bool[]"
        }
      ],
      "name": "setUpdaters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_whiteList",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "_statusList",
          "type": "bool[]"
        }
      ],
      "name": "setWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "viewPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x4eb4dc1075f6d95ea2cd765f0c38f0391461a01b8b9254f9907155ffca819445",
  "receipt": {
    "to": null,
    "from": "0xabB6D4a1015e291b1bc71e7e56ff2c9204665b07",
    "contractAddress": "0x69644094A39Be9b86056F5a6E3Aeff8189f99175",
    "transactionIndex": 43,
    "gasUsed": "1823364",
    "logsBloom": "0x
    "blockHash": "0xaf68fcde0c4976211ed02eb9eeb4b88a218a655486bc150560f775cf3e87821e",
    "transactionHash": "0x4eb4dc1075f6d95ea2cd765f0c38f0391461a01b8b9254f9907155ffca819445",
    "logs": [
      {
        "transactionIndex": 43,
        "blockNumber": 9937297,
        "transactionHash": "0x4eb4dc1075f6d95ea2cd765f0c38f0391461a01b8b9254f9907155ffca819445",
        "address": "0x69644094A39Be9b86056F5a6E3Aeff8189f99175",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000abb6d4a1015e291b1bc71e7e56ff2c9204665b07"
        ],
        "data": "0x",
        "logIndex": 38,
        "blockHash": "0xaf68fcde0c4976211ed02eb9eeb4b88a218a655486bc150560f775cf3e87821e"
      }
    ],
    "blockNumber": 9937297,
    "cumulativeGasUsed": "12031275",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "solcInputHash": "780386a8d722564ed1e3b671e70d8ded",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_etherUSDAggregator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"_usdPrice\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"_etherPrice\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"}],\"name\":\"SetPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_updaters\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"_statusList\",\"type\":\"bool[]\"}],\"name\":\"SetUpdaters\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_whiteList\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"_statusList\",\"type\":\"bool[]\"}],\"name\":\"SetWhiteList\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"etherPriceAggregator\",\"outputs\":[{\"internalType\":\"contract IChainlinkV3Aggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"etherUSD\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isUpdater\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhiteListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nftPrices\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"usdPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"etherPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdatedBlockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"_usdPrice\",\"type\":\"int256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_updaters\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_statusList\",\"type\":\"bool[]\"}],\"name\":\"setUpdaters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_whiteList\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_statusList\",\"type\":\"bool[]\"}],\"name\":\"setWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@commonlot\",\"kind\":\"dev\",\"methods\":{\"etherUSD()\":{\"returns\":{\"price\":\"of ether in USD\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setPrice(address,int256)\":{\"details\":\"set new price for the NFT\",\"params\":{\"_contract\":\"address of collection contract\",\"_usdPrice\":\"usd price of NFT token (decimal is 8)\"}},\"setUpdaters(address[],bool[])\":{\"details\":\"set new updaters that can write NFT price\",\"params\":{\"_statusList\":\"status array of updaters\",\"_updaters\":\"address array of updaters\"}},\"setWhiteList(address[],bool[])\":{\"details\":\"set whitelisted address that can read oracle price data\",\"params\":{\"_statusList\":\"status array\",\"_whiteList\":\"address array\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"viewPrice(address)\":{\"returns\":{\"_0\":\"usd & ether price of NFT token\"}}},\"stateVariables\":{\"decimals\":{\"details\":\"decimal\"},\"etherPriceAggregator\":{\"details\":\"chainlink Price feed for ETH / USD\"},\"isWhiteListed\":{\"details\":\"return true when address can read oracle price data\"},\"nftPrices\":{\"details\":\"contract addrss => PriceInfo\"}},\"title\":\"MetaVerseNFTOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isUpdater(address)\":{\"notice\":\"return true if address can update price\"}},\"notice\":\"oracle contract for NFT\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MetaVerseNFTOracle.sol\":\"MetaVerseNFTOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\"},\"contracts/MetaVerseNFTOracle.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\nimport './interfaces/IChainlinkV3Aggregator.sol';\\nimport './interfaces/INFTPriceOracle.sol';\\n\\n////////////////////////////////////////////////////////////////////////////////////////////\\n/// @title MetaVerseNFTOracle\\n/// @author @commonlot\\n/// @notice oracle contract for NFT\\n////////////////////////////////////////////////////////////////////////////////////////////\\n\\ncontract MetaVerseNFTOracle is Ownable, INFTPriceOracle {\\n    /// @dev contract addrss => PriceInfo\\n    mapping(address => PriceInfo) public nftPrices;\\n\\n    /// @dev return true when address can read oracle price data\\n    mapping(address => bool) public isWhiteListed;\\n\\n    /// @notice return true if address can update price\\n    mapping(address => bool) public isUpdater;\\n\\n    /// @dev chainlink Price feed for ETH / USD\\n    IChainlinkV3Aggregator public override etherPriceAggregator;\\n\\n    /// @dev decimal\\n    uint8 public constant decimals = 8;\\n\\n    modifier onlyUpdater() {\\n        require(isUpdater[msg.sender] || msg.sender == owner(), 'ONLY_UPDATERS');\\n        _;\\n    }\\n\\n    modifier onlyWhitelist() {\\n        require(isWhiteListed[msg.sender] || msg.sender == owner(), 'ONLY_WHITELIST');\\n        _;\\n    }\\n\\n    event SetUpdaters(address[] _updaters, bool[] _statusList);\\n    event SetWhiteList(address[] _whiteList, bool[] _statusList);\\n    event SetPrice(address _contract, int256 _usdPrice, int256 _etherPrice, address _updater);\\n\\n    constructor(address _etherUSDAggregator) {\\n        etherPriceAggregator = IChainlinkV3Aggregator(_etherUSDAggregator);\\n    }\\n\\n    /// @dev set new updaters that can write NFT price\\n    /// @param _updaters address array of updaters\\n    /// @param _statusList status array of updaters\\n    function setUpdaters(address[] memory _updaters, bool[] memory _statusList) external onlyOwner {\\n        require(\\n            _updaters.length > 0 &&\\n                _statusList.length > 0 &&\\n                _statusList.length == _statusList.length,\\n            'setUpdaters:INVALID_DATA'\\n        );\\n        for (uint256 i = 0; i < _updaters.length; i++) {\\n            require(_updaters[i] != address(0), 'setUpdaters:INVALID_UPDATER');\\n            isUpdater[_updaters[i]] = _statusList[i];\\n        }\\n\\n        emit SetUpdaters(_updaters, _statusList);\\n    }\\n\\n    /// @dev set new price for the NFT\\n    /// @param _contract address of collection contract\\n    /// @param _usdPrice usd price of NFT token (decimal is 8)\\n    function setPrice(address _contract, int256 _usdPrice) external onlyUpdater {\\n        require(_contract != address(0), 'setPrice: INVALID_CONTRACT');\\n        require(_usdPrice > 0, 'setPrice: INVALID_USD_PRICE');\\n\\n        int256 _etherPrice = (_usdPrice * 1e8) / etherUSD();\\n\\n        nftPrices[_contract] = PriceInfo({\\n            usdPrice: _usdPrice,\\n            etherPrice: _etherPrice,\\n            lastUpdatedBlockNumber: block.number\\n        });\\n\\n        emit SetPrice(_contract, _usdPrice, _etherPrice, msg.sender);\\n    }\\n\\n    /// @dev set whitelisted address that can read oracle price data\\n    /// @param _whiteList address array\\n    /// @param _statusList status array\\n    function setWhiteList(address[] memory _whiteList, bool[] memory _statusList)\\n        public\\n        override\\n        onlyOwner\\n    {\\n        require(\\n            _whiteList.length > 0 &&\\n                _statusList.length > 0 &&\\n                _whiteList.length == _statusList.length,\\n            'setWhiteList:INVALID_DATA'\\n        );\\n        for (uint256 i = 0; i < _whiteList.length; i++) {\\n            require(_whiteList[i] != address(0), 'setWhiteList:INVALID_ADDRESS');\\n            isWhiteListed[_whiteList[i]] = _statusList[i];\\n        }\\n\\n        emit SetWhiteList(_whiteList, _statusList);\\n    }\\n\\n    /// @return usd & ether price of NFT token\\n    function viewPrice(address _contract)\\n        external\\n        view\\n        override\\n        onlyWhitelist\\n        returns (int256, int256)\\n    {\\n        require(_contract != address(0), 'viewPrice: INVALID_CONTRACT');\\n        PriceInfo memory nft = nftPrices[_contract];\\n        return (nft.usdPrice, nft.etherPrice);\\n    }\\n\\n    /// @return price of ether in USD\\n    function etherUSD() public view override returns (int256 price) {\\n        (, price, , , ) = etherPriceAggregator.latestRoundData();\\n    }\\n}\\n\",\"keccak256\":\"0x2285e61a701c8d35e8fb96481a8be681e22f5dbd9308dfbfad61fe0a49eb70b1\",\"license\":\"Unlicense\"},\"contracts/interfaces/IChainlinkV3Aggregator.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\ninterface IChainlinkV3Aggregator {\\n    function decimals() external view returns (uint8);\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x21822e9fba0ff238d3e19cb89b126c1266a40ec1251918ba037a0eac05f865da\",\"license\":\"Unlicense\"},\"contracts/interfaces/INFTPriceOracle.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport './IChainlinkV3Aggregator.sol';\\n\\ninterface INFTPriceOracle {\\n    /// @dev priceInfo of NFT\\n    struct PriceInfo {\\n        int256 usdPrice;\\n        int256 etherPrice;\\n        uint256 lastUpdatedBlockNumber;\\n    }\\n\\n    /// @dev chainlink Price feed for ETH / USD\\n    function etherPriceAggregator() external returns (IChainlinkV3Aggregator);\\n\\n    /// @dev set whitelisted address that can read oracle price data\\n    function setWhiteList(address[] memory _whiteList, bool[] memory _statusList) external;\\n\\n    /// @return usd & ether price of NFT token\\n    function viewPrice(address _contract) external returns (int256, int256);\\n\\n    /// @return price: usd price of Ether\\n    function etherUSD() external returns (int256);\\n}\\n\",\"keccak256\":\"0x417184f08398670703a5fb7d31286138b304990547e232ca8720ab84399cb11e\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200214838038062002148833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b611f3c806200020c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636f9170f61161008c5780638e069115116100665780638e06911514610201578063a0868e2b1461021f578063cc5fe3ab14610251578063f2fde38b1461026d576100cf565b80636f9170f6146101a9578063715018a6146101d95780638da5cb5b146101e3576100cf565b8063034dd29b146100d4578063173a0da2146100f05780631744276d1461010e5780632f55b50d1461013f578063313ce5671461015b5780634fdfb08614610179575b600080fd5b6100ee60048036038101906100e991906111b1565b610289565b005b6100f86104e8565b6040516101059190611682565b60405180910390f35b61012860048036038101906101239190611188565b61059c565b60405161013692919061169d565b60405180910390f35b610159600480360381019061015491906111ed565b610758565b005b610163610a16565b604051610170919061185d565b60405180910390f35b610193600480360381019061018e9190611188565b610a1b565b6040516101a0919061164c565b60405180910390f35b6101c360048036038101906101be9190611188565b610a3b565b6040516101d0919061164c565b60405180910390f35b6101e1610a5b565b005b6101eb610ae3565b6040516101f891906115b5565b60405180910390f35b610209610b0c565b6040516102169190611667565b60405180910390f35b61023960048036038101906102349190611188565b610b32565b604051610248939291906116c6565b60405180910390f35b61026b600480360381019061026691906111ed565b610b5c565b005b61028760048036038101906102829190611188565b610e1a565b005b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061031357506102e4610ae3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610352576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103499061183d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b9906117dd565b60405180910390fd5b60008113610405576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fc9061181d565b60405180910390fd5b600061040f6104e8565b6305f5e1008361041f91906119e2565b6104299190611978565b9050604051806060016040528083815260200182815260200143815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050507f22774737ba002bafce363c9eff3c94bad664e904387dc57d10a83aaffb83e23e838383336040516104db94939291906115d0565b60405180910390a1505050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561055257600080fd5b505afa158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058a9190611259565b90919293509091509050508091505090565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061062957506105fa610ae3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f9061171d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cf9061175d565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820154815250509050806000015181602001519250925050915091565b610760610f12565b73ffffffffffffffffffffffffffffffffffffffff1661077e610ae3565b73ffffffffffffffffffffffffffffffffffffffff16146107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb906117fd565b60405180910390fd5b600082511180156107e6575060008151115b80156107f3575080518151145b610832576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108299061177d565b60405180910390fd5b60005b82518110156109d857600073ffffffffffffffffffffffffffffffffffffffff1683828151811061088f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156108ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e59061173d565b60405180910390fd5b818181518110610927577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516003600085848151811061096c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806109d090611bc3565b915050610835565b507fe50da557bf43fec25d895622272ef6347b5a619981d17f86766ef104a1e4b2118282604051610a0a929190611615565b60405180910390a15050565b600881565b60036020528060005260406000206000915054906101000a900460ff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b610a63610f12565b73ffffffffffffffffffffffffffffffffffffffff16610a81610ae3565b73ffffffffffffffffffffffffffffffffffffffff1614610ad7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ace906117fd565b60405180910390fd5b610ae16000610f1a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b610b64610f12565b73ffffffffffffffffffffffffffffffffffffffff16610b82610ae3565b73ffffffffffffffffffffffffffffffffffffffff1614610bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcf906117fd565b60405180910390fd5b60008251118015610bea575060008151115b8015610bf7575080518251145b610c36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2d906117bd565b60405180910390fd5b60005b8251811015610ddc57600073ffffffffffffffffffffffffffffffffffffffff16838281518110610c93577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415610cf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce99061179d565b60405180910390fd5b818181518110610d2b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160026000858481518110610d70577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610dd490611bc3565b915050610c39565b507f849bc039c6dbcf9934f2e6d667158c8c6bdd9487a4154c25d0662a293bdd91eb8282604051610e0e929190611615565b60405180910390a15050565b610e22610f12565b73ffffffffffffffffffffffffffffffffffffffff16610e40610ae3565b73ffffffffffffffffffffffffffffffffffffffff1614610e96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8d906117fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efd906116fd565b60405180910390fd5b610f0f81610f1a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610ff1610fec8461189d565b611878565b9050808382526020820190508285602086028201111561101057600080fd5b60005b85811015611040578161102688826110b6565b845260208401935060208301925050600181019050611013565b5050509392505050565b600061105d611058846118c9565b611878565b9050808382526020820190508285602086028201111561107c57600080fd5b60005b858110156110ac5781611092888261111f565b84526020840193506020830192505060018101905061107f565b5050509392505050565b6000813590506110c581611e93565b92915050565b600082601f8301126110dc57600080fd5b81356110ec848260208601610fde565b91505092915050565b600082601f83011261110657600080fd5b813561111684826020860161104a565b91505092915050565b60008135905061112e81611eaa565b92915050565b60008135905061114381611ec1565b92915050565b60008151905061115881611ec1565b92915050565b60008151905061116d81611ed8565b92915050565b60008151905061118281611eef565b92915050565b60006020828403121561119a57600080fd5b60006111a8848285016110b6565b91505092915050565b600080604083850312156111c457600080fd5b60006111d2858286016110b6565b92505060206111e385828601611134565b9150509250929050565b6000806040838503121561120057600080fd5b600083013567ffffffffffffffff81111561121a57600080fd5b611226858286016110cb565b925050602083013567ffffffffffffffff81111561124357600080fd5b61124f858286016110f5565b9150509250929050565b600080600080600060a0868803121561127157600080fd5b600061127f88828901611173565b955050602061129088828901611149565b94505060406112a18882890161115e565b93505060606112b28882890161115e565b92505060806112c388828901611173565b9150509295509295909350565b60006112dc8383611300565b60208301905092915050565b60006112f483836113da565b60208301905092915050565b61130981611af9565b82525050565b61131881611af9565b82525050565b600061132982611915565b6113338185611945565b935061133e836118f5565b8060005b8381101561136f57815161135688826112d0565b97506113618361192b565b925050600181019050611342565b5085935050505092915050565b600061138782611920565b6113918185611956565b935061139c83611905565b8060005b838110156113cd5781516113b488826112e8565b97506113bf83611938565b9250506001810190506113a0565b5085935050505092915050565b6113e381611b0b565b82525050565b6113f281611b0b565b82525050565b61140181611b6e565b82525050565b61141081611b17565b82525050565b6000611423602683611967565b915061142e82611caa565b604082019050919050565b6000611446600e83611967565b915061145182611cf9565b602082019050919050565b6000611469601b83611967565b915061147482611d22565b602082019050919050565b600061148c601b83611967565b915061149782611d4b565b602082019050919050565b60006114af601883611967565b91506114ba82611d74565b602082019050919050565b60006114d2601c83611967565b91506114dd82611d9d565b602082019050919050565b60006114f5601983611967565b915061150082611dc6565b602082019050919050565b6000611518601a83611967565b915061152382611def565b602082019050919050565b600061153b602083611967565b915061154682611e18565b602082019050919050565b600061155e601b83611967565b915061156982611e41565b602082019050919050565b6000611581600d83611967565b915061158c82611e6a565b602082019050919050565b6115a081611b41565b82525050565b6115af81611b4b565b82525050565b60006020820190506115ca600083018461130f565b92915050565b60006080820190506115e5600083018761130f565b6115f26020830186611407565b6115ff6040830185611407565b61160c606083018461130f565b95945050505050565b6000604082019050818103600083015261162f818561131e565b90508181036020830152611643818461137c565b90509392505050565b600060208201905061166160008301846113e9565b92915050565b600060208201905061167c60008301846113f8565b92915050565b60006020820190506116976000830184611407565b92915050565b60006040820190506116b26000830185611407565b6116bf6020830184611407565b9392505050565b60006060820190506116db6000830186611407565b6116e86020830185611407565b6116f56040830184611597565b949350505050565b6000602082019050818103600083015261171681611416565b9050919050565b6000602082019050818103600083015261173681611439565b9050919050565b600060208201905081810360008301526117568161145c565b9050919050565b600060208201905081810360008301526117768161147f565b9050919050565b60006020820190508181036000830152611796816114a2565b9050919050565b600060208201905081810360008301526117b6816114c5565b9050919050565b600060208201905081810360008301526117d6816114e8565b9050919050565b600060208201905081810360008301526117f68161150b565b9050919050565b600060208201905081810360008301526118168161152e565b9050919050565b6000602082019050818103600083015261183681611551565b9050919050565b6000602082019050818103600083015261185681611574565b9050919050565b600060208201905061187260008301846115a6565b92915050565b6000611882611893565b905061188e8282611b92565b919050565b6000604051905090565b600067ffffffffffffffff8211156118b8576118b7611c6a565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156118e4576118e3611c6a565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061198382611b17565b915061198e83611b17565b92508261199e5761199d611c3b565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156119d7576119d6611c0c565b5b828205905092915050565b60006119ed82611b17565b91506119f883611b17565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615611a3757611a36611c0c565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615611a7457611a73611c0c565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615611ab157611ab0611c0c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615611aee57611aed611c0c565b5b828202905092915050565b6000611b0482611b21565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b6000611b7982611b80565b9050919050565b6000611b8b82611b21565b9050919050565b611b9b82611c99565b810181811067ffffffffffffffff82111715611bba57611bb9611c6a565b5b80604052505050565b6000611bce82611b41565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c0157611c00611c0c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f4e4c595f57484954454c495354000000000000000000000000000000000000600082015250565b7f73657455706461746572733a494e56414c49445f555044415445520000000000600082015250565b7f7669657750726963653a20494e56414c49445f434f4e54524143540000000000600082015250565b7f73657455706461746572733a494e56414c49445f444154410000000000000000600082015250565b7f73657457686974654c6973743a494e56414c49445f4144445245535300000000600082015250565b7f73657457686974654c6973743a494e56414c49445f4441544100000000000000600082015250565b7f73657450726963653a20494e56414c49445f434f4e5452414354000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f73657450726963653a20494e56414c49445f5553445f50524943450000000000600082015250565b7f4f4e4c595f555044415445525300000000000000000000000000000000000000600082015250565b611e9c81611af9565b8114611ea757600080fd5b50565b611eb381611b0b565b8114611ebe57600080fd5b50565b611eca81611b17565b8114611ed557600080fd5b50565b611ee181611b41565b8114611eec57600080fd5b50565b611ef881611b58565b8114611f0357600080fd5b5056fea2646970667358221220c608322f6901804a95d7afb071d073b1a18355ae6f729ffa0bfb1ec028bf75cc64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636f9170f61161008c5780638e069115116100665780638e06911514610201578063a0868e2b1461021f578063cc5fe3ab14610251578063f2fde38b1461026d576100cf565b80636f9170f6146101a9578063715018a6146101d95780638da5cb5b146101e3576100cf565b8063034dd29b146100d4578063173a0da2146100f05780631744276d1461010e5780632f55b50d1461013f578063313ce5671461015b5780634fdfb08614610179575b600080fd5b6100ee60048036038101906100e991906111b1565b610289565b005b6100f86104e8565b6040516101059190611682565b60405180910390f35b61012860048036038101906101239190611188565b61059c565b60405161013692919061169d565b60405180910390f35b610159600480360381019061015491906111ed565b610758565b005b610163610a16565b604051610170919061185d565b60405180910390f35b610193600480360381019061018e9190611188565b610a1b565b6040516101a0919061164c565b60405180910390f35b6101c360048036038101906101be9190611188565b610a3b565b6040516101d0919061164c565b60405180910390f35b6101e1610a5b565b005b6101eb610ae3565b6040516101f891906115b5565b60405180910390f35b610209610b0c565b6040516102169190611667565b60405180910390f35b61023960048036038101906102349190611188565b610b32565b604051610248939291906116c6565b60405180910390f35b61026b600480360381019061026691906111ed565b610b5c565b005b61028760048036038101906102829190611188565b610e1a565b005b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061031357506102e4610ae3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610352576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103499061183d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b9906117dd565b60405180910390fd5b60008113610405576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fc9061181d565b60405180910390fd5b600061040f6104e8565b6305f5e1008361041f91906119e2565b6104299190611978565b9050604051806060016040528083815260200182815260200143815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050507f22774737ba002bafce363c9eff3c94bad664e904387dc57d10a83aaffb83e23e838383336040516104db94939291906115d0565b60405180910390a1505050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561055257600080fd5b505afa158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058a9190611259565b90919293509091509050508091505090565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061062957506105fa610ae3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f9061171d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cf9061175d565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820154815250509050806000015181602001519250925050915091565b610760610f12565b73ffffffffffffffffffffffffffffffffffffffff1661077e610ae3565b73ffffffffffffffffffffffffffffffffffffffff16146107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb906117fd565b60405180910390fd5b600082511180156107e6575060008151115b80156107f3575080518151145b610832576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108299061177d565b60405180910390fd5b60005b82518110156109d857600073ffffffffffffffffffffffffffffffffffffffff1683828151811061088f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156108ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e59061173d565b60405180910390fd5b818181518110610927577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516003600085848151811061096c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806109d090611bc3565b915050610835565b507fe50da557bf43fec25d895622272ef6347b5a619981d17f86766ef104a1e4b2118282604051610a0a929190611615565b60405180910390a15050565b600881565b60036020528060005260406000206000915054906101000a900460ff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b610a63610f12565b73ffffffffffffffffffffffffffffffffffffffff16610a81610ae3565b73ffffffffffffffffffffffffffffffffffffffff1614610ad7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ace906117fd565b60405180910390fd5b610ae16000610f1a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b610b64610f12565b73ffffffffffffffffffffffffffffffffffffffff16610b82610ae3565b73ffffffffffffffffffffffffffffffffffffffff1614610bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcf906117fd565b60405180910390fd5b60008251118015610bea575060008151115b8015610bf7575080518251145b610c36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2d906117bd565b60405180910390fd5b60005b8251811015610ddc57600073ffffffffffffffffffffffffffffffffffffffff16838281518110610c93577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415610cf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce99061179d565b60405180910390fd5b818181518110610d2b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160026000858481518110610d70577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610dd490611bc3565b915050610c39565b507f849bc039c6dbcf9934f2e6d667158c8c6bdd9487a4154c25d0662a293bdd91eb8282604051610e0e929190611615565b60405180910390a15050565b610e22610f12565b73ffffffffffffffffffffffffffffffffffffffff16610e40610ae3565b73ffffffffffffffffffffffffffffffffffffffff1614610e96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8d906117fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efd906116fd565b60405180910390fd5b610f0f81610f1a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610ff1610fec8461189d565b611878565b9050808382526020820190508285602086028201111561101057600080fd5b60005b85811015611040578161102688826110b6565b845260208401935060208301925050600181019050611013565b5050509392505050565b600061105d611058846118c9565b611878565b9050808382526020820190508285602086028201111561107c57600080fd5b60005b858110156110ac5781611092888261111f565b84526020840193506020830192505060018101905061107f565b5050509392505050565b6000813590506110c581611e93565b92915050565b600082601f8301126110dc57600080fd5b81356110ec848260208601610fde565b91505092915050565b600082601f83011261110657600080fd5b813561111684826020860161104a565b91505092915050565b60008135905061112e81611eaa565b92915050565b60008135905061114381611ec1565b92915050565b60008151905061115881611ec1565b92915050565b60008151905061116d81611ed8565b92915050565b60008151905061118281611eef565b92915050565b60006020828403121561119a57600080fd5b60006111a8848285016110b6565b91505092915050565b600080604083850312156111c457600080fd5b60006111d2858286016110b6565b92505060206111e385828601611134565b9150509250929050565b6000806040838503121561120057600080fd5b600083013567ffffffffffffffff81111561121a57600080fd5b611226858286016110cb565b925050602083013567ffffffffffffffff81111561124357600080fd5b61124f858286016110f5565b9150509250929050565b600080600080600060a0868803121561127157600080fd5b600061127f88828901611173565b955050602061129088828901611149565b94505060406112a18882890161115e565b93505060606112b28882890161115e565b92505060806112c388828901611173565b9150509295509295909350565b60006112dc8383611300565b60208301905092915050565b60006112f483836113da565b60208301905092915050565b61130981611af9565b82525050565b61131881611af9565b82525050565b600061132982611915565b6113338185611945565b935061133e836118f5565b8060005b8381101561136f57815161135688826112d0565b97506113618361192b565b925050600181019050611342565b5085935050505092915050565b600061138782611920565b6113918185611956565b935061139c83611905565b8060005b838110156113cd5781516113b488826112e8565b97506113bf83611938565b9250506001810190506113a0565b5085935050505092915050565b6113e381611b0b565b82525050565b6113f281611b0b565b82525050565b61140181611b6e565b82525050565b61141081611b17565b82525050565b6000611423602683611967565b915061142e82611caa565b604082019050919050565b6000611446600e83611967565b915061145182611cf9565b602082019050919050565b6000611469601b83611967565b915061147482611d22565b602082019050919050565b600061148c601b83611967565b915061149782611d4b565b602082019050919050565b60006114af601883611967565b91506114ba82611d74565b602082019050919050565b60006114d2601c83611967565b91506114dd82611d9d565b602082019050919050565b60006114f5601983611967565b915061150082611dc6565b602082019050919050565b6000611518601a83611967565b915061152382611def565b602082019050919050565b600061153b602083611967565b915061154682611e18565b602082019050919050565b600061155e601b83611967565b915061156982611e41565b602082019050919050565b6000611581600d83611967565b915061158c82611e6a565b602082019050919050565b6115a081611b41565b82525050565b6115af81611b4b565b82525050565b60006020820190506115ca600083018461130f565b92915050565b60006080820190506115e5600083018761130f565b6115f26020830186611407565b6115ff6040830185611407565b61160c606083018461130f565b95945050505050565b6000604082019050818103600083015261162f818561131e565b90508181036020830152611643818461137c565b90509392505050565b600060208201905061166160008301846113e9565b92915050565b600060208201905061167c60008301846113f8565b92915050565b60006020820190506116976000830184611407565b92915050565b60006040820190506116b26000830185611407565b6116bf6020830184611407565b9392505050565b60006060820190506116db6000830186611407565b6116e86020830185611407565b6116f56040830184611597565b949350505050565b6000602082019050818103600083015261171681611416565b9050919050565b6000602082019050818103600083015261173681611439565b9050919050565b600060208201905081810360008301526117568161145c565b9050919050565b600060208201905081810360008301526117768161147f565b9050919050565b60006020820190508181036000830152611796816114a2565b9050919050565b600060208201905081810360008301526117b6816114c5565b9050919050565b600060208201905081810360008301526117d6816114e8565b9050919050565b600060208201905081810360008301526117f68161150b565b9050919050565b600060208201905081810360008301526118168161152e565b9050919050565b6000602082019050818103600083015261183681611551565b9050919050565b6000602082019050818103600083015261185681611574565b9050919050565b600060208201905061187260008301846115a6565b92915050565b6000611882611893565b905061188e8282611b92565b919050565b6000604051905090565b600067ffffffffffffffff8211156118b8576118b7611c6a565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156118e4576118e3611c6a565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061198382611b17565b915061198e83611b17565b92508261199e5761199d611c3b565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156119d7576119d6611c0c565b5b828205905092915050565b60006119ed82611b17565b91506119f883611b17565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615611a3757611a36611c0c565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615611a7457611a73611c0c565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615611ab157611ab0611c0c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615611aee57611aed611c0c565b5b828202905092915050565b6000611b0482611b21565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b6000611b7982611b80565b9050919050565b6000611b8b82611b21565b9050919050565b611b9b82611c99565b810181811067ffffffffffffffff82111715611bba57611bb9611c6a565b5b80604052505050565b6000611bce82611b41565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c0157611c00611c0c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f4e4c595f57484954454c495354000000000000000000000000000000000000600082015250565b7f73657455706461746572733a494e56414c49445f555044415445520000000000600082015250565b7f7669657750726963653a20494e56414c49445f434f4e54524143540000000000600082015250565b7f73657455706461746572733a494e56414c49445f444154410000000000000000600082015250565b7f73657457686974654c6973743a494e56414c49445f4144445245535300000000600082015250565b7f73657457686974654c6973743a494e56414c49445f4441544100000000000000600082015250565b7f73657450726963653a20494e56414c49445f434f4e5452414354000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f73657450726963653a20494e56414c49445f5553445f50524943450000000000600082015250565b7f4f4e4c595f555044415445525300000000000000000000000000000000000000600082015250565b611e9c81611af9565b8114611ea757600080fd5b50565b611eb381611b0b565b8114611ebe57600080fd5b50565b611eca81611b17565b8114611ed557600080fd5b50565b611ee181611b41565b8114611eec57600080fd5b50565b611ef881611b58565b8114611f0357600080fd5b5056fea2646970667358221220c608322f6901804a95d7afb071d073b1a18355ae6f729ffa0bfb1ec028bf75cc64736f6c63430008040033",
  "devdoc": {
    "author": "@commonlot",
    "kind": "dev",
    "methods": {
      "etherUSD()": {
        "returns": {
          "price": "of ether in USD"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setPrice(address,int256)": {
        "details": "set new price for the NFT",
        "params": {
          "_contract": "address of collection contract",
          "_usdPrice": "usd price of NFT token (decimal is 8)"
        }
      },
      "setUpdaters(address[],bool[])": {
        "details": "set new updaters that can write NFT price",
        "params": {
          "_statusList": "status array of updaters",
          "_updaters": "address array of updaters"
        }
      },
      "setWhiteList(address[],bool[])": {
        "details": "set whitelisted address that can read oracle price data",
        "params": {
          "_statusList": "status array",
          "_whiteList": "address array"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "viewPrice(address)": {
        "returns": {
          "_0": "usd & ether price of NFT token"
        }
      }
    },
    "stateVariables": {
      "decimals": {
        "details": "decimal"
      },
      "etherPriceAggregator": {
        "details": "chainlink Price feed for ETH / USD"
      },
      "isWhiteListed": {
        "details": "return true when address can read oracle price data"
      },
      "nftPrices": {
        "details": "contract addrss => PriceInfo"
      }
    },
    "title": "MetaVerseNFTOracle",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isUpdater(address)": {
        "notice": "return true if address can update price"
      }
    },
    "notice": "oracle contract for NFT",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 142,
        "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
        "label": "nftPrices",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(PriceInfo)521_storage)"
      },
      {
        "astId": 147,
        "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
        "label": "isWhiteListed",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 152,
        "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
        "label": "isUpdater",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 157,
        "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
        "label": "etherPriceAggregator",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IChainlinkV3Aggregator)511"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IChainlinkV3Aggregator)511": {
        "encoding": "inplace",
        "label": "contract IChainlinkV3Aggregator",
        "numberOfBytes": "20"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(PriceInfo)521_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct INFTPriceOracle.PriceInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(PriceInfo)521_storage"
      },
      "t_struct(PriceInfo)521_storage": {
        "encoding": "inplace",
        "label": "struct INFTPriceOracle.PriceInfo",
        "members": [
          {
            "astId": 516,
            "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
            "label": "usdPrice",
            "offset": 0,
            "slot": "0",
            "type": "t_int256"
          },
          {
            "astId": 518,
            "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
            "label": "etherPrice",
            "offset": 0,
            "slot": "1",
            "type": "t_int256"
          },
          {
            "astId": 520,
            "contract": "contracts/MetaVerseNFTOracle.sol:MetaVerseNFTOracle",
            "label": "lastUpdatedBlockNumber",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}